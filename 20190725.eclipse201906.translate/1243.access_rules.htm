<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <meta name="copyright" content="Copyright (c) IBM Corporation and others 2005, 2012. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
    <meta http-equiv="Content-Style-Type" content="text/css"></meta>
    <link href="../../../book.css" rel="stylesheet" type="text/css"></link>
    <title>访问规则</title>
    <script type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" language="JavaScript"></script>
    <style type="text/css">/*     3Cspan class=    22notranslate hidefromparserselfclosedtags    22 gtc:attrval=    22    26lt;![CDATA[ */
p.c1 {
  text-align: center;
}
/* ]]    26gt;    22    3EFORMAT_PLACEHOLDER_176    3C/span    3E */
</style>
  </head>
  <body dir="ltr">
    <h1>访问规则</h1>
    <p>Eclipse 3.1运行时为插件开发人员提供了在每个包基础上控制下游插件的插件代码可见性的选项。
    </p>

    <p>包裹可分为以下之一：</p>
    <ol>
      <li>无障碍</li>
      <li>被禁止</li>
      <li>内部</li>
      <li>内部与朋友</li>

    </ol>
    <p>PDE在编译时将这些运行时可见性规则转换为编译器访问限制规则。因此，编译器会将违反可见性规则的行为标记为警告或错误 - 具体取决于该违规的严重性。
    </p>
    <p>在编译时使用这种类型的支持，运行时类加载错误永远不会让人惊讶，并且始终知道内部类型引用。
    </p>
    <h2>无障碍套餐</h2>

    <p>无条件地向下游插件显示可访问包。虽然API包必须明确属于这一类，但完全由开发人员决定插件导出的其他包应该具有这种可见性级别。
    </p>
    <p>要将包声明为可访问，必须在插件清单编辑器的<b>运行时</b>的“ <b>导出的包”</b>部分中列出它，并保持默认的可见性设置不变。
    </p>

    <p>
      <img src="../../../images/access_restrictions/visible.png" alt="无障碍套餐">
    </p>
    <p class="c1">
       
    </p>
    <h2>禁止的包裹</h2>

    <p>您可以始终从下游插件中隐藏包，方法是<b>将</b>其从插件清单编辑器的“ <b>运行时”</b>页面的“ <b>导出的包”</b>部分的列表中<b>排除</b> 。
    </p>
    <p>对<em>禁用</em>包中的类型的引用会导致运行时类加载错误。
    </p>

    <p>为了避免这种不愉快的情况：</p>
    <ol>
      <li>编译器将标记对带有错误的禁用包的引用。
      </li>
      <li>禁止包中的类型不能作为内容辅助中的提议使用。
      </li>
    </ol>
    <p>

      <em>笔记：</em>
    </p>
    <ol>
      <li>Eclipse SDK中的所有插件都枚举<strong>Exported Packages</strong>部分中的所有包。因此，SDK中没有任何软件包禁止访问。
      </li>
      <li>禁用引用的严重性级别在。上设置<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开问题严重性首选项页面"> <strong>Java&gt;编译器&gt;错误/警告&gt;不推荐使用和受限制的API</strong></a>首选项页面。
        <p>强烈建议禁止引用的严重性保持错误。
        </p>
      </li>

    </ol>
    <p>
      <img src="../../../images/access_restrictions/forbidden.png" alt="禁止的偏好" border="0">
    </p>
    <h2>内部包裹</h2>
    <p>内部包是不打算供下游插件使用的包。<em><strong>默认情况下，</strong> <strong>这些包对下游插件可见</strong></em> 。
    </p>
    <p>仅当Eclipse以<em><strong>严格</strong></em>模式启动时（即，使用<em>-Dosgi.resolverMode = strict</em> VM参数启动时），内部包才会从下游插件中隐藏。
    </p>
    <p>必须在插件清单编辑器的“ <b>运行时”</b>页面的“ <b>导出的包”</b>部分中列出内部包，并选择<i><b>隐藏</b></i>选项。
    </p>
    <p>
      <img src="../../../images/access_restrictions/hidden.png" alt="气馁的访问">
    </p>

    <p>采取了两项措施来阻止下游插件引用内部包：</p>
    <ul>
      <li>编译器使用<em>警告</em>标记对内部包的引用。
      </li>
    </ul>
    <p>
      <img src="../../../images/access_restrictions/compiler.png" alt="气馁的访问">

    </p>
    <ul>
      <li>不鼓励的套餐中的类型可作为内容辅助提案提供;但是，优先级较低。
      </li>
    </ul>
    <p>
      <img src="../../../images/access_restrictions/content_assist.png" alt="气馁的内容协助">
    </p>
    <p>不鼓励参考的严重性级别可以在<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开问题严重性首选项页面"> <strong>Java&gt;编译器&gt;错误/警告&gt;不推荐使用和受限制的API</strong></a>首选项页面。
    </p>

    <p>
      <img src="../../../images/access_restrictions/discouraged.png" alt="气馁的偏好" border="0">
    </p>
    <h2>内部包与朋友</h2>
    <p>重要的是，插件能够将其内部包的完全访问权限授予指定的“朋友”插件。例如，PDE代码分为多个插件， <em>org.eclipse.pde.ui</em>插件应该具有对<em>org.eclipse.pde.core</em>内部包的完全访问权限。
    </p>

    <p>在下面的示例中， <em>org.eclipse.pde.ui</em>朋友插件可以完全访问<em>org.eclipse.pde.core</em>插件中的<em>org.eclipse.pde.internal.core.bundle</em>包。
    </p>
    <p>

      <img src="../../../images/access_restrictions/friend.png" alt="友">
    </p>
    <p>朋友可以使用编译器的祝福自由地引用<em>org.eclipse.pde.internal.core.bundle</em>包中的任何类型。
    </p>
    <p>另一方面，如果任何其他插件引用<em>org.eclipse.pde.internal.core.bundle</em>包中的类型，则编译器将引用标记为不鼓励的引用，如上一节中所述。
    </p>
    <h2>如何启用访问限制</h2>
    <p>要利用PDE访问限制支持，唯一的要求是所涉及的插件包含OSGi包<em>MANIFEST.MF</em> 。 PDE将负责其余工作，包括插件类路径的管理。
    </p>
    <p>如果插件不包含<em>MANIFEST.MF</em>文件，则可以按如下方式创建该文件：</p>
    <ol>
      <li>在插件清单编辑器中打开<em>plugin.xml</em> 。
      </li>
      <li>在<strong>Overview</strong>页面的<strong>Plug-in Content</strong>部分中，单击' <strong>create an OSGi bundle manifest</strong> '链接。
      </li>

    </ol>
    <p>
      <img src="../../../images/access_restrictions/convert.PNG" alt="转换为manifest.mf">
    </p>
    <h2>检查访问规则</h2>
    <p>您可以在插件项目的<strong>Java Build Path</strong>属性页上检查PDE对每个类路径条目强加的访问限制规则。
    </p>

    <p>
      <img src="../../../images/access_restrictions/properties.png" alt="Java构建路径属性">
    </p>
    
<h3 class="related">相关参考</h3>
<a href="./editor.htm">插件编辑器</a><br>
<a href="./overview.htm">概述页面</a><br>
<a href="./dependencies.htm">依赖性页面</a><br>
<a href="./runtime.htm">运行时页面</a><br>
<a href="./extensions.htm">扩展页面</a><br>
<a href="./extension_points.htm">扩展点</a><br>
<a href="./build.htm">构建页面</a>
  </body>
</html>