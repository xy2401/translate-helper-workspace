<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>一个最小的插件</title>


</head>
<body bgcolor="#ffffff" dir="ltr">
<h2>一个最小的插件</h2>
<p>我们都知道在没有使用任何用户界面框架或其他专用库的情况下，普通旧Java中的“Hello World”是什么样的。</p>
<pre>public class HelloWorld {public static void main（String [] args）{System.out.println（“Hello World”）; }}</pre>
<p>在Eclipse平台的上下文中，这个旧标准会发生什么？我们将其重新设计为平台的扩展，而不是将Hello World视为一个独立的程序。既然我们想向世界问好，我们需要弄清楚如何扩展工作台以包含我们的问候语。</p>
<p>当我们深入了解平台用户界面组件时，我们将详细介绍您可以扩展和自定义工作台UI的方法。现在，让我们从一个最简单的工作台扩展开始 - 一个视图。</p>

<p>您可以将工作台窗口视为呈现各种可视部件的框架。这些部分分为两大类：观点和编辑。我们稍后会看编辑。<b>视图</b>提供有关用户在工作台中使用的某些对象的信息。当用户在工作台中选择不同的对象时，视图通常会更改其内容。</p>

<h3>你好世界观</h3>
<p>对于我们的hello world插件，我们将实现自己的视图，以“Hello World”来迎接用户。</p>
<p>插件<b>org.eclipse.ui.workbench</b>定义了构成工作台API的大多数公共接口。这些接口可以在<b><a href="../reference/api/org/eclipse/ui/package-summary.html">org.eclipse.ui</a></b>包及其子包中找到。其中许多接口都有默认的实现类，您可以扩展它们以对系统进行简单的修改。在我们的hello world示例中，我们将扩展工作台视图以提供一个标记为hello的标签。</p>
<p>感兴趣的界面是<b><a href="../reference/api/org/eclipse/ui/IViewPart.html">IViewPart</a></b> ，它定义了为工作台提供视图所必须实现的方法。<b><a href="../reference/api/org/eclipse/ui/part/ViewPart.html">ViewPart</a></b>类提供此接口的默认实现。简而言之，视图部分负责创建显示视图所需的小部件。</p>
<p>工作台中的标准视图通常显示有关用户已选择或正在导航的对象的一些信息。视图根据工作台中发生的操作更新其内容。在我们的例子中，我们只是打招呼，所以我们的视图实现将非常简单。</p>
<p>在进入代码之前，我们需要确保我们的环境已经设置为插件开发......
</p>



</body>
</html>