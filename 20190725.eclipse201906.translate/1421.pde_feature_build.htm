<html lang="zh-Hans" >
<head>
  <meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2009. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <link rel="STYLESHEET" href="../guide/book.css" type="text/css">
  <title>建筑功能</title>
</head>
<body >
<h1>建筑功能</h1>
<p>PDE Build附带了自动化构建功能的基础架构。这种构建所需的大多数设置都可以通过对PDE构建提供的模板build.properties进行一些修改来完成。以下部分重点介绍如何设置一个简单的构建，假设从正在构建的功能引用的所有插件和功能（包括构建和预构建）已在磁盘上本地可用。
</p>
<h2>基本设置</h2>
<h3>构建配置目录</h3>
<p>设置构建的第一步是创建构建配置目录。这是保存控制和自定义无头构建的文件的目录。</p>
<p>用于控制构建的主文件是顶级构建配置build.properties文件。在设置新构建时，请复制您将用于运行构建的eclipse安装中的org.eclipse.pde.build软件包中的模板文件。模板文件位于org.eclipse.pde.build/templates/headless-build/build.properties下。</p>
<p>此目录由<tt>构建器</tt>属性引用，该属性通常在ant命令行上设置。</p>
<h3>buildDirectory</h3>
<p><tt>buildDirectory</tt>属性指定PDE / Build将生成脚本并执行实际构建的目录。正在构建的插件和功能应放在<tt>$ {buildDirectory} / plugins</tt>和<tt>$ {buildDirectory} / features</tt>子目录中。如果正在从存储库中获取包和功能（请参阅<a href="pde_fetch_phase.htm">从存储库中获取</a> ），那么它们也将放在此处。</p>
<p>此目录可以与构建配置目录相同，也可以是不同的目录。可能需要使用单独的目录，特别是如果构建配置保留在CVS中并且您不希望使用生成的构建工件污染它。</p>
<h3>初始属性</h3>
<p>要设置基本功能构建，您需要编辑构建配置build.properties文件并设置以下属性：</p>
<ul>
  <li><span style="font-weight:bold">topLevelElementId</span> ：设置为您要构建的功能的ID。</li>
  <li><span style="font-weight:bold">baseLocation</span> ：eclipse安装的位置，包含<tt>feature /</tt> and <tt>plugins /</tt> subdirectories中的预构建功能和插件。这些是您要编译的二进制文件。如果您没有先决条件二进制文件并且从头开始构建所有内容，则可以不设置此属性。</li>
  <li><span style="font-weight:bold">buildDirectory</span> ：构建将在其中发生的目录。</li>
  <li><span style="font-weight:bold">配置</span> ：列出要为其构建功能的配置。您可以取消注释所提供的配置（注意线路延续）。如果要构建的功能与平台无关，则不需要设置此属性，也可以将其设置为<tt>*，*，*</tt> 。</li>
  <li><span style="font-weight:bold">archivePrefix</span> ：要在磁盘上解压缩功能的目录的名称。</li>
</ul>
<p>以前版本的PDE / Build还需要一个allElements.xml文件，这在3.4中不再需要。仍然可以使用allElements.xml，但只有在您希望自定义构建的某些方面时才需要。请参阅<a href="pde_customization.htm">自定义无头构建</a> 。</p>

<h2>运行构建</h2>
<p>要运行构建，您将使用org.elipse.ant.core.antRunner应用程序。使用此应用程序调用eclipse执行构建时，需要在命令行上设置两个参数：</p>
<ul>
  <li><code>-buildfile=&lt;/path/to/build.xml&gt;</code> ：这是pde build提供的build.xml的路径。它位于org.eclipse.pde.build/scripts目录中。这是驱动整个构建过程的构建脚本。</li>
  <li><code>-Dbuilder=&lt;/path/to/configuration folder&gt;</code> ：这是构建配置文件夹的路径。</li>
</ul>
<p>使用以下命令运行antRunner应用程序：</p>
<br>
<div style="margin-left:40px"><code>java -jar
&lt;eclipseInstall&gt;/plugins/org.eclipse.equinox.launcher_&lt;version&gt;.jar
-application org.eclipse.ant.core.antRunner -buildfile
&lt;&lt;eclipseInstall&gt;/plugins/org.eclipse.pde.build_&lt;version&gt;/scripts/build.xml&gt;
-Dbuilder=&lt;path to the build configuration folder&gt;</code><br>
</div>
<p>构建完成后，您可以在名为I.TestBuild的文件夹中的构建目录中获取结果（可以通过设置buildLabel属性来配置此名称）。</p>
<h2>高级方案</h2>
<p>如果需要更多自定义构建（即从存储库获取），请参阅高级PDE构建主题以获取更多信息。</p>
</body>
</html>