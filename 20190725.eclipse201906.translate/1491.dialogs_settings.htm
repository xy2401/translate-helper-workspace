<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="stylesheet" type="text/css" href="../book.css">
<title>对话框设置</title>


</head>
<body bgcolor="#ffffff" >



<h2>对话框设置</h2>
<p><a href="../reference/api/org/eclipse/jface/dialogs/package-summary.html"><b>org.eclipse.jface.dialogs</b></a>包提供了一个实用程序类<a href="../reference/api/org/eclipse/jface/dialogs/DialogSettings.html"><b>DialogSettings</b></a> ，用于存储和检索键控值。您可以使用此类来保存和检索与键名关联的基本数据类型和字符串值。使用XML文件加载和保存设置。</p>
<p><a href="../reference/api/org/eclipse/ui/plugin/AbstractUIPlugin.html"><b>AbstractUIPlugin</b></a>支持存储在插件目录中的XML文件中的插件宽对话框设置。如果在插件目录中找不到对话框设置文件，则会为您创建一个空的<a href="../reference/api/org/eclipse/jface/dialogs/DialogSettings.html"><b>DialogSettings</b></a> 。当插件关闭时，添加到其中的任何设置都将保存在XML文件中，并在下次启动插件时检索。</p>
<p>您可以在插件代码中的任何位置访问对话框设置。以下代码段显示了如何获取自述文件工具的对话框设置。</p>
<pre>
   IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
</pre>
<p>使用get和put方法存储和检索值。get方法以正在访问的基元类型命名。您可以存储和检索boolean，long，double，float，int，array和string值。以下代码段显示了如何使用对话框设置初始化对话框中的控件值。</p>
<pre>
   protected Control createDialogArea(Composite parent) {
      IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
      checkbox = new Button(parent,SWT.CHECK);
      checkbox.setText(&quot;Generate sample section titles&quot;);
      // initialize the checkbox according to the dialog settings
<b>      checkbox.setSelection(settings.getBoolean(&quot;GenSections&quot;));
</b>   }
</pre>
<p>按下确定按钮后，可以稍后存储设置的值。</p>
<pre>
   protected void okPressed() {
      IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
      // store the value of the generate sections checkbox
<b>      settings.put(&quot;GenSections&quot;, checkbox.getSelection());
</b>      super.okPressed();
   }
</pre>
<h3>对话框边界设置</h3>
<p>通常，对话框设置的定义和解释是您的插件的责任。但是，在JFace对话框框架中定义了一些特定的对话框设置键，用于记住对话框的最后大小和位置，以便可以在下次调用时将对话框打开到该大小和位置。框架将执行查询和存储对话框大小和位置的工作，但您必须实现一个方法，该方法提供应该用于存储对话框边界信息的<a href="../reference/api/org/eclipse/jface/dialogs/IDialogSettings.html"><b>IDialogSettings</b></a>实例。以下代码段显示了<b>SectionsDialog</b>如何利用此功能。
</p>
<pre>
   protected IDialogSettings getDialogBoundsSettings() {
	   return ReadmePlugin.getDefault().getDialogSettings();
   }
</pre>
<p>通过实现此方法， <b>SectionsDialog</b>的大小和位置将存储在插件的对话框设置中的预定义键中，从而导致对话框在其先前位置打开。</p>

</body>
</html>