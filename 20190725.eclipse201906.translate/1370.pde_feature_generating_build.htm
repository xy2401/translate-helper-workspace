<html lang="zh-Hans" dir="ltr">
<head>
  <meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2012. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
  <meta http-equiv="Content-Style-Type" content="text/css"></meta>
  <link rel="STYLESHEET" href="../book.css" type="text/css"></link>
  <title>功能构建配置</title>
</head>
<body dir="ltr" style="background-color:rgb(255,255,255)">
<h3>功能和插件构建配置属性<br>
</h3>
<p>构建机制由构建配置驱动。单个插件，片段或功能的构建配置可在相应元素的<b>build.properties</b>文件中找到。</p>
<p>PDE项目创建向导在创建插件项目时生成<b>build.properties</b>文件。该文件包含有关如何将源文件夹编译为JAR的信息。可以在清单编辑器的“运行时”页面中间接更新此信息。它也可以使用适当的编辑器直接修改。</p>
<p>PDE为具有表单和源视图的<b>build.properties</b>提供了一个简单的编辑器。该文件本身遵循Java属性格式。您需要提供许多键及其相应的值。使用逗号作为分隔符分隔多个值。</p>
<h4>共同属性</h4>
<ul>
  <li><b>bin.includes</b> - 列出将包含在正在构建的插件的二进制版本中的文件;</li>
  <li><b>bin.excludes</b> - 列出要从二进制构建中排除的文件;</li>
</ul>
<ul>
  <li><b>限定符</b> - 当元素版本号以<b>.qualifier</b>结尾时，这表示必须替换“.qualifier”值。属性的值可以是<b>context</b> ， <b>&lt;value&gt;</b>或<b>none</b> 。Context将根据系统日期生成日期，或者在构建自动化时使用CVS标记。价值是实际价值。没有人会删除“.qualifier”。如果省略该属性，则使用上下文。（参见<a href="../tasks/pde_version_qualifiers.htm">版本限定符</a> 。）</li>
</ul>
<ul>
  <li><b>custom = true</b> - 表示构建脚本是手工制作而不是自动生成的。因此，没有咨询其他价值。</li> 	
</ul>
<ul>
  <li><span style="font-weight:bold">customBuildCallbacks</span> - 表示包含使用此功能/插件时要使用的自定义目标的xml文件。（请参阅<a href="../tasks/pde_custom_callbacks.htm">功能和插件自定义构建步骤</a> ）<br>
  </li>
      <li><span style="font-weight:bold">customBuildCallbacks.failonerror</span> - 设置子任务的failonerror参数。默认值为“false”。<br>
  </li>
    <li><span style="font-weight:bold">customBuildCallbacks.buildpath</span> - 设置子任务的buildpath参数。当自定义回调文件的位置不相对于插件的根目录时使用。<br>
  </li>
    <li><span style="font-weight:bold">customBuildCallbacks.inheritall</span> - 设置子任务的inheritall参数。Ant的默认值为false。<br>
  </li>
</ul>
<h4>插件特定属性</h4>
<ul>
  <li><b>source。&lt;library&gt;</b> - 列出将要编译的源文件夹（例如<b>source.xyz.jar = src /，src-ant /</b> ）。如果在plug-in.xml或manifest.mf中指定了库，则该值应与之匹配;</li>
  <li><b>output。&lt;library&gt;</b> - 列出接收编译结果的输出文件夹;</li>
  <li><b>exclude。&lt;library&gt;</b> - 列出编译器不应复制到库中的文件;</li>
  <li> <b>extra。&lt;library&gt;</b> - 用于执行自动构建的额外类路径。类路径可以是相对路径或引用插件和开发环境的片段平台的网址（例如<b>../someplugin/xyz.jar，</b> <b>平台：/plugins/org.apache.ant/ant.jar）。</b>建议在相对路径上使用平台网址;</li>
  <li><b>manifest。&lt;library&gt;</b> - 指示将用作库清单的文件。该文件必须位于用作jar输入的源文件夹之一。</li>
</ul>
<ul>
  <li><b>src.includes</b> - 列出要包含在源代码构建中的文件;</li>
  <li> <b>src.excludes</b> - 列出要从源构建中排除的文件;</li>
</ul>
<ul>
  <li> <b>jars.extra.classpath</b> - <b>（不建议使用）</b>与extra。&lt;library&gt;相同的效果，但条目应用于所有库;</li>
  <li> <b>jars.compile.order</b> - 定义应该编译jar的顺序（如果有多个库）。</li>
</ul>编译器相关选项。另请参阅“ <a href="../tasks/pde_compilation_env.htm">控制编译环境</a>和<a href="../tasks/pde_compiler_options.htm">编译器选项”</a>页面。
<ul>
  <li><span style="font-weight:bold">jre.compilation.profile</span> - 设置用于编译此捆绑包的Environment。
  </li>
  <li><span style="font-weight:bold">javacSource</span> - 设置用于编译此捆绑包的源兼容级别。覆盖jre.compilation.profile。<br>
  </li>
  <li><span style="font-weight:bold">javacTarget</span> - 设置目标.class兼容级别以编译此捆绑包。覆盖jre.compilation.profile。</li>
  <li><span style="font-weight:bold">bootClasspath</span> - 设置引导类路径以编译此捆绑包，覆盖jre.compilation.profile。<br>
  </li>
</ul>
<ul>
  <li><span style="font-weight:bold">javacWarnings。&lt;library&gt;</span> - 设置警告选项以传递给编译器。（请参阅Java开发用户指南中的<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/tasks/task-using_batch_compiler.htm#warn">使用批处理编译器中</a>的-warn选项）。</li>
<li><span style="font-weight:bold">javacErrors。&lt;library&gt;</span> - 设置错误选项以传递给编译器。（请参阅Java开发用户指南中的<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/tasks/task-using_batch_compiler.htm#warn">使用批处理编译器中</a>的-err选项）。</li>
  <li><span style="font-weight:bold">javacDefaultEncoding。&lt;library&gt;</span> - 设置编译给定库时要使用的默认编码。</li>
  <li><span style="font-weight:bold">javacCustomEncodings。&lt;library&gt;</span> - 编译给定库时要使用的逗号分隔的路径和编码列表。例：<br>
    <div style="text-align:center">
    <pre>javacCustomEncodings.library.jar = src / org / foo [US-ASCII]，src / org / foo / bar.java [ISO-8859-1]</pre>
    </div>
  </li>
  <li><b>javacProjectSettings</b> - 指定JDT编译器属性的首选项文件的相对路径。设置为<tt>true</tt>以使用默认的“ <i>.settings / org.eclipse.jdt.core.prefs</i> ”。</li>
  <li><b>compilerArg</b> - 指定自定义编译器参数</li>
  <li><b>compilerAdapter</b> - 指定要使用的自定义编译器适配器，而不是默认的org.eclipse.jdt.core。JDTCompilerAdapter</li>
  <li><b>compilerAdapter.useLog</b> -  true / false：自定义编译器适配器是否应该接收-log参数。</li>
  <li><b>compilerAdapter.useArgFile</b> -  true / false：自定义编译器适配器是否应该接收生成的javaCompiler。&lt;library&gt; .args参数文件。</li> 
  <li><b>sourceFileExtensions</b> - 使用自定义编译器适配器时应视为源的扩展名列表（* .java，* .aj）。</li>
  
</ul>
<p>为这些以“包含”或“排除”结尾的键定义的值表示为Ant“模式”。标准格式给出了预期的结果。例如，“* <b>.jar</b> ”表示顶级目录中的所有jar文件。默认情况下，模式不深。例如，如果要描述所有Java文件，则应使用模式“ <b>** / * .java</b> ”。模式“ <b>**</b> ”匹配任意数量的目录级别。同样，要描述整个子树，请使用“ <b>xyz /</b> ”。</p>
<h4><a name="Feature_specific_properties"></a>功能特定属性</h4>
<ul>
	<li><b>root</b> - 列出必须包含在产品<b>根</b>目录中的文件和文件夹。有关更多详细信息，请参阅<a href="../tasks/pde_rootfiles.htm">Rootfiles帮助页面</a> ，其中包含以下附加属性：<ul>
      <li>root。&lt;config&gt;：每个配置rootfiles。</li>
      <li>root.folder：放置在子文件夹中的rootfiles。</li>
      <li>root.permissions：在rootfiles上执行chmods。</li>
      <li>root.link：为root文件生成软链接。</li>
    </ul>
  </li>
  <li><b>root。&lt;config&gt;</b> - 列出为指定配置构建产品根目录时必须包含的文件和文件夹。 config由用点分隔的配置的三（3）个段组成;</li>
</ul>
<ul>
  <li><b>root.permissions。&lt;permissionValue&gt;</b> - 将chmod的文件和文件夹列出给定值。对文件夹的引用必须以'/'结尾;</li>
  <li><b>root.permissions。&lt;config&gt;。&lt;permissionValue&gt;</b> - 将chmod的文件和文件夹列出为特定配置的给定值。对文件夹的引用必须以'/'结尾;</li>
</ul>
<ul>
  <li><b>root.link</b> - 按对（以逗号分隔）列出需要符号链接的文件和文件夹。第一个条目表示源（unix术语中的目标），第二个条目表示链接名称;</li>
  <li><b>root.link。&lt;config&gt;</b> - 以逗号分隔的文件和文件夹对的列表，需要为特定配置进行符号链接。第一个条目表示源（unix术语中的目标），第二个条目表示链接名称;</li>
</ul>
<ul>
  <li><b>generate.feature @ &lt;featureId&gt;</b> - 表示源要素<b>featureId</b>将是指定为此属性值的要素的源要素。第一个逗号后面列出的值表示要从存储库中提取的元素; （请参阅<a href="../tasks/pde_source_generation.htm">源插件和功能生成</a> ）<br>
  </li>
  <li><b>generate.plugin @ &lt;pluginId&gt;</b> - 表示源插件<b>pluginId</b>将是此属性的指示值的源插件。</li>
</ul>
<ul>
  <li><span style="font-weight:bold">significantVersionDigits</span> - 生成要素版本后缀时使用的有效位数（请参阅<a href="../tasks/pde_version_qualifiers.htm">版本限定符</a> ）<br>
  </li>
  <li><span style="font-weight:bold">generatedVersionLength</span> - 生成的要素版本后缀的长度。<br>
  </li>
</ul>以下示例是从org.eclipse.platform功能的build.properties中提取的。
<pre style="margin-left:40px">bin.includes = EPL-v10.html，feature.xml的，feature.properties，的license.html<br><br>根= rootfiles，配置/<br>root.permissions.755 =蚀<br><br>root.linux.motif.x86 = ../../plugins/platform-launcher/bin/linux/motif,linux.motif<br>root.linux.motif.x86.link = libXm.so.2.1，libXm.so.2，libXm.so.2.1，libXm.so<br>root.linux.motif.x86.permissions.755 = *。*所以<br></pre>
<br>
</body>
</html>