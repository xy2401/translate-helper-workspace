<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>可扩展的复合和截面控件</title>
</head>
<body bgcolor="#ffffff" >

<h1>可扩展的复合和截面控件</h1>
<p><code>ExpandableComposite</code>行为类似于<code>Group</code>控件，可以折叠页面的一部分切换控件：</p>
<div align="left">
	<pre>	ExpandableComposite ec = toolkit.createExpandableComposite(form.getBody(), 
					ExpandableComposite.TREE_NODE|
					ExpandableComposite.CLIENT_INDENT);
	ec.setText(&quot;Expandable Composite title&quot;);
	String ctext = &quot;We will now create a somewhat long text so that &quot;+
	&quot;we can use it as content for the expandable composite. &quot;+
	&quot;Expandable composite is used to hide or show the text using the &quot;+
	&quot;toggle control&quot;;
	Label client = toolkit.createLabel(ec, ctext, SWT.WRAP);
	ec.setClient(client);
	ec.addExpansionListener(new ExpansionAdapter() {
		public void expansionStateChanged(ExpansionEvent e) {
			form.reflow(true);
		}
	});</pre>
</div>
<p><code>ExpandableComposite</code>控件接受许多影响其外观和行为的样式。样式<code>TREE_NODE</code>将创建树窗口小部件中用于展开和折叠节点的切换控件，而<code>TWISTIE</code>将创建三角形样式切换。使用<code>EXPANDED</code>将在初始展开状态下创建控件。如果使用样式<code>COMPACT</code> ，控件将报告折叠状态下的宽度足以仅适合标题行（即折叠时，它将尽可能水平紧凑）。最后， <code>CLIENT_INDENT</code>将缩进客户端以与标题对齐（否则，客户端将与切换控件对齐）。</p>
<p>可扩展复合材料本身负责渲染切换控件和标题。将展开或折叠的控件设置为客户端。请注意客户端是可扩展组合的直接子项的要求。</p>
<p>当扩展状态更改时，可扩展复合会触发<code>ExpansionEvent</code>对象。需要向控件添加扩展侦听器才能在状态更改时重排表单。这是因为扩展导致可扩展复合大小的变化，但是直到下一次布置父级时，更改才会生效（因此我们需要强制它）。</p>
<p><code>Section</code>是可扩展组合的子类，可添加其他功能。它通常用于将表单分区为多个部分，每个部分都有自己的标题和可选描述。什么时候<code>
Section.TITLE_BAR</code>或<code>Section.SHORT_TITLE_BAR</code>样式，标题区域周围的装饰进一步增强了分组。</p>
<p>与<code>ExpandableComposite</code>不同， <code>Section</code>自动处理扩展状态更改时的回流。扩展状态通知的其他有趣用法是延迟创建截面内容，该内容被延迟到该部分被扩展。</p>
</body>
</html>