<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2012. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<script language="JavaScript" type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"></script>
<title>来自JAR Archives的插件</title>
<link href="../../book.css" rel="stylesheet" type="text/css">
</head>

<body >
<h1>来自现有JAR档案的插件</h1>
<p><strong>现有JAR存档</strong>向导中的<strong>插件位于</strong> <a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开Library Plug-in Project向导"> <strong>文件&gt;新建&gt;项目...&gt;插件开发&gt;</strong></a>来自顶级菜单的<a class="command-link" href="javascript:void(0);"><strong>现有JAR存档的插件</strong></a> 。</p>
<p>从现有JAR存档创建插件项目分为两步：</p>
<ol>
  <li>选择JAR存档</li>
  <li>指定插件属性</li>
</ol>

<h2>JAR选择</h2>
<p><strong>JAR选择</strong>向导页面列出了要包含在插件中的JAR存档。</p>
<p><img src="../../images/new_wizards/bundlizer1.PNG" alt="JAR选择"></p>
<p>“ <strong>添加...”</strong>按钮将打开一个对话框，允许您浏览JAR归档的工作空间。</p>
<p>“ <strong>添加外部...”</strong>按钮将打开一个文件对话框，您可以通过该对话框浏览JAR存档的文件系统。</p>

<h2>插件属性</h2>
<p>“ <strong>插件属性”</strong>向导页面允许您指定插件项目设置，插件属性和目标平台。</p>
<p><img src="../../images/new_wizards/bundlizer2.PNG" alt="插件内容"> </p>
<p>建议对<strong>项目名称</strong>使用反向域命名约定（例如com.example.bundle）。</p>
<p>“ <strong>位置”</strong>字段将默认项目位置指定为嵌套在工作空间位置内的子目录。通过取消选中<strong>使用默认位置</strong>复选框并输入所选位置，可以将项目位置更改为任何可写位置。</p>
<p><strong>插件ID</strong>是必需的，必须符合<a href="../../../../org.eclipse.platform.doc.isv/reference/misc/plugin_manifest.html">plugin.dtd</a> 。建议 - 但不是强制性的 - 使插件ID与项目名称匹配。</p>
<p><strong>插件版本</strong>是必需的，必须采用<em>major.minor.service</em> （例如1.3.0）的形式。</p>
<p><strong>插件名称</strong>是<strong>插件的</strong>可翻译演示文稿名称。这是必填栏。</p>
<p><strong>插件供应商</strong>是<strong>插件供应商的</strong>可翻译名称。该字段是可选的。</p>
<p>您可以选择使用PDE来<strong>分析库内容并添加依赖项</strong> 。PDE分析<strong>Jar Selection</strong>页面上指定的库的内容，查找插件项目可能需要的依赖项。然后，这些依赖项会自动添加到Manifest中。</p>

<h2>目标平台</h2>
<p>目标平台选项旨在作为预过滤器，用于确定在创建新插件项目时清单编辑器的哪些页面应该可见。</p>
<p>例如，如果选择了<strong>Eclipse版本</strong>选项，则可以看到<strong>扩展</strong>和<strong>扩展点</strong>页面，但如果选择<strong>了OSGi框架</strong>选项，则隐藏它们。</p>
<p>此外，如果选择了<strong>标准</strong> OSGi框架选项，则将隐藏清单编辑器的<strong>Runtime</strong>页面中的<strong>Package Visibility</strong>部分;因为，本节提供了Equinox专用工具。</p>

<h2>解压缩JAR</h2>
<p>JAR是应该压缩还是解压缩取决于您希望如何打包插件。如果插件作为单个JAR提供 - 这是Eclipse 3.1中推荐的格式 - 应该解压缩各个JAR存档。如果要将插件作为平面目录提供，则应保留各个JAR存档。</p>



</body>
</html>