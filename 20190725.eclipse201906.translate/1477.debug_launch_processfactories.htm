<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>加工工厂</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h4>加工工厂</h4>
<p>当启动配置启动其程序时，它负责以请求的模式调用可执行程序。启动的实现将取决于每个启动配置的细节，但大多数插件将构建命令行并调用运行时exec来启动该程序。<a href="../reference/api/org/eclipse/debug/core/DebugPlugin.html"><b>DebugPlugin</b></a>类实现了一种方便的方法，用于调用运行时exec和处理可能的异常。客户端可以为exec指定命令行和工作目录。
</p>
<pre>
Process p = DebugPlugin.exec(cmdLine, workingDirectory);
</pre>
<p>一旦<b>java.lang。已经创建了执行程序的过程</b> ，它需要由调试插件管理。对于初学者，该过程需要与表示已启动程序的<a href="../reference/api/org/eclipse/debug/core/ILaunch.html"><b>ILaunch</b></a>相关联。调试插件定义了系统进程<a href="../reference/api/org/eclipse/debug/core/model/IProcess.html"><b>IProcess</b></a>的包装器，允许客户端访问关联的<a href="../reference/api/org/eclipse/debug/core/ILaunch.html"><b>ILaunch</b></a>并将自己的命名属性分配给进程。此外， <a href="../reference/api/org/eclipse/debug/core/model/IProcess.html"><b>IProcess还</b></a>为进程定义标签，并将<a href="../reference/api/org/eclipse/debug/core/model/IStreamsProxy.html"><b>IStreamsProxy</b></a>与使客户端访问系统进程的输入，输出和错误流的进程相关联。也可以使用<a href="../reference/api/org/eclipse/debug/core/DebugPlugin.html"><b>DebugPlugin中</b></a>的实用程序方法创建此进程包装器。
</p>
<pre>
IProcess process= DebugPlugin.newProcess(launch, p, "My Process);
</pre>
<p>还可以提供命名属性的映射。
</p>
<p>许多插件可以简单地依赖<a href="../reference/api/org/eclipse/debug/core/DebugPlugin.html"><b>DebugPlugin中</b></a>的实用程序方法来启动系统进程并将其包装在<a href="../reference/api/org/eclipse/debug/core/model/IProcess.html"><b>IProcess中</b></a> 。对于那些在创建包装器时需要更多控制的插件，可以将<b>进程工厂</b>与启动配置相关联。流程工厂用于创建满足插件特殊需求的<a href="../reference/api/org/eclipse/debug/core/model/IProcess.html"><b>IProcess</b></a> 。进程工厂由id引用，应存储在<b>DebugPlugin中。启动配置的ATTR_PROCESS_FACTORY_ID</b>属性。</p>
<p>进程工厂标识与实现它的类之间的关联是使用<a href="../reference/extension-points/org_eclipse_debug_core_processFactories.html"><b>org.eclipse.debug.core.processFactories</b></a>扩展点进行的。</p>
<p>以下示例显示了Ant插件如何为其启动设置流程工厂：</p>
<pre>
&lt;extension point=&quot;org.eclipse.debug.core.processFactories&quot;&gt;
	&lt;processFactory
		class=&quot;org.eclipse.ant.internal.ui.launchConfigurations.RemoteAntProcessFactory&quot;
		id=&quot;org.eclipse.ant.ui.remoteAntProcessFactory&quot;&gt;
	&lt;/processFactory&gt;
&lt;/extension&gt;
</pre>
<p>注册插件负责将进程工厂标识存储在正确的启动配置属性中。
</p>


</body>
</html>