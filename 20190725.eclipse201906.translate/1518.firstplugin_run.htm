<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"></script>
<title>运行插件</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h2>运行插件</h2>
<p>我们拥有运行新插件所需的所有部分。现在我们需要构建插件。如果您的Eclipse工作台设置为自动构建，那么您的新视图类应该在您保存新内容后立即编译。如果没有，则选择您的新项目并选择<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>项目&gt;建设项目</b></a> 。该类应该编译没有错误。</p>
<p>一旦构建了插件，有两种方法可以运行它。</p>
<ol>
<li>插件的清单文件和jar文件可以安装在<strong>eclipse / plugins</strong>目录中。重新启动工作台后，它将找到新的插件。</li>
<li>PDE工具可用于在当前工作台中运行另一个工作台。当您从工作台开发新插件<strong>时，</strong>此<strong>运行时工作台</strong>可以方便地立即测试新插件。（有关运行时工作台如何工作的更多信息，请查看PDE指南。）</li>
</ol>
<p>为简单起见，我们将从Eclipse工作台中运行新插件。</p>
<h3>启动工作台</h3>
<p>要启动运行时工作台，请选择<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>运行&gt;运行....</b></a>此对话框将向您显示启动程序的所有不同方式。选择<strong>Eclipse Application</strong> ，单击<strong>New</strong>并接受所有默认设置。这将导致Eclipse工作台的另一个实例（运行时工作台）启动。</p>
<h3>运行Hello World</h3>
<p>那么我们的新观点在哪里？我们可以使用<b>Window&gt; Show View</b>菜单<b>查看</b>插件贡献的所有<b>视图</b> 。</p>

<img src="images/perspectivemenu.png" alt="" border="0">
<p>此菜单向我们显示了当前透视图可用的视图。您可以通过选择<b>其他...</b>来查看贡献给平台的所有视图（无论透视图）。这将显示视图类别列表以及每个类别下可用的视图。</p>
<p>工作台通过使用扩展注册表来查找为<a href="../reference/extension-points/org_eclipse_ui_views.html"><b>org.eclipse.ui.views</b></a>扩展点提供扩展的所有插件，从而创建完整的视图列表。</p>

<img src="images/showview.png" alt="使用Hello条目显示“查看”对话框" border="0">
<p>我们在那里！名为“Hello View”的视图已添加到“Hello Category”类别下的“ <b>Show View”</b>窗口中。我们的类别和视图的标签是从<b>plugin.xml中</b>的扩展点配置标记获得的。</p>
<p><i><b>到目前为止，我们还没有运行我们的插件代码！</b></i>我们在<b>plugin.xml中</b>做出的声明（可以通过其他插件使用扩展注册表看到）足以让工作台发现在“Hello”类别中有一个名为“Hello View”的视图。它甚至知道哪个类实现了视图。但是在我们决定显示视图之前，我们的代码都不会运行。</p>
<p>如果我们从<b>Show View</b>列表中选择“Hello View”视图，工作台将激活我们的插件，实例化并初始化我们的视图类，并在工作台中显示新视图以及所有其他视图。现在我们的代码正在运行。</p>

<img src="images/workbenchwithhello.png" alt="工作台与Hello World视图" border="0">
<p>它就是我们的第一个插件！稍后我们将介绍有关UI类和扩展点的更多细节。</p>



</body>
</html>