<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <meta name="copyright" content="Copyright (c) IBM Corporation and others 2009, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
    <meta http-equiv="Content-Style-Type" content="text/css"></meta>
    <link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
    <title>PDE Build扩展到p2 Publisher</title>
    <style type="text/css">/*     3Cspan class=    22notranslate hidefromparserselfclosedtags    22 gtc:attrval=    22    26lt;![CDATA[ */
div.c2 {
  border: 1px inset;
}
h3.c1 {
  font-weight: bold;
}
/* ]]    26gt;    22    3EFORMAT_PLACEHOLDER_177    3C/span    3E */
</style>

  </head>
  <body dir="ltr">
    <h1>PDE Build扩展到p2 Publisher</h1>
    <p>PDE Build提供了几个扩展<a href="../../org.eclipse.platform.doc.isv/guide/p2_publisher.html">p2发布者的</a> ant任务。这些任务允许PDE Build将元数据和工件直接发布到p2存储库中。
    </p>
    <p>生成的构建脚本在完整构建的上下文中使用这些任务，例如编译类文件和替换版本。但是，在特殊情况下，某些任务可能非常有用，无需运行完整版本即可直接发布元数据。
    </p>
    <table cellspacing="1" cellpadding="2">
      <tr>
        <td>
          <h3 class="c1">eclipse.publish.featuresAndBundles</h3>
        </td>
      </tr>

      <tr>
        <td>
          <p>此任务与p2发布者提供的<tt>p2.publish.featuresAndBundles</tt>任务非常相似。此任务将发布预先存在的二进制功能和插件的元数据，这些功能和插件不是从源构建的。该任务还将基于提供的site.xml或category.xml文件发布类别。
          </p>
        </td>
      </tr>
      <tr>

        <td>
          <p>此任务支持以下属性：</p>
          <table border="5" cellspacing="0" cellpadding="1" width="95%" align="center">
            <tr>
              <td>
                <tt>metadataRepository</tt>
              </td>

              <td>指定要发布到的元数据存储库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>artifactRepository</tt>
              </td>
              <td>指定要发布到的工件存储库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>知识库</tt>
              </td>
              <td>设置metadataRepository和artifactRepository。
              </td>

            </tr>
            <tr>
              <td>
                <tt>现场</tt>
              </td>
              <td>指向类别信息的site.xml的URL。
              </td>
            </tr>

            <tr>
              <td>
                <tt>类别</tt>
              </td>
              <td>category.xml的URL指定类别信息。
              </td>
            </tr>
            <tr>

              <td>
                <tt>siteQualifier</tt>
              </td>
              <td>用于确保生成的类别IU的限定符具有唯一的名称。
              </td>
            </tr>
            <tr>
              <td>

                <tt>&lt;特征&gt;</tt>
              </td>
              <td>嵌套文件集元素，指定要发布的二进制要素的位置。
              </td>
            </tr>
            <tr>
              <td>
                <tt>&lt;束&gt;</tt>

              </td>
              <td>嵌套文件集元素，指定要发布的二进制插件的位置。
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>例：<div class="c2">

      <pre>&lt;eclipse.publish.featuresAndBundles repository =“file：C：/ build / repository”category =“file：C：/build/category.xml”&gt; &lt;features dir =“C：\ eclipse \ features \”includes =“org .eclipse.cvs_1.1.100.v20090514-7E79FEc9BJ99r9XGQ3CICF“/&gt; &lt;bundles dir =”C：\ eclipse \ plugins“includes =”org.eclipse.cvs_1.0.300.v20090520.jar“/&gt; &lt;bundles dir =”C：\ eclipse \ plugins“includes =”org.eclipse.team.cvs.core_3.3.200。I20090430-0408.jar“/&gt; &lt;bundles dir =”C：\ eclipse \ plugins“includes =”org.eclipse.team.cvs.ssh_3.2.100。I20090508-2000.jar“/&gt; &lt;bundles dir =”C：\ eclipse \ plugins“includes =”org.eclipse.team.cvs.ssh2_3.2.200。I20090508-2000.jar“/&gt; &lt;bundles dir =”C：\ eclipse \ plugins“includes =”org.eclipse.team.cvs.ui_3.3.200。I20090521-1750.jar“/&gt; &lt;/eclipse.publish.featuresAndBundles&gt;</pre>
    </div><br>
    <table cellspacing="1" cellpadding="2">
      <tr>
        <td>

          <h3 class="c1">eclipse.gatherBundle</h3>
        </td>
      </tr>
      <tr>
        <td>
          <p>直接从源代码发布插件。编译捆绑包的.class文件后，此任务将收集构成二进制结果的所有文件，并将其作为带有元数据的p2工件发布。此任务在插件生成的build.xml中的<tt>publish.bin.parts</tt>任务中使用，当您使用p2发布者构建时，此任务将替换<tt>gather.bin.parts</tt>任务。
          </p>

        </td>
      </tr>
      <tr>
        <td>
          <p>此任务支持以下属性：</p>
          <table border="5" cellspacing="0" cellpadding="1" width="95%" align="center">
            <tr>

              <td>
                <tt>metadataRepository</tt>
              </td>
              <td>要发布到的元数据存储库的URI。
              </td>
            </tr>
            <tr>
              <td>

                <tt>artifactRepository</tt>
              </td>
              <td>要发布到的工件库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>buildResultFolder</tt>

              </td>
              <td>包含内置.class文件的文件夹，Manifest和可能的.api_description文件。
              </td>
            </tr>
            <tr>
              <td>
                <tt>targetFolder</tt>
              </td>

              <td>使用customBuildCallbacks运行时的内容。
              </td>
            </tr>
            <tr>
              <td>
                <tt>baseDirectory</tt>
              </td>
              <td>项目位置，用于从不使用customBuildCallbacks时收集内容</td>
            </tr>
            <tr>
              <td>
                <tt>解压</tt>
              </td>
              <td>安装时是否应将插件解压缩为文件夹形式。
              </td>

            </tr>
            <tr>
              <td>
                <tt>gatheredSource</tt>
              </td>
              <td>对于源包，聚集源的位置。
              </td>
            </tr>

            <tr>
              <td>
                <tt>&lt;outputFolder&gt;</tt>
              </td>
              <td>嵌套元素指定从中获取.class文件的备用位置，从工作空间重用.class文件时使用。这是一个ant FileSet，带有一个额外的“ <tt>library</tt> ”属性，用于指定类文件所属的库</td>
            </tr>

          </table>
        </td>
      </tr>
    </table>例：<div class="c2">
      <pre>&lt;eclipse.gatherBundle metadataRepository =“file：/ build / repo”artifactRepository =“file：/ build / repo”buildResultFolder =“$ {basedir}”baseDirectory =“$ {basedir}”unpack =“true”&gt; &lt;outputFolder library = “lib / pdebuild-ant.jar”dir =“$ {basedir}”includes =“bin_ant / **”/&gt; &lt;outputFolder library =“pdebuild.jar”dir =“$ {basedir}”includes =“bin / * *“/&gt; &lt;/eclipse.gatherBundle&gt;</pre>
    </div><br>
    <table cellspacing="1" cellpadding="2">
      <tr>
        <td>
          <h3 class="c1">eclipse.gatherFeature</h3>
        </td>
      </tr>
      <tr>
        <td>
          <p>直接从源发布功能。此任务将收集组成功能jar的所有文件，并将其作为带有元数据的p2工件发布。此任务还将发布包含此功能提供的任何<a href="pde_rootfiles.htm">根文件的</a>工件。如果该功能未指定<tt>bin.includes</tt>属性，则不会生成功能jar，但仍会存在根文件工件和功能组元数据。
          </p>

        </td>
      </tr>
      <tr>
        <td>
          <p>此任务支持以下属性：</p>
          <table border="5" cellspacing="0" cellpadding="1" width="95%" align="center">
            <tr>

              <td>
                <tt>metadataRepository</tt>
              </td>
              <td>要发布到的元数据存储库的URI。
              </td>
            </tr>
            <tr>
              <td>

                <tt>artifactRepository</tt>
              </td>
              <td>要发布到的工件库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>buildResultFolder</tt>

              </td>
              <td>包含已更改版本的已修改feature.xml的文件夹。
              </td>
            </tr>
            <tr>
              <td>
                <tt>targetFolder</tt>
              </td>

              <td>使用customBuildCallbacks运行时的内容。
              </td>
            </tr>
            <tr>
              <td>
                <tt>baseDirectory</tt>
              </td>
              <td>功能项目位置</td>
            </tr>
          </table>
        </td>
      </tr>
    </table>例：<div class="c2">
      <pre>&lt;eclipse.gatherFeature metadataRepository =“file：/ build / repo”artifactRepository =“file：/ build / repo”buildResultFolder =“$ {basedir}”baseDirectory =“$ {basedir}”/&gt;</pre>
    </div><br>
    <table cellspacing="1" cellpadding="2">
      <tr>
        <td>
          <h3 class="c1">
            <a name="brand_p2_artifacts" id="brand_p2_artifacts">eclipse.brand.p2.artifacts</a>
          </h3>
        </td>

      </tr>
      <tr>
        <td>
          <p>产品的品牌启动器工件，并使用新名称重新发布它们以包含在给定产品中。
          </p>
        </td>
      </tr>
      <tr>

        <td>
          <p>此任务支持以下属性：</p>
          <table border="5" cellspacing="0" cellpadding="1" width="95%" align="center">
            <tr>
              <td>
                <tt>metadataRepository</tt>
              </td>

              <td>要发布到的元数据存储库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>artifactRepository</tt>
              </td>
              <td>要发布到的工件库的URI。
              </td>
            </tr>
            <tr>
              <td>
                <tt>配置</tt>
              </td>
              <td>将使用发射器的配置。 （例如“gtk.linux.x86”）</td>

            </tr>
            <tr>
              <td>
                <tt>iconsList</tt>
              </td>
              <td>用于查找用于标记可执行文件的图标的位置。
              </td>
            </tr>

            <tr>
              <td>
                <tt>tempDirectory</tt>
              </td>
              <td>可以使用的临时目录的位置。
              </td>
            </tr>
            <tr>

              <td>
                <tt>的productId</tt>
              </td>
              <td>我们要发布的产品的ID。
              </td>
            </tr>
            <tr>
              <td>

                <tt>的ProductVersion</tt>
              </td>
              <td>我们要发布的产品版本。
              </td>
            </tr>
            <tr>
              <td>
                <tt>launcherName</tt>

              </td>
              <td>给新启动器的名称。
              </td>
            </tr>
            <tr>
              <td>
                <tt>launcherProvider</tt>
              </td>

              <td>提供原始启动器工件的IU的名称。默认情况下，这是“org.eclipse.equinox.executable”，任务将查找名为<tt>&lt;launcherProvider&gt; _root。&lt;config&gt;的</tt>工件<tt>。</tt>
              </td>
            </tr>
          </table>
        </td>
      </tr>

    </table>
  </body>
</html>