<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>实现属性页面</title>

<link rel="stylesheet" type="text/css" href="../book.css"></link>
</head>
<body bgcolor="#ffffff" dir="ltr">
<h3>实现属性页面</h3>
<p>当工作台创建并启动属性页面时，它会将所选资源设置到页面中。该页面可以使用<b>getElement（）</b>方法获取其元素<b><a href="../reference/api/org/eclipse/core/runtime/IAdaptable.html">IAdaptable</a></b> 。</p>
<p>创建属性页面的模式与首选项页面的模式类似，因此我们只关注不同的内容。属性页显示有关其元素的信息。可以通过访问元素以查询或计算相关信息来获得该信息。还可以从资源的属性中存储和检索信息。</p>
<p><b>ReadmeFilePropertyPage</b>使用其元素计算其大部分信息。以下代码段显示了如何计算和显示标签中的节数。</p>
<pre>...IResource resource =（IResource）getElement（）; ...IAdaptable sections = getSections（resource）; if（sectionsof实例的AdaptableList）{AdaptableList list =（AdaptableList）section; label = createLabel（panel，String.valueOf（list.size（）））; ...
</pre>
<p>计算属性时，不需要相应的逻辑来保存该值，因为用户无法更新此值。</p>
<p>属性页通常用于查看和设置资源的特定于应用程序的属性。（有关会话和持久属性的讨论，请参阅<a href="resInt_properties.htm" class="XRef">资源</a>属性。）由于属性页面知道其资源，因此可以在页面中使用资源API来初始化控制值，或者根据属性页面中的用户选择来设置新的属性值。</p>
<p>以下代码段显示了从属性页元素的属性初始化的复选框值。</p>
<pre>private void initializeValues（）{...IResource resource =（IResource）getElement（）; label.setText（resource.getPersistentProperty（ “myProperty的”））; ...}</pre>
<p>将复选框值保存回属性的相应代码如下所示：</p>
<pre>private void storeValues（）{...IResource resource =（IResource）getElement（）; resource.setPersistentProperty（“MyProperty”，label.getText（））; ...}</pre>



</body>
</html>