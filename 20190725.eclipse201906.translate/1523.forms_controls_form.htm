<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>表格控制</title>
</head>
<body bgcolor="#ffffff" >

<h1>表格控制</h1>
<p><b>表单</b>是用于托管UI表单的基本控件。它提供了设置标题和滚动内容类似于Web浏览器。使表单具有吸引力的是，内容是SWT复合，可以像在其他环境中使用它一样使用。例如，请考虑以下代码段：</p>
<blockquote>
	<pre>public class FormView extends ViewPart {
	private FormToolkit toolkit;
	private ScrolledForm form;
	/**
	 * The constructor.
	 */
	public FormView() {
	}
	/**
	 * This is a callback that will allow us to create the viewer and
	 * initialize it.
	 */
	public void createPartControl(Composite parent) {
		toolkit = new FormToolkit(parent.getDisplay());
		form = toolkit.createScrolledForm(parent);
		form.setText(&quot;Hello, Eclipse Forms&quot;);
	}
	/**
	 * Passing the focus request to the form.
	 */
	public void setFocus() {
		form.setFocus();
	}
	/**
	 * Disposes the toolkit
	 */
	public void dispose() {
		toolkit.dispose();
		super.dispose();
	}
}</pre>
</blockquote>
<p>UI Forms以多种方式操作SWT小部件，以实现所需的效果。因此，通常使用<code>
FormToolkit</code>创建控件。通常，创建<code>ScrolledForm</code>的实例以便滚动。当表单需要嵌套时， <code>Form</code>实例提供除滚动表单内容之外的所有内容。</p>
<p>表单内容呈现在标题下方。SWT小部件是使用<code>Form.getBody()</code>作为父级在表单中创建的。</p>
</body>
</html>