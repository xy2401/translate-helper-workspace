<html lang="zh-Hans" dir="ltr">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2012. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></meta>
<title>插件依赖项</title>
<script type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" language="JavaScript"></script>
<link href="../../../book.css" rel="stylesheet" type="text/css"></link>
</head>

<body dir="ltr">
<h1>插件依赖项</h1>
<p>“ <strong>依赖关系”</strong>页面显示插件对其他插件的依赖关系。在此页面上，您必须列出所有为插件项目提供代码的插件，并且这些插件必须位于项目的类路径中才能进行编译。修改依赖项列表并保存文件时，PDE将自动更新类路径。</p>

<h2>必需的插件</h2>
<p><strong>Required Plug-ins</strong>部分通过显式枚举这些插件来指定插件项目对其他插件的依赖性。如果缺少或未解决任何插件依赖项，则插件将无法在运行时解析或运行。</p>
<p><img src="../../../images/plugin_editor/dependencies_required.png" alt="需要束"></p>
<p>按<strong>添加...</strong>按钮浏览插件可能依赖的所有插件的列表。</p>
<p>列表中插件的顺序很重要，因为它决定了运行时的类加载顺序;因此，使用<strong>向上</strong>和<strong>向下</strong>按钮组织列表。</p>
<p>您可以通过选择插件并单击“ <strong>属性”</strong>按钮，在每个插件依赖项上设置多个属性：</p>
<ul>
  <li>您可以通过选择<strong>Optional</strong>选项使插件依赖项可选。启用此选项后，即使缺少或未解决可选的插件依赖项，它也会向运行时指示您的插件应该运行。</li>
  <li>您可以选择“ <strong>重新导出此依赖</strong>项”选项以重新导出依赖项，以使其对任何需要它的下游插件自动可见。请注意，只有当您的插件从该依赖项中暴露出一个或多个API时，才应该重新导出给定的插件依赖项。</li>
  <li>您还可以指定插件依赖项的<strong>最低版本</strong>和<strong>最高版本</strong> 。</li>
</ul>

<h2>导入的包</h2>
<p>Eclipse运行时提供了灵活性，可以在不明确标识其原始插件的情况下指定对包的依赖性。这些包在“ <strong>导入的包”</strong>部分中枚举。</p>
<p><img src="../../../images/plugin_editor/dependencies_imported.png" alt="进口包装"></p>
<p>按<strong>添加...</strong>按钮浏览插件可用于导入的软件包列表。PDE过滤掉插件类路径中已有的插件提供的软件包。</p>
<p>您可以在每个包依赖项上设置多个属性：</p>
<ul>
  <li>您可以通过选择<strong>Optional</strong>选项使依赖项可选。启用此选项后，即使缺少程序包相关性，也会向运行时指示您的插件应该运行。</li>
  <li>您可以指定所需包的<strong>最低版本</strong>和<strong>最高版本</strong> 。</li>
</ul>

<h2>依赖关系的自动化管理</h2>
<p>“ <strong>自动管理依赖关系”</strong>部分提供了一种新的灵活工作流程。此工作流程允许您首先对插件进行编码，然后让PDE分析您的代码并自动生成插件依赖项列表。</p>
<p><img src="../../../images/plugin_editor/dependencies_automated.png" alt="自动化管理"></p>
<p>按<strong>添加...</strong>按钮将插件添加到列表中。因此，此操作将相应地增加您的开发构建路径和内容辅助范围。</p>
<p>这些依赖项不会立即添加到<em>MANIFEST.MF</em>文件中;但是，您可以立即开始编码，就像它们一样。</p>
<p>您可以随时单击<strong>添加依赖项</strong>超链接，让PDE分析您的代码，并通过<strong>Require-Bundle</strong>或<strong>Import-Package</strong>标头在<em>MANIFEST.MF</em>文件中生成正确的依赖项。</p>

<a name="dependency_analysis"></a>
<h2>依赖性分析</h2>
<p>“ <strong>依赖关系分析”</strong>部分包含几个有用的功能，可帮助您检查和优化插件依赖关系，以使您的插件更好地运行。</p>
<p><img src="../../../images/plugin_editor/dependencies_analysis.png" alt="依赖性分析"></p>
<p>由于作为依赖项列出的所有插件的JAR都将在您的插件运行时类路径中，因此不要列出不需要的依赖项非常重要。否则，类加载性能将受到不利影响。如果单击“ <strong>查找未使用的依赖项”</strong>超链接，PDE将在所需插件和导入的包列表中找到未使用和冗余的条目，并提供删除它们。</p>

<h3 class="related">相关参考</h3>
<a href="./editor.htm">插件编辑器</a><br>
<a href="./overview.htm">概述页面</a><br>
<a href="./runtime.htm">运行时页面</a><br>
<a href="./extensions.htm">扩展页面</a><br>
<a href="./extension_points.htm">扩展点</a><br>
<a href="./build.htm">构建页面</a>

</body>
</html>