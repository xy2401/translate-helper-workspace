<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>文件编码和内容类型</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h2>文件编码和内容类型</h2>
<p>平台运行时插件定义用于定义和发现数据流的<b>内容类型的</b>基础结构。（有关<a href="runtime_content.htm">内容</a>框架的概述，请参阅<a href="runtime_content.htm">内容类型</a> 。）内容类型系统的一个重要部分是能够为不同类型的内容指定不同的编码（字符集）。资源API还允许为项目，文件夹和文件建立默认字符集。如果文件本身的内容未在其数据流中定义特定编码，则查阅这些默认字符集。
</p>
<h3>设置字符集</h3>
<p>我们在<a href="runtime_content.htm">内容类型</a>中看到，可以为内容类型建立默认文件编码。资源API提供了更细粒度的控制。</p>
<p>
<b><a href="../reference/api/org/eclipse/core/resources/IContainer.html">IContainer</a></b>定义了用于为特定项目或文件夹设置默认字符集的协议。当内容类型的默认字符集可能不合适时，这使插件（以及最终用户）更自由地确定一组文件的适当字符集。</p>
<p>
<b><a href="../reference/api/org/eclipse/core/resources/IFile.html">IFile</a></b>定义用于设置特定文件的默认字符集的API。如果在文件内容中未指定编码，则将使用此字符集。文件的默认字符集优先于文件的文件夹，项目或内容类型中指定的任何默认字符集。
</p>
<p>最终用户可以在资源的属性页面中使用这两个功能。
</p>
<h3>查询字符集</h3>

<p><b><a href="../reference/api/org/eclipse/core/resources/IFile.html">IFile</a></b>还定义了用于查询文件字符集的API。布尔标志指定是否只返回为文件显式定义的字符集，或者是否应返回隐含字符集。例如：</p>
<pre>	String charset = myFile.getCharset(false);
</pre>
<p>如果在myFile上没有显式设置字符集，则返回null。然而，</p>
<pre>	String charset = myFile.getCharset(true);
</pre>
<p>将首先检查在文件上明确设置的字符集。如果未找到，则将检查文件的内容以获取字符集的描述。如果未找到，则将检查包含文件夹和项目的文件是否有默认字符集。如果未找到，则将检查为内容类型本身定义的默认字符集。最后，如果没有其他默认字符集的指定，将返回平台默认字符集。方便方法<b>getCharset（）</b>与使用<b>getCharset（true）相同</b> 。
</p>
<h3>工作区中文件的内容类型</h3>
<p>对于工作空间中的文件， <a href="../reference/api/org/eclipse/core/resources/IFile.html"><strong>IFile</strong></a>提供用于获取文件内容描述的API：</p>
<pre>IFile file = ...;
IContentDescription description = file.getDescription();</pre>
<p>即使客户只对确定内容类型感兴趣，也应该使用此API  - 可以从内容描述中轻松获取内容类型。通过获取内容和名称并使用<a href="runtime_content_using.htm">使用内容类型中</a>描述的API，可以检测内容类型或描述工作空间中的文件，但不建议这样做。使用<strong>IFile.getContentDescription（）</strong>确定内容类型会考虑<a href="resAdv_natures.htm">项目性质</a>和项目特定设置。如果直接转到内容类型管理器，则忽略它。但更重要的是，因为从磁盘读取文件的内容非常昂贵。Resources插件维护工作空间中文件的内容描述缓存。这将内容描述的成本降低到可接受的水平。</p>
</body>
</html>