<html lang="zh-Hans" >

<head>
<meta http-equiv="Content-Language" content="zh-Hans">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>C / C ++搜索</title>
<link rel="stylesheet" type="text/css" href="../help.css">
</head>

<body >
<div role="main">
<h1>C / C ++搜索</h1>

<p>您可以进行完全或部分限定的名称搜索。进一步限定搜索条件可提高搜索结果的准确性和相关性。以下部分提供了有关如何通过使用搜索分隔符，正确语法和通配符来控制搜索范围的指导。</p>

<p>你可以搜索：<br>
</p><ul>
	<li>语言结构：<ul>
			<li>工作区中的项目</li>
			<li>各种观点中选择的资源</li>
			<li>工作集</li>
		</ul></li>
	<li>用于引用特定元素的工作集</li>
	<li>特定要素的声明</li>
	<li>特定要素的定义</li>
	<li>特定元素的参考</li>
</ul>有关工作集的信息，请参阅“ <strong>Workbench用户指南”&gt;“概念”&gt;“工作台”&gt;“工作集”</strong><br>


  <h2>你可以搜索什么</h2>
  <p>下表列出了可以搜索的元素类型以及搜索给定元素类型时要注意的特殊注意事项。您可以搜索与指定的搜索字符串匹配的部分或全部元素类型。如果选择搜索匹配元素，则搜索中将包含所有类型，宏和typdef。</p>
<table border="2" cellpadding="2" cellspacing="0" width="60%" style="border-collapse:collapse" bordercolor="#AAA">
  <tr>
    <th id="element" style="width:25%;text-align:left"><strong>元件</strong></th>
    <th id="note" style="width:75%;text-align:left"><strong>注意</strong></th>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">类/结构</td>
    <td style="width:75%" headers="note">搜索类和结构。<p>您可以通过在要搜索的名称前指定“class”或“struct”来进一步限定搜索条件。指定“class”或“struct”还允许您搜索匿名类和结构。</p></td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">功能</td>
    <td style="width:75%" headers="note">搜索命名空间中的全局函数或函数（不是类，结构或联合的成员的函数）。<p>您可以指定参数以进一步限定搜索条件。指定参数列表时，括号之间的所有内容都应该是有效的C / C ++语法。</p>
    <p>不要指定函数的返回类型。</p></td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">变量</td>
    <td style="width:75%" headers="note">搜索不是类，结构或联合的成员的变量。</td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">联盟</td>
    <td style="width:75%" headers="note">搜索工会。<p>可以通过将“union”指定为搜索模式来搜索匿名联合。</p></td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">方法</td>
    <td style="width:75%" headers="note">搜索作为类，结构或联合的成员的方法。<p>搜索方法还可以找到构造函数和析构函数。请参阅上面的功能说明。</p></td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">领域</td>
    <td style="width:75%" headers="note">搜索属于类，结构或联合的成员的字段。
  </td></tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">列举</td>
    <td style="width:75%" headers="note">搜索枚举。</td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">枚举</td>
    <td style="width:75%" headers="note">搜索枚举器。</td>
  </tr>
  <tr>
    <td valign="top" style="width:25%" headers="element">命名空间</td>
    <td style="width:75%" headers="note">搜索命名空间。</td>
  </tr>
</table>

<h2>如何限制搜索</h2>

<p>您可以将搜索范围限制为以下一项或全部：</p>

<ul>
  <li>声明</li>
  <li>参考</li>
  <li>定义（用于函数，方法，变量和字段）</li>
</ul>

<p>您可以通过指定要搜索以下哪个来控制搜索范围：</p>
<ul>
  <li>工作区</li>
  <li>工作集</li>
  <li>精选资源</li>
</ul>

<h2>通配符</h2>
<p>您可以使用通配符来进一步优化搜索。</p>
<table border="2" cellpadding="2" cellspacing="0" width="60%" style="border-collapse:collapse" bordercolor="#AAA">
  <tr>
    <th id="char" valign="top" style="width:30%;text-align:left"><strong>使用此通配符</strong></th>
    <th id="search" style="width:70%;text-align:left"><strong>要搜索这个</strong></th>
  </tr>
  <tr>
    <td valign="top" style="width:30%" headers="char"> <samp>*</samp></td>
    <td style="width:70%" headers="search">任何字符串<p><strong>小费：<br>
    </strong>使用字符序列<samp>\*</samp>来搜索以*开头的运算符。请参阅下表中的语法示例。</p></td>
  </tr>
  <tr>
    <td valign="top" style="width:30%" headers="char"> <samp>?</samp></td>
    <td style="width:70%" headers="search">单个字符</td>
  </tr>
  <tr>
    <td valign="top" style="width:30%" headers="char"> <samp>::</samp></td>
    <td style="width:70%" headers="search">嵌套元素</td>
  </tr>
</table>
<!-- no support for function parameters
<p><strong>Tip: </strong>Do not use wild cards between the brackets of a function or 
method pattern.  For example, the search 
string <samp>f( * )</samp> is an invalid search that results in a search for any function <samp>f</samp> 
    because 
the asterisk is interpreted as a pointer rather than a wild card.</p>
-->
<h2>语法示例</h2>
<p>下表提供了语法示例和每个示例的说明，以帮助您进行有效的搜索。</p>
<table border="2" cellpadding="2" cellspacing="0" width="60%" style="border-collapse:collapse" bordercolor="#AAA">
  <tr>
    <th id="syntax" style="width:30%;text-align:left"><strong>句法</strong></th>
    <th id="search2" style="width:70%;text-align:left"><strong>搜索这个</strong></th>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">  <samp>::*::*::A</samp></td>
    <td style="width:70%" headers="search2">嵌套元素两层深</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">  <samp>::*::*::A?</samp></td>
    <td style="width:70%" headers="search2">任何以A开头的双字母名称，深度为两级</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">  <samp>::A</samp> </td>
    <td style="width:70%" headers="search2">搜索A没有嵌套在任何东西中</td>
  </tr>
<td><!-- no support for function parameters
  <tr>
    <td style="width:30%" headers="syntax">&nbsp; <samp>*()</samp></td>
    <td style="width:70%" headers="search2">Any function taking no parameters</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">&nbsp;&nbsp;<samp>*( A * )</samp> </td>
    <td style="width:70%" headers="search2">Any function taking 1 parameter that is a pointer to type 
    A</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">&nbsp;&nbsp;<samp>f( int * )</samp></td>
    <td style="width:60%" headers="search2">Will search for function f taking 1 parameter that is an 
    int *</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">&nbsp;&nbsp;<samp>f( const char [ 
    ], A &amp; )</samp></td>
    <td style="width:60%" headers="search2">Will search for a function f, taking 2 parameters; one is a 
    const char array, the other is a reference to type A</td>
  </tr>
-->
  <tr>
    </tr></td><td style="width:30%" headers="syntax"> <samp>operator \*</samp></td>
    <td style="width:60%" headers="search2">仅查找运营商*</td>
  
  <tr>
    <td style="width:30%" headers="syntax"> <samp>operator \*=</samp></td>
    <td style="width:60%" headers="search2">仅查找运算符* =</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax"> <samp>operator *</samp></td>
    <td style="width:60%" headers="search2">找到所有运营商</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax"> <samp>class</samp></td>
    <td style="width:60%" headers="search2">搜索匿名类</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">  <samp>struct</samp></td>
    <td style="width:60%" headers="search2">搜索匿名结构</td>
  </tr>
  <tr>
    <td style="width:30%" headers="syntax">  <samp>union</samp></td>
    <td style="width:60%" headers="search2">搜索匿名联盟</td>
  </tr>
  </table>
<h2>搜索结果</h2>
<p>搜索结果显示在“搜索”视图中。您可以按名称，父名称和路径对搜索进行排序。您也可以重复上次搜索。</p>

<h2>搜索概念</h2>

<h3>声明</h3>
<p>根据ANSI C ++规范，声明是一种声明，它将<q>名称引入转换单元或重新声明先前由先前声明引入的名称</q> 。</p>
<p>可以搜索所有C / C ++搜索元素的声明。</p>

<h3>定义</h3>
<p>大多数声明也是定义;换句话说，他们还定义了实体，因为他们声明了名称。但是，有些元素可以与其声明具有不同的定义。</p>
<p>对于C / C ++搜索，可以搜索以下元素的定义：</p><ul>
	<li>函数/方法 - 定义是代码实现所在的位置</li>
	<li>变量：<ol>
			<li>Extern  - 定义是变量初始化的位置</li>
			<li>非extern  - 变量的定义是声明它的位置</li>
		</ol></li>
	<li>领域：<ol>
			<li>静态字段 - 静态字段的定义是初始化的位置</li>
			<li>非静态字段 - 定义对应于字段声明</li>
		</ol></li>
	<li>命名空间 - 命名空间的定义与其声明相同</li>
</ul>

<h3>参考</h3>
<p>通过选择引用，C / C ++搜索将返回所选元素的所有位置。</p>

<h3>所有事件</h3>
<p>在“限制为”部分中选择“所有出现次数”将导致搜索声明，定义（如果适用）以及对已选择的任何元素或元素的引用。</p>

<h3>任何元素</h3>
<p>在“搜索”部分中选择“任何元素”将导致搜索所有列出的元素以及宏和typedef。</p>


<p>有关更多信息，请参阅：</p><ul>
  <li> <strong>Workbench用户指南&gt;概念&gt;视图&gt;搜索视图</strong></li>
  <li> <strong>Workbench用户指南&gt;任务&gt;导航和查找资源</strong></li>
  </ul>
<p><img src="../images/ngconcepts.gif" alt="相关概念" width="143" height="21"><br>
<a href="../concepts/cdt_c_indexer.htm">C / C ++索引器</a><br>
<a href="cdt_c_projects.htm">C / C ++项目</a><br>
<a href="cdt_c_open_declarations.htm">公开宣言</a><br>
</p>
<p><img src="../images/ngtasks.gif" alt="相关任务" width="143" height="21">
<br>
<a href="../tasks/cdt_t_search.htm">搜索C / C ++元素</a><br>
<a href="../tasks/cdt_t_open_declarations.htm">导航到C / C ++声明</a><br>
</p>
<p><img src="../images/ngref.gif" alt="相关参考" width="143" height="21"> <br>
<a href="../reference/cdt_u_search.htm">C / C ++搜索页面，搜索对话框</a><br>
<a href="../reference/cdt_u_icons.htm">C / C ++透视图标</a></p><p>

<img src="../images/ng00_07.gif" alt="IBM版权声明"></p>
</div>
</body>

</html>