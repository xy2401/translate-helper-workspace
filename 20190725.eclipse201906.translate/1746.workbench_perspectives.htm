<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"></script>
<title>展望</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >

<h2>展望</h2>
<p>我们已经看到工作台允许用户控制插件功能外观的一些方法。可以使用“ <b>窗口”&gt;“显示视图”</b>菜单隐藏或<b>显示视图</b> 。可以使用隐藏或显示动作集<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>窗口&gt;自定义透视图...</b></a>菜单。这些功能可帮助用户组织工作台。</p>

<p>
<b>Perspectives</b>在工作台窗口中提供了额外的组织层。用户可以在跨任务移动时切换透视图。透视图定义视图集合，视图布局以及用户首次打开透视图时应使用的可见操作集。</p>
<p>透视图使用<b><a href="../reference/api/org/eclipse/ui/IPerspectiveFactory.html">IPerspectiveFactory</a>实现<b>。
</b> <b><a href="../reference/api/org/eclipse/ui/IPerspectiveFactory.html">IPerspectiveFactory的</a></b>实现者<b><a href="../reference/api/org/eclipse/ui/IPerspectiveFactory.html">应该</a></b>使用描述透视图及其透视页面布局的信息来配置<b><a href="../reference/api/org/eclipse/ui/IPageLayout.html">IPageLayout</a></b> 。</p>


<h3>工作台部件布局</h3>
<p><b><a href="../reference/api/org/eclipse/ui/IPageLayout.html">IPageLayout</a></b>的主要工作之一是在工作台窗口中描述编辑器和视图的位置。请注意，这些布局与SWT中的<a href="../reference/api/org/eclipse/swt/widgets/Layout.html"><b>Layout</b></a>类不同。虽然<b><a href="../reference/api/org/eclipse/ui/IPageLayout.html">IPageLayout</a></b>和<a href="../reference/api/org/eclipse/swt/widgets/Layout.html"><b>Layout</b></a>解决了类似的问题（在更大的区域内调整和定位小部件），但您不必了解SWT布局以提供透视页面布局。</p>
<p>初始化透视页面布局，其中一个区域用于显示编辑器。透视工厂负责添加与编辑器相关的其他视图。视图相对于（顶部，底部，左侧，右侧）另一部分添加到布局中。也可以为最初未显示的项目添加占位符（空白区域）。</p>
<p>要组织相关视图并减少混乱，可以使用<a href="../reference/api/org/eclipse/ui/IFolderLayout.html"><b>IFolderLayout</b></a>将视图分组到选项卡式文件夹中。例如，Resource透视图将Project Explorer放在工作台左上角的文件夹中。占位符通常与文件夹布局一起使用。Resource透视图在与Project Explorer相同的文件夹中为Bookmarks视图定义占位符。如果用户显示“书签”视图，它将与Project Explorer显示在同一文件夹中，每个视图都有一个选项卡。</p>
<p>
 <b><a href="../reference/api/org/eclipse/ui/IPageLayout.html">IPageLayout</a></b>还允许您在透视图中定义可用的操作和快捷方式。</p>



<ul>
  <li><b>addActionSet</b>用于向透视图添加操作集。</li>
  <li><b>addNewWizardShortcut</b>为视图的“ <b>文件”&gt;“新建”</b>菜单添加一个新条目。</li>
  <li><b>addShowViewShortcut</b>添加透视处于活动状态时应显示在“ <b>窗口”&gt;“显示视图”</b>菜单中的视图的名称。</li>
  <li><b>addPerspectiveShortcut</b>添加透视图处于活动状态时应显示在“ <b>窗口”&gt;“打开透视图”</b>菜单中的透视图名称。</li>
</ul>



<h3>
<a name="showin">将视图和编辑器</a>与“show-in”链接</h3>



<p>透视图和<b><a href="../reference/api/org/eclipse/ui/IPageLayout.html">IPageLayout</a></b>提供的另一个有价值的服务是帮助编辑器及其相关视图之间的导航。我们通常认为视图有助于用户在编辑器中找到要使用的对象。但是，逆向操作也很有用：在编辑器中使用对象的用户可能需要导航到视图中的该对象。这可以使用工作台<b>导航&gt;显示在</b>菜单中完成。此命令允许用户跳转到当前编辑（或选定）对象的上下文中的任意数量的相关视图之一。例如，编辑文件的用户可能希望跳转到Project Explorer中的该文件。</p>



<p>工作台的插件体系结构允许开发人员在不同的插件中提供视图和编辑器，这些插件甚至彼此不了解。通过实现对“show in”的支持，您的视图或编辑器可以支持方便地导航到其他插件贡献的视图和编辑器。</p>



<p>此导航允许用户在视图之间快速移动，并轻松打开通常不在特定透视图中显示的视图。例如，在Java透视图中工作的用户可以使用<b>Navigate&gt; Show In</b>在Navigator视图中查看当前编辑的Java文件。</p>



<h4>显示来源</h4>
<p>如果要允许用户从编辑器或视图中使用“ <b>导航”&gt;“显示”</b>以跳转到另一个视图，则必须实现<a href="../reference/api/org/eclipse/ui/part/IShowInSource.html"><b>IShowInSource</b></a> 。您的部件可以使用协议（ <b>getShowInSource（）</b> ）或作为适配器直接提供其<a href="../reference/api/org/eclipse/ui/part/IShowInSource.html"><b>IShowInSource</b></a> 。<a href="../reference/api/org/eclipse/ui/part/IShowInSource.html"><b>IShowInSource</b></a>允许您的部件提供上下文（ <a href="../reference/api/org/eclipse/ui/part/ShowInContext.html"><b>ShowInContext</b></a> ），目标使用该上下文来决定如何显示源。编辑器的上下文中的节目通常是其输入元素。对于视图，上下文通常是其选择。选择和输入元素都在<a href="../reference/api/org/eclipse/ui/part/ShowInContext.html"><b>ShowInContext</b></a>中提供，以便在确定如何显示源时为目标提供灵活性。</p>



<p>提供了编辑器的默认上下文，以便您的编辑器可以参与“show-in”而无需任何特殊编码。对于编辑者，输入元素和选择用于创建适当的上下文。</p>



<p>对于视图， <a href="../reference/api/org/eclipse/ui/part/IShowInSource.html"><b>IShowInSource</b></a>必须由视图实现才能提供<b>Navigate&gt; Show In</b>功能。</p>



<h4>显示目标</h4>



<p>如果希望视图成为“show in”操作的有效目标，则必须实现<a href="../reference/api/org/eclipse/ui/part/IShowInTarget.html"><b>IShowInTarget</b></a> 。目标负责以适合其呈现的方式显示给定的上下文。例如，Navigator视图展开其树以选择并显示上下文中指定的资源。</p>
<p>目标应首先检查<a href="../reference/api/org/eclipse/ui/part/ShowInContext.html"><b>ShowInContext中</b></a>的选择以决定要显示的内容，因为这是更具体的信息。仅当未指示选择时，它才应显示输入元素。</p>
<h4>提出适当的目标</h4>



<p>如何确定可用目标列表？您可以使用<b><a href="../reference/extension-points/org_eclipse_ui_perspectiveExtensions.html">Perspective Extensions</a></b>扩展点的<b>showInPart</b>元素为透视图指定可用目标。回想一下，“Show In”导航可能会打开透视图中尚未显示的视图。</p>





</body>
</html>