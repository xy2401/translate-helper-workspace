<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2009. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>扩展和扩展点</title>
<link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"> </script>
</head>

<body >
<h1>扩展和扩展点</h1>

<p>构建模块化软件系统的基本规则是避免组件之间的紧密耦合。如果组件紧密集成，则难以将这些组件组装成不同的配置或用不同的实现替换组件而不会在整个系统中引起波动。</p>

<p>Eclipse中的松散耦合部分通过<strong>扩展</strong>和<strong>扩展点</strong>的机制实现。描述扩展和扩展点的最简单的比喻是电源插座。插座或插座是延伸点;插头，或连接到它的灯泡，扩展。与电源插座一样，扩展点有各种各样的形状和尺寸，只有为特定扩展点设计的扩展才适合。</p>

<p>当插件希望允许其他插件扩展或定制其部分功能时，它将声明一个扩展点。扩展点声明一个契约，通常是XML标记和Java接口的组合，扩展必须符合。想要连接到该扩展点的插件必须在其扩展中实现该合同。关键属性是扩展的插件对于超出该扩展点合同范围的连接插件一无所知。这允许由不同的个人或公司构建的插件无缝地交互，即使他们彼此不太了解。</p>

<p>Eclipse Platform具有许多扩展和扩展点概念的应用程序。一些扩展完全是<i>声明性的</i> ;也就是说，它们根本不贡献任何代码。例如，一个扩展点提供自定义键绑定，另一个扩展点定义自定义文件注释，称为<i>标记</i> ;这些扩展点都不需要代表扩展名的任何代码。
</p>

<p>另一类扩展点用于覆盖组件的默认行为。例如，Java开发工具包括代码格式化程序，但也为插入的第三方代码格式化程序提供扩展点。资源插件有一个扩展点，允许某些插件替换基本文件操作的实现，例如移动和删除。</p>

<p>又一类扩展点用于对用户界面中的相关元素进行分组。例如，用于向UI提供视图，编辑器和向导的扩展点允许基本UI插件对常见功能进行分组，例如将所有导入向导放入单个对话框中，以及定义呈现UI贡献的一致方式。各种其他插件。</p>

<h3 class="related">相关参考</h3>
<a href="../guide/tools/editors/manifest_editor/extensions.htm">扩展（插件编辑器）</a><br>
<a href="../guide/tools/editors/manifest_editor/extension_points.htm">扩展点（插件编辑器）</a>

<h3 class="related">相关概念</h3>
<a href="plugin.htm">插入</a>

</body>
</html>