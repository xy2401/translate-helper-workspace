<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
    <link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
    <meta http-equiv="Content-Style-Type" content="text/css"></meta>
    <title>编写和运行JUnit测试</title>
  </head>

  <body dir="ltr">
    <h1>编写和运行JUnit测试</h1>
    <p>在本节中，您将使用<a href="http://www.junit.org" target="_blank">JUnit</a>测试框架来编写和运行测试。要开始使用JUnit，您可以参考<a href="http://junit.sourceforge.net/doc/cookbook/cookbook.htm" target="_blank">JUnit Cookbook</a> 。
    </p>

    <h2>写测试</h2>
    <p>创建一个项目“JUnitTest”。现在你可以编写第一个测试了。您在<strong>TestCase</strong>的子类中实现测试。您可以使用标准类向导或专用的<strong>测试用例</strong>向导来执行此操作：</p>
    <ol>

      <li>打开“新建”向导（“ <strong>文件”&gt;“新建”&gt;“JUnit测试用例”</strong> ）。
      </li>
      <li>选择<strong>New JUnit 3 test</strong>并输入“ <i>TestFailure”</i>作为测试类的名称：<p>

          <img src="images/wiz_new_testcase.png" alt="TestCase创建向导第1页"><br>
        </p>
        <p>
          <em>注意：</em>如果要使用JUnit 4测试，则必须确保将编译器合规性设置为1.5。
        </p>
      </li>
      <li>您将看到一条警告消息，要求您将junit库添加到构建路径。使用“ <strong>单击此处”</strong>链接自动添加junit库。
      </li>

      <li>单击“ <strong>完成”</strong>以创建测试类。
      </li>
    </ol>
    <p>添加一个对<i>TestFailure</i>类失败的测试方法。输入测试方法的快捷方法是使用<i>测试</i>模板。为此，请将光标放在类声明中。键入“test”，然后按<kbd>Ctrl + Space</kbd>激活代码辅助并选择“测试”模板。将创建的方法的名称更改为<i>testFailure</i>并调用<i>fail（）</i>方法。
    </p>

    <p>
      <code>public void testFailure（）抛出异常{<br>失败（）;<br>}</code>
    </p>
    <p>现在您已准备好进行第一次测试。</p>

    <h2>运行测试</h2>
    <p>要运行TestFailure，请单击工具栏中的运行按钮。它将自动作为JUnit Test运行。您可以在<i>JUnit</i>视图中检查测试结果。此视图显示测试运行进度和状态：</p>
    <p>
      <img src="images/view_junit_red.png" alt="测试失败">

    </p>
    <p>每当您开始测试运行时，视图都会显示在当前透视图中。JUnit视图的一个方便的安排是将其作为快速视图停靠。JUnit视图有两个选项卡：一个显示失败列表，另一个显示完整测试套件作为树。通过双击故障跟踪中的相应行，您可以从故障导航到相应的源。
    </p>
    <p>将JUnit视图作为快速视图停靠，删除方法<i>testFailure（）</i>中的<i>fail（）</i>语句，以便测试通过并再次重新运行测试。您可以通过单击视图工具栏中的“ <b>重新运行”</b>按钮重新运行测试，也可以通过激活“ <b>运行”</b>下拉列表重新运行上次启动的程序。这次测试应该成功。由于测试成功，JUnit视图不会弹出，但成功指示器显示在JUnit视图图标上，状态行显示测试结果。作为重新运行测试的提醒，每当您在运行后更改工作区内容时，视图图标都会以“*”进行修饰。
    </p>
    <blockquote>
      <p>
        <img src="images/icon_junit_successfull.png" border="0" alt="成功的测试"> - 成功的测试运行<br>
        <img src="images/icon_junit_successfull_workspace_modifed.png" border="0" alt="成功测试但工作空间已更改"> - 测试运行成功，但自上次测试运行后工作区内容已更改。
      </p>

    </blockquote>
    <p>除了如上所述运行测试用例外，您还可以：</p>
    <ul>
      <li>在项目，源文件夹或包中运行所有测试 -<br>选择项目，包或源文件夹，并使用<strong>Run as&gt; JUnit Test</strong>运行所有包含的<strong>测试</strong> 。此命令查找项目，源文件夹或包中的所有测试并执行它们。
      </li>

      <li>运行单一测试方法 -<br>在Outline或Package Explorer中选择一个测试方法，并使用<strong>Run as&gt; JUnit Test运行</strong>所选的测试方法。
      </li>
      <li>重新运行一次测试 -<br>在JUnit视图中选择一个测试，然后从上下文菜单中执行<b>Run</b> 。
      </li>

    </ul>
    <h2>自定义测试配置</h2>
    <p>如果要传递参数或自定义测试运行的设置，请打开“启动配置”对话框。在工具栏的<strong>“运行”</strong>下拉菜单中选择“ <strong>打开运行对话框...</strong> <strong>”</strong> ：</p>

    <p>
      <img src="images/run_dialog_junit.png" alt="JUnit启动配置">
    </p>
    <p>在此对话框中，您可以指定要运行的测试，其参数，运行时类路径和Java运行时环境。
    </p>
    <h2>调试测试失败</h2>
    <p>如果测试失败，您可以按照以下步骤进行调试：</p>
    <ol>
      <li>双击JUnit视图中“失败”选项卡中的失败条目，以在编辑器中打开相应的文件。
      </li>
      <li>在测试方法的开头设置断点。
      </li>
      <li>选择测试用例并从<b>Debug</b>下拉列表中执行<b>Debug As&gt; JUnit Test</b> 。
      </li>
    </ol>
    <p>JUnit启动配置具有“保持活动”选项。如果您的Java虚拟机支持“热代码替换”，则可以修复代码并重新运行测试，而无需重新启动完整的测试运行。要启用此选项， <strong>请</strong>在JUnit启动配置中选中“ <strong>调试时测试运行后保持JUnit”</strong>复选框。
    </p>
    <h2>创建测试套件</h2>
    <p>JUnit <b>TestSuite</b>向导可帮助您创建测试套件。您可以选择应属于套件的类集。
    </p>
    <ol>
      <li>打开“新建”向导</li>
      <li>选择<strong>Java&gt; JUnit&gt; JUnit Test Suite</strong> ，然后单击<strong>Next</strong> 。
      </li>

      <li>输入测试套件类的名称（约定是使用默认显示的“AllTests”）。<br>
        <p>
          <img src="images/wiz_new_suite.png" alt="测试套件向导">
        </p>
      </li>
      <li>选择套件中应包含的类。我们目前只有一个测试类，但您可以稍后添加到套件中。
      </li>
    </ol>
    <p>您可以通过两种方式在测试套件中添加或删除测试类：</p>
    <ul>
      <li>手动编辑测试套件文件</li>
      <li>通过重新运行向导并选择一组新的测试类。
      </li>
    </ul>
    <p>注意：向导将2个标记<code>//$JUnit-BEGIN$</code>和<code>//$JUnit-END$</code>放入创建的测试套件类中，该类允许向导更新现有的测试套件类。建议不要在标记之间编辑代码。
    </p>

    <p class="nav_footer" id="nav_footer">下一节： <a href="qs-ProjectConfiguration.htm">项目配置教程</a>
    </p>
  </body>
</html>