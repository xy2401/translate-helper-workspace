<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>以编程方式运行Ant构建文件</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h2>以编程方式运行Ant构建文件</h2>
<p>Eclipse内置的Ant支持允许插件以编程方式运行Ant构建文件。这是通过<b>org.eclipse.ant.core</b>插件中包含的<a href="../reference/api/org/eclipse/ant/core/AntRunner.html"><b>AntRunner</b></a>类完成的。
</p>

<p>以下代码段显示了如何在另一个插件的代码中使用<a href="../reference/api/org/eclipse/ant/core/AntRunner.html"><b>AntRunner</b></a>的示例：</p>

<pre>import org.eclipse.ant.core.AntRunner;
import org.eclipse.core.runtime.IProgressMonitor;

...

public void runBuild() {
	IProgressMonitor monitor = ...
	AntRunner runner = new AntRunner();
	runner.setBuildFileLocation(&quot;c:/buildfiles/build.xml&quot;);
	runner.setArguments(&quot;-Dmessage=Building -verbose&quot;);
	runner.run(monitor);
}</pre>

<p>如果使用进度监视器，则它可用于正在运行的任务。有关详细信息，请参阅<a href="./ant_contributing_task.htm#monitor">进度监视器</a> 。
</p><p>请注意，如果构建不在单独的VM中发生，则在任何给定时间只能发生一个Ant构建。请参阅<a href="../reference/api/org/eclipse/ant/core/AntRunner.html#isBuildRunning()">AntRunner.isBuildRunning（）</a> ;</p>

<h3>如果构建发生在与工作空间相同的JRE中，则特别注意本机库</h3>
<p>每次Ant构建文件在Eclipse中运行时，都会创建一个新的类加载器。由于库只能由Java中的一个类加载器加载，因此使用本机库的任务可能会在多个构建文件运行期间遇到问题。如果在新的类加载器尝试加载本机库时尚未对前一个类加载器进行垃圾回收，则会抛出异常，指示问题并且构建失败。避免此问题的一种方法是让库加载由插件库中的类处理。该任务可以使用该类来访问本机方法。这样，库由插件类加载器加载，并且不会遇到加载库冲突。
</p>


<p>
 </p>


</body></html>