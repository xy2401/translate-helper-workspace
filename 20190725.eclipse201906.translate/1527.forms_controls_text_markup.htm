<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2009. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>解析格式化标记</title>
</head>
<body bgcolor="#ffffff" dir="ltr">

<h1>解析格式化标记</h1>
<p align="left"><code>FormText</code>控件最强大的用途是将格式化标签添加到文本中。预期的根标签是<code>form</code> 。它可以有一个或多个孩子，可以是<code>&lt;p&gt;</code>或<code>&lt;li&gt;</code> 。这些中的任何一个都可以具有普通文本， <code>&lt;b&gt;</code>或<code>&lt;span&gt;</code>标签之间的文本，图像，链接和<code>SWT</code>控件。使用<code>&lt;img href=" <i>image key</i> "/&gt;</code> （无内容）声明<code><i>&lt;img href=" image key "/&gt;</i></code> ，而使用<code>&lt;a href=" <i>href</i> "&gt;text&lt;/a&gt;</code>表示链接。</p>
<p align="left">上面提到的一些标签具有其他属性。标签<code>&lt;a&gt;</code>可以接受<code>nowrap="true"</code>来阻止链接被包装到新行中。Tag <code>&lt;p&gt;</code>可以具有属性<code>vspace="false"</code> （默认为<code>true</code> ），这会在段落之间添加额外的空格。标签<code>&lt;li&gt;</code>有更多属性：</p>
<ul>
	<li>
	<p align="left"><b>风格</b> - 可以是<code>text</code> ， <code>bullet</code>和<code>image</code> （默认是<code>bullet</code> ）</p></li>
	<li>
	<p align="left"><b>价值</b> - 不用于<code>bullet</code> ;如果style是<code>text</code> ，则将代替子弹呈现该值;如果style是<code>image</code> ，则value表示要呈现的图像的图像表中的键以代替项目符号</p></li>
	<li>
	<p align="left"><b>vspace</b> - 与' <code>p</code> '标签相同。</p>
	</li>
	<li>
	<p align="left"><b>indent</b> - 缩进文本的像素数</p></li>
	<li>
	<p align="left"><b>bindent</b> - 缩进项目符号的像素数（此数字独立于'缩进' - 注意不要重叠它们）</p>
	</li>
</ul>
<p>影响普通文本外观的标签是<code>&lt;b&gt;</code> （按预期工作）和<code>&lt;span&gt;</code> 。后者允许您更改标记内文本的字体和/或颜色。可以使用<code>&lt;br/&gt;</code>标签添加软换行符。文本被解析为XML，这意味着每个元素必须有一个结束标记，因此您不能像HTML一样使用open <code>&lt;br&gt;</code> 。XML实体＆amp;被识别并替换为＆，并且要求不属于实体声明的＆符号（＆）表示为＆amp ;.数字实体也可以用于格式化文本。</p>
<p>从3.1版开始， <code>FormText</code>可用于在文本，超链接和图像中混合SWT小部件。SWT控件是作为<code>FormText</code>子项<code>FormText</code> ，它使<code>FormText</code>成为一种排序的布局管理器，并指示控件相对于直接嵌入XML的文本的放置位置。</p>
<p>可以观察到的一个常见主题是<code>FormText</code>不负责加载图像，字体，解析链接或颜色。这不是一个浏览器，它可以更好地分离问题，并简单地分配在其他地方管理的图像和颜色。链接和图像都只有' <code>href</code> '属性来引用它们。对于链接，当通知侦听器时，将在超链接事件中提供此属性的值。需要使用匹配的'href'键在文本控件中注册图像。这样，控件不需要担心加载图像 - 它在哈希表中有它们并且可以立即渲染它们。</p>
<p>类似的方法已用于颜色和字体。颜色已由工具包处理，因此您可以通过调用<code>toolkit.getColors().createColor()</code>使用唯一键和RGB值分配任意数量的颜色。剩下的就是设置' <code>span</code> '标签中引用的所有颜色，以便控件在渲染过程中能够使用它们。</p>
</body>
</html>