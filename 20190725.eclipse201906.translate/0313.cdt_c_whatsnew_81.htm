<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="keywords" content="CDT/User/NewIn81">
	
	<title>CDT 8.1新的和值得注意的</title>
</head>

<body dir="ltr">
<div role="main">
	<h1 id="top">CDT 8.1  - 新的和值得注意的</h1>
	<p>请参阅CDT Wiki上<a href="http://wiki.eclipse.org/CDT/User/NewIn81">CDT 8.1中的新内容，</a>其中可能包含更多最新信息。
	</p>
	
	<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>内容</h2></div>
<ul>
<li class="toclevel-1"><a href="#Editor"><span class="tocnumber">1</span> <span class="toctext">编辑</span></a>
<ul>
<li class="toclevel-2"><a href="#Pin_the_Call_Hierarchy_View"><span class="tocnumber">1.1</span> <span class="toctext">固定呼叫层次结构视图</span></a></li>
<li class="toclevel-2"><a href="#Filtering_in_Outline_Views"><span class="tocnumber">1.2</span> <span class="toctext">在大纲视图中过滤</span></a></li>
<li class="toclevel-2"><a href="#Mouse_Hover_for_auto_Keyword"><span class="tocnumber">1.3</span> <span class="toctext">鼠标悬停为'auto'关键字</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Refactoring"><span class="tocnumber">2</span> <span class="toctext">重构</span></a></li>
<li class="toclevel-1"><a href="#Indexing"><span class="tocnumber">3</span> <span class="toctext">索引</span></a></li>
<li class="toclevel-1"><a href="#Code_Analysis"><span class="tocnumber">4</span> <span class="toctext">代码分析</span></a>
<ul>
<li class="toclevel-2"><a href="#External-tool-based_Checkers"><span class="tocnumber">4.1</span> <span class="toctext">基于外部工具的跳棋</span></a></li>
<li class="toclevel-2"><a href="#New_Codan_checkers"><span class="tocnumber">4.2</span> <span class="toctext">新的Codan检查员</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Build"><span class="tocnumber">5</span> <span class="toctext">构建</span></a>
<ul>
<li class="toclevel-2"><a href="#Scanner_Discovery"><span class="tocnumber">5.1</span> <span class="toctext">扫描仪发现</span></a></li>
<li class="toclevel-2"><a href="#Mac_OSX_Frameworks"><span class="tocnumber">5.2</span> <span class="toctext">Mac OSX框架</span></a></li>
<li class="toclevel-2"><a href="#Console"><span class="tocnumber">5.3</span> <span class="toctext">控制台</span></a></li>
<li class="toclevel-2"><a href="#Parallel_Build"><span class="tocnumber">5.4</span> <span class="toctext">并行构建</span></a></li>
<li class="toclevel-2"><a href="#Managed_Build"><span class="tocnumber">5.5</span> <span class="toctext">托管构建</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Debug"><span class="tocnumber">6</span> <span class="toctext">调试</span></a>
<ul>
<li class="toclevel-2"><a href="#Multicore_Visualizer_View"><span class="tocnumber">6.1</span> <span class="toctext">多核Visualizer视图</span></a></li>
<li class="toclevel-2"><a href="#Partitioning_of_large_arrays"><span class="tocnumber">6.2</span> <span class="toctext">大型阵列的分区</span></a></li>
<li class="toclevel-2"><a href="#Edit_Breakpoint_on_Create"><span class="tocnumber">6.3</span> <span class="toctext">在Create上编辑断点</span></a></li>
<li class="toclevel-2"><a href="#Breakpoint_Toggle_Short-Cuts"><span class="tocnumber">6.4</span> <span class="toctext">Breakpoint Toggle Short-Cuts</span></a></li>
<li class="toclevel-2"><a href="#Function_Breakpoint_Manual_Entry"><span class="tocnumber">6.5</span> <span class="toctext">功能断点手动输入</span></a></li>
<li class="toclevel-2"><a href="#Advanced_character_encoding_support"><span class="tocnumber">6.6</span> <span class="toctext">高级字符编码支持</span></a></li>
<li class="toclevel-2"><a href="#Timeout_support_for_GDB_commands_in_DSF.2FGDB"><span class="tocnumber">6.7</span> <span class="toctext">DSF / GDB中对GDB命令的超时支持</span></a></li>
<li class="toclevel-2"><a href="#Multi-select_Resume.2FSuspend_operations"><span class="tocnumber">6.8</span> <span class="toctext">多选恢复/暂停操作</span></a></li>
<li class="toclevel-2"><a href="#Show_only_suspended_threads_in_Debug_view"><span class="tocnumber">6.9</span> <span class="toctext">在“调试”视图中仅显示挂起的线程</span></a></li>
<li class="toclevel-2"><a href="#Multi-select_attach_dialog"><span class="tocnumber">6.10</span> <span class="toctext">多选附加对话框</span></a></li>
<li class="toclevel-2"><a href="#Default_Postmortem_file_location"><span class="tocnumber">6.11</span> <span class="toctext">默认事后文件位置</span></a></li>
<li class="toclevel-2"><a href="#Support_for_Fast_Tracepoints"><span class="tocnumber">6.12</span> <span class="toctext">支持快速跟踪点</span></a></li>
<li class="toclevel-2"><a href="#Enhancements_to_Tracepoints"><span class="tocnumber">6.13</span> <span class="toctext">跟踪点的增强功能</span></a></li>
<li class="toclevel-2"><a href="#Show_the_actual_variable_type_based_on_RTTI"><span class="tocnumber">6.14</span> <span class="toctext">根据RTTI显示实际变量类型</span></a></li>
<li class="toclevel-2"><a href="#Build_variables_support_in_.22C.2FC.2B.2B_Application.22_field_of_launch_configuration"><span class="tocnumber">6.15</span> <span class="toctext">在启动配置的“C / C ++应用程序”字段中构建变量支持</span></a></li>
<li class="toclevel-2"><a href="#Support_for_octal_number_format_in_CDI"><span class="tocnumber">6.16</span> <span class="toctext">支持CDI中的八进制数格式</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#C.2FC.2B.2B_Unit_Testing_Support"><span class="tocnumber">7</span> <span class="toctext">C / C ++单元测试支持</span></a></li>
<li class="toclevel-1"><a href="#Bugs_Fixed"><span class="toctext">此版本中已修复</span> <span class="tocnumber">8个</span> <span class="toctext">错误</span></a></li>
</ul>
</td></tr></table>

<a name="Editor"></a><h2> <span class="headline">编辑</span></h2>
<a name="Pin_the_Call_Hierarchy_View"></a><h3> <span class="headline">固定调用层次结构视图</span></h3>
<p>现在可以固定调用层次结构视图，使用户可以同时打开多个调用层次结构视图。
</p><p><img alt="图片：Pin view call hierarchy.png" src="../images/cdt81/pin_view_call_hierarchy.png" width="641" height="153" border="0"> 
</p><p>该功能于2011年11月12日完成，作为<a href="http://bugs.eclipse.org/342498" class="external text" title="http://bugs.eclipse.org/342498" rel="nofollow">Bug 342498的</a>一部分
</p><p><br>
</p>
<a name="Filtering_in_Outline_Views"></a><h3> <span class="headline">在大纲视图中过滤</span></h3>
<p>Project Explorer和Outline View中添加了一些额外的过滤选项：</p><p><img alt="图片：anonymous.png" src="../images/cdt81/anonymous.png" width="1166" height="512" border="0">
</p><p><br>
</p>
<a name="Mouse_Hover_for_auto_Keyword"></a><h3> <span class="headline">鼠标悬停为“自动”关键字</span></h3>
<p>鼠标悬停为<b>自动</b>关键字显示推断类型：</p><p><img alt="图片：auto_hover.png" src="../images/cdt81/auto_hover.png" width="380" height="111" border="0">
</p><p><br>
</p>
<a name="Refactoring"></a><h2> <span class="headline">重构</span></h2>
<ul><li>在重构期间添加或更改的代码根据用户首选项进行格式化。
</li><li>重构的新代码样式首选项：<p><img alt="图片：code_style.png" src="../images/cdt81/code_style.png" width="645" height="562" border="0">
</p></li></ul>
<p><br>
</p>
<a name="Indexing"></a><h2> <span class="headline">索引</span></h2>
<ul><li>支持索引中相同头文件的多个变体（ <a href="http://bugs.eclipse.org/197989" class="external text" title="http://bugs.eclipse.org/197989" rel="nofollow">Bug 197989</a> ）。
</li><li>默认情况下， <i>C / C ++&gt; Indexer&gt; Index unused headers</i>全局首选项处于打开状态（ <a href="http://bugs.eclipse.org/377992" class="external text" title="http://bugs.eclipse.org/377992" rel="nofollow">错误377992</a> ）。
</li><li>新命令： <i>索引&gt;重新解析未解决的包含</i> 。
</li></ul>
<p><br>
</p>
<a name="Code_Analysis"></a><h2> <span class="headline">代码分析</span></h2>
<a name="External-tool-based_Checkers"></a><h3> <span class="headline">基于外部工具的跳棋</span></h3>
<p>将Codan与外部工具集成的主要动机是在不离开Eclipse的情况下享受来自成熟工具的所有代码检查。使用新的基础设施：</p>
<ol><li>可以使用Codan的首选项页面配置外部工具</li><li>保存C / C ++文件时会自动调用外部工具</li><li>这些工具的输出可以显示为编辑器标记</li></ol>
<p>新的基础架构包括一个调用<a href="http://cppcheck.sourceforge.net/" class="external text" title="http://cppcheck.sourceforge.net/" rel="nofollow">Cppcheck</a>的样本检查器。
</p><p><img alt="图片：Cppcheck-配置-1.png" src="../images/cdt81/cppcheck_config_1.png" width="628" height="571" border="0"> 
</p><p>按“Customize Selected”按钮可以找到更详细的配置对话框：</p><p><img alt="图片：Cppcheck-配置-2.png" src="../images/cdt81/cppcheck_config_2.png" width="556" height="413" border="0"> 
</p><p>用户可以指定Cppcheck可执行文件的路径以及传递给Cppcheck的参数。
</p><p>可以在<a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=_OKpQ-W09MU" class="external text" title="http://www.youtube.com/watch?feature=player_embedded&amp;v=_OKpQ-W09MU" rel="nofollow">此处</a>找到此检查器的演示。
</p><p>新的基础架构使您可以轻松编写自己的基于外部工具的检查程序。在最简单的情况下，您需要：</p>
<ul><li>扩展抽象类AbstractExternalToolBasedChecker。
</li><li>提供工具的名称（例如“Cppcheck”。）
</li><li>提供可执行文件路径的默认值以及传递给可执行文件的参数。
</li><li>在扩展点“org.eclipse.cdt.core中注册IErrorParser。ErrorParser“with context”codan“。此解析器逐行解析外部工具的输出。由您来决定如何处理输出（例如创建错误标记。）
</li></ul>
<p>有关详细信息，请查看CppcheckChecker的源代码。
</p><p>对于设置复杂的工具，新的基础架构非常灵活且可配置。它允许您几乎配置检查器的每个方面，从工具可以检查的文件到向工具提供参数的方式。
</p>
<a name="New_Codan_checkers"></a><h3> <span class="headline">新的Codan跳棋</span></h3>
<ul><li>应正确初始化类成员（ <a href="http://bugs.eclipse.org/339795" class="external text" title="http://bugs.eclipse.org/339795" rel="nofollow">错误339795</a> ）。例：</li></ul>
<pre>   struct Demo {
       Demo() {}   // Warning: Member 'field' was not initialized in this constructor 
   	
       int field;
   };
</pre>
<p><br>
</p>
<a name="Build"></a><h2> <span class="headline">建立</span></h2>
<a name="Scanner_Discovery"></a><h3> <span class="headline">扫描仪发现</span></h3>
<p>Scanner Discovery已在此版本中进行了重新设计。Scanner Discovery的主要目的始终是为索引器和构建提供包含路径和宏。现在这些由语言设置提供商提供。有关详细信息，请参阅Wiki上的<a href="http://wiki.eclipse.org/CDT/ScannerDiscovery61" class="external text">Scanner Discovery</a> 。
</p><p><img alt="图片：sd90Entries.png" src="../images/cdt81/sd90entries.png" width="1111" height="736" border="0">
</p><p><img alt="图片：sd90Providers.png" src="../images/cdt81/sd90providers.png" width="1177" height="736" border="0">
</p><p><br>
</p>
<a name="Mac_OSX_Frameworks"></a><h3> <span class="headline">Mac OSX框架</span></h3>
<p>新的扫描程序发现可以发现并使用索引器Mac OSX Frameworks文件夹，请参阅<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=69529" class="external text" title="https://bugs.eclipse.org/bugs/show_bug.cgi?id=69529" rel="nofollow">错误69529</a>
</p><p><img alt="图片：Frameworks.png" src="../images/cdt81/frameworks.png" width="450" height="202" border="0">
</p><p><br>
</p>
<a name="Console"></a><h3> <span class="headline">安慰</span></h3>
<p>构建控制台标记更突出的开始和结束构建和报告已用时间：</p><p><img alt="图片：Console81.png" src="../images/cdt81/console81.png" width="635" height="263" border="0">
</p><p><br>
</p>
<a name="Parallel_Build"></a><h3> <span class="headline">并行构建</span></h3>
<p>并行构建已重新构建，请参阅<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=259768" class="external text" title="https://bugs.eclipse.org/bugs/show_bug.cgi?id=259768" rel="nofollow">错误259768</a> ：</p><p><img alt="图片：ParallelBuild.png" src="../images/cdt81/parallelbuild.png" width="872" height="461" border="0">
</p><p><br>
</p>
<a name="Managed_Build"></a><h3> <span class="headline">托管构建</span></h3>
<p>可以从添加到托管构建中选择一些其他选项， <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=365461" class="external text" title="https://bugs.eclipse.org/bugs/show_bug.cgi?id=365461" rel="nofollow">错误365461</a> 。
</p><p><img alt="图片：ExtraWarnings.png" src="../images/cdt81/extrawarnings.png" width="774" height="479" border="0">
</p><p><br>
</p>
<a name="Debug"></a><h2> <span class="headline">调试</span></h2>
<a name="Multicore_Visualizer_View"></a><h3> <span class="headline">多核可视化器视图</span></h3>
<p>CDT现在可选地包括多核可视化器视图。此视图显示当前应用程序状态的图形表示。它允许用户单击并拖动选择进程/线程组，并直接从可视化工具将调试命令应用于它们。在Visualizer视图中进行的选择将在Debug视图中自动反映，反之亦然。Multicore Visualizer View旨在扩展到当前和未来多核硬件上的大量cpu和每个CPU的核心数。
</p><p>Multicore Visualizer View可用作当前应用程序的高级可视化概览，并可与Debug View一起使用，后者提供更深入的详细信息。
</p><p>Multicore Visualizer View只是基于底层Visualizer Framework插件的可视化工具的一个示例。这为开发此类可视化开发工具提供了可插拔，可扩展的平台。
</p><p><img alt="图片：VisualizerSnapshot.png" src="../images/cdt81/visualizersnapshot.png" width="648" height="421" border="0"> 
</p><p>请注意，多核Visualizer只能使用Linux目标;它无法在Windows或Mac目标上进行调试。这是GDB的当前限制，它不提供有关内核的信息，对于那些目标（在写作时，GDB是7.4版本）。
</p><p>此功能已于2012年2月10日完成。有关详细信息，请参阅<a href="http://bugs.eclipse.org/335027" class="external text" title="http://bugs.eclipse.org/335027" rel="nofollow">错误335027</a> 
</p><p>Multicore Visualizer是CDT的可选功能，必须手动安装。该功能称为<q>C / C ++多核可视化工具</q> 。安装它将安装Multicore Visualizer和Visualizer Framework。如果您只想安装Visualizer Framework（以构建自己的可视化工具），则可以自行安装该功能;它被称为<q>CDT Visualizer Framework</q> 。安装功能后，您可以通过打开名为<q>Visualizer</q>的视图来访问Multicore Visualizer（或任何其他可视化工具）。
</p>
<a name="Partitioning_of_large_arrays"></a><h3> <span class="headline">大型数组的分区</span></h3>
<p>CDT现在将大型数组显示为分区集合。
</p><p><img alt="图片：LargeArray.png" src="../images/cdt81/largearray.png" width="865" height="354" border="0"> 
</p><p>该功能于2012年1月26日完成，作为<a href="http://bugs.eclipse.org/365541" class="external text" title="http://bugs.eclipse.org/365541" rel="nofollow">Bug 365541的</a>一部分 
</p>
<a name="Edit_Breakpoint_on_Create"></a><h3> <span class="headline">在Create上编辑断点</span></h3>
<p>不再需要首先创建CDT断点，然后编辑其属性。创建断点时可以设置启用，忽略计数，条件，临时等属性。
</p><p>在创建断点之前，有几种方法可以打开属性对话框：</p>
<ul><li>添加断点操作。
<ol><li>在编辑器或反汇编视图中，调出排水沟上的弹出菜单。
</li><li>选择<i>Add Breakpoint ...</i>菜单项。
</li><li>这将打开预填充断点位置的行断点的断点属性对话框。
</li></ol>
</li><li>控制 - 双击<ol><li>双击编辑装订线时按住<i>Control</i>键。
</li><li>这将打开预填充断点位置的行断点的断点属性对话框。
</li></ol>
</li><li>使用切换方法断点<i>控制</i>键<ol><li>打开编辑器的Outline视图。
</li><li>右键单击一个方法以显示弹出菜单。
</li><li>在选择“切换方法断点”操作时按住控制键。
</li><li>这将打开预先填充方法名称的函数断点对话框。
</li></ol>
</li><li>添加观察点（C / C ++）<ol><li>在“断点”视图中，打开视图菜单。
</li><li>选择<i>添加观察点（C / C ++）...</i>操作。
</li><li>这将打开watchpoint属性对话框。
</li><li>用户必须输入观察点表达式。
</li></ol>
</li><li>添加函数断点（C / C ++）<ol><li>在“断点”视图中，打开视图菜单。
</li><li>选择<i>添加函数断点（C / C ++）...</i>操作。
</li><li>这将打开函数断点属性对话框。
</li><li>用户必须输入函数表达式。
</li></ol>
</li></ul>
<br>
<p><img alt="图像：Cdt n和n 8 1-add breakpoint dialog.png" src="../images/cdt81/cdt_n_and_n_8_1_add_breakpoint_dialog.png" width="631" height="536" border="0">
</p><p>图像：即将创建的行断点的断点属性对话框。
</p>
<a name="Breakpoint_Toggle_Short-Cuts"></a><h3> <span class="headline">Breakpoint Toggle Short-Cuts</span></h3>
<p>编辑器和反汇编视图菜单中的“切换断点”操作现在支持与修饰键一起使用时的新行为：</p>
<ul><li>双击<i>Shift</i>键，同时双击现有断点以启用或禁用断点。
</li><li>双击<i>Control</i>键，同时双击现有断点，以打开断点属性对话框以编辑现有断点。
</li><li>双击<i>Control</i>键，同时双击没有断点的位置，以打开断点属性对话框以创建新断点。
</li></ul>
<p><br> <img alt="图片：Cdt n和n 8 1-editor gutter menu.png" src="../images/cdt81/cdt_n_and_n_8_1_editor_gutter_menu.png" width="432" height="244" border="0"> 
</p><p>图像：编辑器装订线弹出菜单，其中包含新加速器的提示。
</p>
<a name="Function_Breakpoint_Manual_Entry"></a><h3> <span class="headline">功能断点手动输入</span></h3>
<p>有一个用于创建函数断点的新选项：</p>
<ol><li>打开“断点”视图菜单。
</li><li>选择<i>Add Function Breakpoint C / C ++</i> 。
</li><li>填写函数名称或表达式，然后选择“确定”以创建断点。
</li></ol>
<a name="Advanced_character_encoding_support"></a><h3> <span class="headline">高级字符编码支持</span></h3>
<p>CDT现在支持在调试时处理字符串和宽字符串的不同字符编码。这包括完全支持Unicode编码和许多其他流行的编码。您可以在“调试”首选项中选择字符和宽字符编码。
</p><p><img alt="图片：DebugPreferences.png" src="../images/cdt81/debugpreferences.png" width="639" height="368" border="0"> 
</p><p>然后，CDT将在调试时根据所选编码正确显示字符串。
</p><p><img alt="图片：CharsetDebug.png" src="../images/cdt81/charsetdebug.png" width="774" height="266" border="0"> 
</p><p>请注意，此功能需要GDB 7.0或更高版本。该功能于2012年3月7日完成，作为<a href="http://bugs.eclipse.org/307311" class="external text" title="http://bugs.eclipse.org/307311" rel="nofollow">Bug 307311</a> ， <a href="http://bugs.eclipse.org/367456" class="external text" title="http://bugs.eclipse.org/367456" rel="nofollow">Bug 367456</a>和<a href="http://bugs.eclipse.org/370462" class="external text" title="http://bugs.eclipse.org/370462" rel="nofollow">Bug 370462的一部分</a> 。
</p>
<a name="Timeout_support_for_GDB_commands_in_DSF.2FGDB"></a><h3> <span class="headline">DSF / GDB中对GDB命令的超时支持</span></h3>
<p>DSF / GDB现在支持GDB命令的超时。该功能是可选的，默认情况下禁用。超时值是可配置的。启用此功能后，可以为某些命令分配自定义值，所有其他命令都使用默认值。该功能于2012年4月17日完成，作为<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=361934" class="external text" title="https://bugs.eclipse.org/bugs/show_bug.cgi?id=361934" rel="nofollow">Bug 361934的</a>一部分。
</p><p><img alt="图片：TimeoutPreferences.png" src="../images/cdt81/timeoutpreferences.png" width="629" height="754" border="0">
</p><p><img alt="图片：TimeoutAdvanced.png" src="../images/cdt81/timeoutadvanced.png" width="531" height="244" border="0">
<br>
</p>
<a name="Multi-select_Resume.2FSuspend_operations"></a><h3> <span class="headline">多选恢复/暂停操作</span></h3>
<p>CDT现在允许对同一调试会话的多个选择执行Resume或Suspend操作。因为这样的概念仅在非停止调试会话中增加了价值，所以它仅在这样的会话中受支持（参见<a href="../faq/index.html#What_is_the_difference_between_Non-stop_and_All-stop_multi-threaded_debugging.3F" class="external text" title="http://wiki.eclipse.org/CDT/User/FAQ#What_is_the_difference_between_Non-stop_and_All-stop_multi-threaded_debugging.3F" rel="nofollow">不间断调试</a> ）。多选Resume / Suspend的行为如下：</p>
<ul><li>任何选定的堆栈帧意味着选择其对应的线程。
</li><li>如果选择了一个或多个线程（而不是进程）并且触发了恢复/暂停操作，则将恢复/暂停操作当前有效的每个所选线程。
</li><li>如果选择了一个或多个进程（而不是线程）并且触发了恢复/暂停操作，则将恢复/暂停每个所选进程。恢复/暂停进程意味着恢复/暂停其操作当前有效的每个线程。
</li><li>如果选择了线程和进程，并且触发了恢复/暂停操作，则将恢复/暂停每个所选进程，并且将恢复/暂停<b>不是任何所选进程的一部分的</b>每个所选线程。这个想法是，如果一个进程正在恢复/暂停，它的每个线程将自动恢复/暂停，因此，不应该再次恢复/暂停，因为它也被选中。
</li></ul>
<p>如上所述，CDT对多选恢复/暂停采取宽容的方法。这意味着如果多选包括已停止和正在运行的线程，则仍允许恢复操作，并且仅恢复挂起的线程;类似地，在这样的多选择上，允许暂停操作，并且仅暂停正在运行的线程。
</p>
<h4>例</h4>
<p><img alt="图片：MultiSelectRunControl.png" src="../images/cdt81/multiselectruncontrol.png" width="602" height="682" border="0"> 
</p><p>在上面的屏幕截图中，如果用户按下当前多选的“恢复”按钮，则会发生以下情况：</p>
<ol><li>选择了<i>Consumer</i>进程节点，因此将恢复整个进程。这意味着悬挂的螺纹7和9将被恢复，而螺纹6,8和10将被忽略，因为它们已经在运行。
</li><li>请注意，忽略选择线程9和10的事实，因为这些线程是所选<i>消费者</i>进程的一部分，将被恢复。
</li><li>堆栈帧<i>doWork（）</i>和<i>work（）</i>被选中并属于线程4，线程4在其位置被隐式选择。因此将恢复线程4。
</li><li>线程2被选中并暂停，并将被恢复。
</li><li>线程5被选中但正在运行，因此将被忽略。
</li></ol>
<p>此功能于2012年4月25日完成，作为<a href="http://bugs.eclipse.org/330974" class="external text" title="http://bugs.eclipse.org/330974" rel="nofollow">Bug 330974的</a>一部分
</p>
<a name="Show_only_suspended_threads_in_Debug_view"></a><h3> <span class="headline">在Debug视图中仅显示挂起的线程</span></h3>
<p>CDT现在具有全局首选项，允许仅在Debug视图中显示挂起的线程。当处理大量线程时，用户通常对正在检查的线程（暂停的线程）感兴趣并且不关心正在运行的线程。使用此首选项，所有正在运行的线程都不会显示在Debug视图中。请注意，当线程步进时，它将保持可见，尽管它在技术上正在运行。Debug视图的process元素将显示当前从视图中过滤的线程数。
</p><p>以下示例显示了完全相同的调试会话。第一个屏幕截图仅显示挂起的线程，而第二个显示所有线程。
</p><p><img alt="图片：CDT_Debug_WithHiding.png" src="../images/cdt81/cdt_debug_withhiding.png" width="681" height="377" border="0">
</p><p><img alt="图片：CDT_Debug_NoHiding.png" src="../images/cdt81/cdt_debug_nohiding.png" width="554" height="494" border="0">
</p><p>下面显示了如何访问首选项，默认情况下禁用该首选项。
</p><p><img alt="图片：CDT_Debug_HidingPref.png" src="../images/cdt81/cdt_debug_hidingpref.png" width="554" height="564" border="0">
</p><p>此功能于2012年5月4日完成，作为<a href="http://bugs.eclipse.org/375585" class="external text" title="http://bugs.eclipse.org/375585" rel="nofollow">Bug 375585的</a>一部分 
</p>
<a name="Multi-select_attach_dialog"></a><h3> <span class="headline">多选附加对话框</span></h3>
<p>CDT现在允许在单个用户操作中选择要附加的多个进程。底部窗格用于查看已选择的进程。如果调试会话不支持多进程调试（需要GDB&gt; = 7.2并启用NonStop），则只会附加第一个进程。
</p><p><img alt="图片：Multiselect.png" src="../images/cdt81/multiselect.png" width="436" height="553" border="0"> 
</p><p>该功能于2011年6月30日完成，作为<a href="http://bugs.eclipse.org/293679" class="external text" title="http://bugs.eclipse.org/293679" rel="nofollow">Bug 293679的</a>一部分 
</p>
<a name="Default_Postmortem_file_location"></a><h3> <span class="headline">默认Postmortem文件位置</span></h3>
<p>CDT现在允许用户在触发提示时为死后启动时指定核心文件位置的默认目录。由于事后启动可以轻松地重复使用同一二进制文件的不同核心文件，因此该功能有助于减少选择核心文件所需的导航量。请注意，仍然支持指定实际的核心文件，并将整个字段留空，这也会触发提示，但使用默认目录作为其起始位置。
</p><p>请注意，此“核心文件”字段支持使用$ {workspace_loc}等变量。
</p><p>此功能适用于核心文件和跟踪文件。
</p><p><img alt="图片：CorePath.png" src="../images/cdt81/corepath.png" width="937" height="714" border="0"> 
</p><p>此功能于2012年2月17日完成，作为<a href="http://bugs.eclipse.org/362039" class="external text" title="http://bugs.eclipse.org/362039" rel="nofollow">Bug 362039的</a>一部分 
</p>
<a name="Support_for_Fast_Tracepoints"></a><h3> <span class="headline">支持快速跟踪点</span></h3>
<p>CDT现在允许用户使用GDB支持的快速跟踪点。快速跟踪点使用指令跳转而不是陷阱来提高效率。快速跟踪点需要在程序中插入最少的空间，因此可能无法在某些位置设置。要使快速跟踪点工作，必须在劣质进程中加载一个称为进程内代理（IPA）的特殊库。该库是作为gdbserver的组成部分构建和分发的。有关更多详细信息，请参阅GDB文档。
</p><p>用户可以在启动中选择三种跟踪点模式：</p>
<ol><li><b>快速</b> ：仅使用快速跟踪点。如果无法使用快速跟踪点，则不会植入跟踪点。
</li><li><b>正常</b> ：仅使用正常的跟踪点。
</li><li><b>自动</b> ：尝试使用快速跟踪点。如果无法使用快速跟踪点，则自动使用普通跟踪点。
</li></ol>
<p><img alt="图片：FastTracepointSelection.png" src="../images/cdt81/fasttracepointselection.png" width="900" height="500" border="0"> 
</p><p>该功能于2011年7月20日完成，作为<a href="http://bugs.eclipse.org/346320" class="external text" title="http://bugs.eclipse.org/346320" rel="nofollow">Bug 346320的</a>一部分 
</p>
<a name="Enhancements_to_Tracepoints"></a><h3> <span class="headline">跟踪点的增强功能</span></h3>
<p>通过使用GDB 7.4，Eclipse中提供了一些新功能。
</p>
<ul><li>实时启用/禁用C / C ++跟踪点<ul><li>现在可以在跟踪实验开始后随时启用和禁用跟踪点，并且将立即在正在进行的实验中生效。
</li><li><b>注意：</b>尽管GDB 7.4似乎允许在跟踪实验期间创建跟踪点并将其添加到正在进行的实验中，但此行为似乎存在一些问题。其中之一是在实验期间删除跟踪点<b>不会</b>从正在进行的实验中删除该跟踪点。在GDB中修复此问题之前，建议用户在跟踪实验期间坚持启用/禁用操作。<br> 
</li></ul>
</li><li>较小的快速跟踪点<ul><li>在32位x86架构上，现在可以将快速跟踪点放置在具有4字节指令的位置，此前它们仅限于具有5字节或更长指令的位置。
</li></ul>
</li><li>跟踪点收集字符串<ul><li>跟踪点Collect操作现在有一个选项，可以请求将字符指针收集为字符串。它告诉GDB有效地取消引用指针到字符的类型，并将内存字节收集到零字节。可选的整数限制设置将收集的字节数的限制。此功能已于2012年4月20日完成。有关详细信息，请参阅<a href="http://bugs.eclipse.org/373707" class="external text" title="http://bugs.eclipse.org/373707" rel="nofollow">错误373707</a> 
</li></ul>
</li></ul>
<p><br>
<img alt="图片：CollectString.png" src="../images/cdt81/collectstring.png" width="437" height="304" border="0">
</p>
<a name="Show_the_actual_variable_type_based_on_RTTI"></a><h3> <span class="headline">显示基于RTTI的实际变量类型</span></h3>
<p>使用GDB 7.5或更高版本，CDT可以在变量和表达式视图中显示实际的变量类型（不是声明的变量类型）。请考虑以下示例：</p>
<pre>   struct SuperInterface {
       virtual ~SuperInterface() {}  // enable RTTI for Interface class
   };
   
   struct TheImplementation&nbsp;: public SuperInterface {
       TheImplementation(int _v1, float _v2)
          &nbsp;: someField(_v1), anotherField(_v2) {}
   
       int someField;
       float anotherField;
   };
   
   
   int main() {
       SuperInterface* i = new TheImplementation(42, 4.2);
       return 0;     // [Launch debug until here]
   }
</pre>
<p>启动调试会话并运行直到return语句：</p><p><img alt="图片：CDT_Debug_VariableTypeBasedOnRtti.png" src="../images/cdt81/cdt_debug_variabletypebasedonrtti.png" width="493" height="382" border="0">
</p><p>默认情况下启用此功能，如果您具有正确的GDB版本（7.5或更高版本）并启用RTTI生成（默认情况下在gcc中启用），则可以使用此功能，但可以在首选项中将其关闭：</p><p><img alt="图片：CDT_Debug_VariableTypeBasedOnRttiPref.png" src="../images/cdt81/cdt_debug_variabletypebasedonrttipref.png" width="842" height="589" border="0">
</p><p>此功能已于2012年5月5日完成，作为<a href="http://bugs.eclipse.org/376901" class="external text" title="http://bugs.eclipse.org/376901" rel="nofollow">Bug 376901</a>和<a href="http://bugs.eclipse.org/377536" class="external text" title="http://bugs.eclipse.org/377536" rel="nofollow">Bug 377536的一部分</a> 。
</p>
<a name="Build_variables_support_in_.22C.2FC.2B.2B_Application.22_field_of_launch_configuration"></a><h3> <span class="headline">在启动配置的“C / C ++应用程序”字段中构建变量支持</span></h3>
<p><img alt="图片：CDT_Debug_VarsInAppplicationField.png" src="../images/cdt81/cdt_debug_varsinappplicationfield.png" width="727" height="556" border="0">
</p><p>还有一些新的CDT特定的构建变量：</p>
<ul><li>config_name  - 指定为参数的项目的活动配置的名称;</li><li>config_description  - 指定为参数的项目的活动配置的描述;</li></ul>
<p>此功能于2012年4月2日完成，作为<a href="http://bugs.eclipse.org/180256" class="external text" title="http://bugs.eclipse.org/180256" rel="nofollow">Bug 180256</a>和<a href="http://bugs.eclipse.org/375814" class="external text" title="http://bugs.eclipse.org/375814" rel="nofollow">Bug 375814的一部分</a> 。
</p>
<a name="Support_for_octal_number_format_in_CDI"></a><h3> <span class="headline">支持CDI中的八进制数格式</span></h3>
<p>CDI现在还支持使用八进制数格式来显示变量，表达式和寄存器的内容。您可以在“调试”首选项中选择八进制数字格式。该功能于2012年3月7日完成，作为<a href="http://bugs.eclipse.org/370462" class="external text" title="http://bugs.eclipse.org/370462" rel="nofollow">Bug 370462的</a>一部分。
</p><p><br>
</p>
<a name="C.2FC.2B.2B_Unit_Testing_Support"></a><h2> <span class="headline">C / C ++单元测试支持</span></h2>
<p><img alt="图片：CUnitTest-View.png" src="../images/cdt81/cunittest_view.png" width="781" height="322" border="0">
</p><p><img alt="图片：CUnitTest-Launch.png" src="../images/cdt81/cunittest_launch.png" width="807" height="506" border="0">
</p><p>支持的功能：</p>
<ul><li>在支持以下框架的情况下运行的测试：<ul><li><a href="http://www.boost.org/doc/libs/1_46_1/libs/test/doc/html/index.html" class="external text" title="http://www.boost.org/doc/libs/1_46_1/libs/test/doc/html/index.html" rel="nofollow">促进。测试</a> ;</li><li><a href="http://doc.qt.nokia.com/solutions/4/qttestlib" class="external text" title="http://doc.qt.nokia.com/solutions/4/qttestlib" rel="nofollow">Qt测试</a> ;</li><li><a href="http://code.google.com/p/googletest/" class="external text" title="http://code.google.com/p/googletest/" rel="nofollow">谷歌测试框架</a> ;</li></ul>
</li><li>测试层次浏览;</li><li>测试消息查看，按测试或测试套件过滤;还支持源查找;</li><li>测试统计（总/失败/中止测试计数，红/绿条）;</li><li>测试时间测量;</li><li>测试层次结构过滤器（仅显示失败的测试）;</li><li>仅运行和重新运行选定的测试（不是整个测试模块）;</li><li>启动整个测试模块的调试会话或仅启动选定的测试;</li><li>测试消息过滤器（严重性）;</li><li>测试运行历史;</li><li>提供的测试运行程序列表可以轻松扩展，编写新的Tests Runner插件。
</li></ul>
<p>HOWTO，已知的问题和限制可以在维基上的<a href="http://wiki.eclipse.org/CDT/User/FAQ#C.2FC.2B.2B_Unit_Testing_Support" class="external text">CDT FAQ中</a>找到。
</p><p>此功能于2012年4月18日完成，作为<a href="http://bugs.eclipse.org/210366" class="external text" title="http://bugs.eclipse.org/210366" rel="nofollow">Bug 210366的</a>一部分。
</p>
<a name="Bugs_Fixed"></a><h2> <span class="headline">此版本中修复了错误</span></h2>
<p>此版本完成了Bugzilla任务： <a href="https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced;bug_status=RESOLVED;bug_status=VERIFIED;bug_status=CLOSED;resolution=FIXED;target_milestone=8.0.1;target_milestone=8.0.2;target_milestone=8.0.3;target_milestone=8.1;product=CDT;classification=Tools">CDT 8.1错误修复</a>
</p><p><br>
</p>

	<h2>其他CDT版本中有什么新功能</h2>
	
	<p>要了解其他CDT版本中的新功能，请参阅：</p>
	<p><a href="cdt_c_whatsnew.htm">CDT  - 新的和值得注意的</a></p>
	<p><a href="cdt_c_whatsnew_82.htm">CDT 8.2  - 新的和值得注意的</a></p>
	<p><a href="cdt_c_whatsnew_81.htm">CDT 8.1  - 新的和值得注意的</a></p>
	<p><a href="cdt_c_whatsnew_80.htm">CDT 8.0  - 新的和值得注意的</a></p>
	<p><a href="cdt_c_whatsnew_70.htm">CDT 7.0  - 新的和值得注意的</a></p>
	<p><a href="cdt_c_whatsnew_60.htm">CDT 6.0  - 新的和值得注意的</a></p>
	<p><a href="http://wiki.eclipse.org/CDT/User/NewIn50">CDT 5.0  - 新的和值得注意的</a></p>
	
	<p><a href="#top">回到顶部</a></p>
	
	<p> </p>
</div>
</body>
</html>