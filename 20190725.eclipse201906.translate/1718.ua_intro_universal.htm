<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"></script>
<title>通用介绍</title>
</head>
<body >

<h2>通用介绍</h2>

<h3>什么是通用介绍？</h3>

<p>通用介绍是完整的，现成的开箱即用的实现，具有预定义的页面结构，所有产品都可以依赖（作为API）。它是一个完整的实现，包括演示，但没有内容，可以被任何产品使用。
</p>

<h3>动机</h3>

<p>在3.2之前，介绍框架用于定义具有唯一贡献点或“锚点”的欢迎页面。其他组件可以提供将内容添加到这些锚点的扩展。虽然这种机制适用于封闭式解决方案，但对于大型产品来说，维护起来越来越困难。由于客户对欢迎页面的贡献“自下而上”，很难控制最终结果并解决相互冲突的贡献。
</p>

<p>举例来说，可重用的eclipse功能的提供者。他/她创建了一个由许多插件组成的有用功能。该功能可以参与多个产品，每个产品都有自己的Welcome实现。创建欢迎贡献时，功能提供商将面临几个问题：</p>

<ul>
  <li>由于它必须为许多不同的产品做出贡献，因此该功能必须预先了解每个产品的页面标识符。
  </li>
  <li>完全有可能其中一个产品将具有与功能提供商期望的完全不同的Welcome实现;该贡献不会出现在这些产品中。
  </li>
  <li>即使产品共享一个共同的欢迎实现，该功能的重要性（以及它在页面上的相对位置）也不会相同。该功能可能是产品中最重要的组件之一，也可能被列为“另请参阅”。然而，要求功能提供者提前在目标页面上完全拼写出位置。
  </li>
</ul>

<p>很明显，在以下条件下，可重用功能的欢迎贡献更容易开发：</p>

<ul>
  <li>有一个常见的欢迎实现可以依赖（作为API的一种形式）</li>
  <li>延迟目标页面分辨率（以便将贡献的最终位置决定留给产品汇编程序）</li>
</ul>

<h3>输入通用介绍</h3>

<p>通用介绍基于介绍实现的经验以及需要实现贡献者可依赖的实现。使用现有的介绍框架构建实现，因此，所有现有的介绍实现将继续工作，客户端将能够根据其计划切换到新模型。当然，只要不切换，他们就无法获得新实施的好处，如智能内容合并，新的视觉解决方案等。</p>

<h3>优点</h3>

<p>使用通用介绍的一些好处包括：</p>

<ul>
  <li>产品可以简单地指向通用介绍，而无需从头开始实施介绍</li>
  <li>每个产品都应该能够在一定程度上配置介绍（标题，品牌形象，演示主题）</li>
  <li>将提供涵盖大多数产品需求的许多根页。要显示的页面列表也是可配置的</li>
  <li>该演示文稿与产品无关，足以更好地适应日益组件化的世界。它适用于单片产品和“最佳”eclipse产品，这些产品与不同公司创建的组件组装在一起</li>
  <li>最终用户可以通过首选项页面以用户友好的方式配置通用介绍</li>
</ul>

</body>
</html>