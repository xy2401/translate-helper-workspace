<html lang="zh-Hans" >
  <head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2014. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="Content-Style-Type" content="text/css">

    <title>Java搜索选项卡</title>
    <link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1">
  </head>

  <body >
    <h1>Java搜索选项卡</h1>

    <p>“搜索”对话框中的此选项卡允许您搜索Java元素。要显示选项卡，请调用<b>Search&gt; Java</b> 。</p>

    <h2>搜索字符串</h2>

    <p>在此字段中，根据需要使用对话框中提到的通配符键入要搜索的表达式。该字段基于当前选择进行初始化。</p>
<!-- Description copied from Javadoc of org.eclipse.jdt.core.search.SearchPattern.createPattern(String, int, int, int): -->
 <ul>
 	<li>类型模式具有以下语法：<p><b><code>[qualification '.']typeName ['&lt;' typeArguments '&gt;']</code></b></p>
			<p>例子：</p>
			<ul>
 			<li><code>java.lang.Object</code></li>
				<li><code>Runnable</code></li>
				<li><code>List&lt;String&gt;</code></li>
			</ul>
			<p>可以使用以下语法指定类型参数以搜索对参数化类型的引用：</p><p>
 		<b><code>'&lt;' { [ '?' {'extends'|'super'} ] type ( ',' [ '?' {'extends'|'super'} ] type )* | '?' } '&gt;'</code></b>
 		</p><div style="font-style:italic">注意：<ul>
 			<li>'*'在类型参数定义&lt;&gt;中无效</li>
 			<li>“？当它在&lt;&gt;内时被视为通配符（即它必须放在类型参数的第一个位置）</li>
 		</ul>
 		</div>
 		<br>
 	</li>
 	<li>方法模式具有以下语法：<p><b><code>[declaringType '.'] ['&lt;' typeArguments '&gt;'] methodName ['(' parameterTypes ')'] [returnType]</code></b></p>
			<p>类型参数具有与类型模式部分中说明的语法相同的语法。</p>
			<p>例子：</p>
			<ul>
				<li><code>java.lang.Runnable.run() void</code></li>
				<li><code>main(*)</code></li>
				<li><code>&lt;String&gt;toArray(String[])</code></li>
			</ul>
 		<br>
		</li>
 	<li>构造函数模式具有以下语法：<p><b><code>['&lt;' typeArguments '&gt;'] [declaringQualification '.'] typeName ['(' parameterTypes ')']</code></b></p>
			<p>类型参数具有与类型模式部分中说明的语法相同的语法。</p>
			<p><i>请注意，不应输入构造函数名称，因为它始终与类型名称相同。</i></p>
			<p>例子：</p>
			<ul>
				<li><code>java.lang.Object()</code></li>
				<li><code>Test(*)</code></li>
				<li><code>&lt;Exception&gt;Sample(Exception)</code></li>
			</ul>
 		<br>
 	</li>
 	<li>字段模式具有以下语法：<p><b><code>[declaringType '.'] fieldName [fieldType]</code></b></p>
			<p>例子：</p>
			<ul>
				<li><code>java.lang.String.serialVersionUID long</code></li>
				<li><code>field*</code></li>
			</ul>
 		<br>
 	</li>
 	<li>包模式具有以下语法：<p><b><code>packageNameSegment {'.' packageNameSegment}</code></b></p>
			<p>例子：</p>
			<ul>
				<li><code>java.lang</code></li>
				<li><code>org.e*.jdt.c*e</code></li>
			</ul>
 	</li>
 </ul>
<!-- End of copy -->

    <h2 class="Head">搜索</h2>

    <p>选择以搜索以下类型的元素之一：</p>

    <ul>
      <li>类型</li>

      <li>方法</li>

      <li>包</li>

      <li>构造函数</li>

      <li>模</li>

      <li>领域</li>
    </ul>

    <h2 class="Head">限制于</h2>

    <p>选择此选项可将搜索结果限制为以下类型之一：</p>

    <ul>
      <li>声明</li>

      <li>实现者（仅在搜索类型时可用）</li>

      <li>参考</li>

      <li>所有事件</li>

      <li>读访问权限（仅在搜索字段时可用）</li>

      <li>写访问权限（仅在搜索字段时可用）</li>
      
      <li>匹配位置（仅在搜索类型或方法引用时可用）。
        <p>匹配位置允许进一步缩小匹配的位置。</p>
        <p>选择要搜索的位置：</p>
        <ul>
          <li>类型参考：<ul>
              <li>超级声明</li>
              <li>注释</li>
              <li>字段类型</li>
              <li>局部变量类型</li>
              <li>方法返回类型</li>
              <li>方法参数类型</li>
              <li>抛出的异常类型</li>
              <li>输入参数边界</li>
              <li>通配符边界</li>
              <li>输入参数</li>
              <li>转换表达式</li>
              <li>捕捉条款</li>
              <li>类实例创建</li>
              <li>'instanceof'检查</li>
            </ul>
          </li>
          <li>方法参考：<ul>
              <li>'这个。'引用</li>
              <li>暗示'这个'。引用</li>
              <li>'超。'引用</li>
              <li>合格的参考资料</li>
              <li>'::'方法引用</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>

    <h2 class="Item">搜索</h2>
   
	<p>选择范围中的搜索结果的位置</p>
	
	<ul>
		<li>来源：搜索范围内的所有源文件</li>
		<li>所需项目：搜索所有必需项目</li>
		<li>JRE库：在构建路径上的JRE库中搜索</li>
		<li>应用程序库：在构建路径上的库中搜索</li>
	</ul>

    <h2 class="Item">范围</h2>

    <p>选择此选项可将搜索结果限制为以下范围之一</p>

    <ul>
      <li>工作区</li>

      <li>选定的资源</li>
      
      <li>附上项目</li>

      <li>工作集</li>
    </ul>

    <p>按<span class="control">选择</span>以选择或创建工作集。</p>


    <h2 class="Item">搜索结果视图，过滤器</h2>

    <p>搜索结果显示在“ <b>搜索”</b>视图中。</p>
    <p><b>视图菜单</b>包含以下选项：</p>
    <ul>
      <li><b>显示为列表</b><br>呈现平面列表中的结果。在此模式下，上下文菜单包含一个<b>Sort By</b>菜单，其中包含选项<b>Name</b> ， <b>Path</b> ， <b>Parent Name</b> 。</li>

      <li><b>显示为树</b><br>呈现层次结构中的结果。在此模式下，视图工具栏中将显示4个按钮，您可以在其中<b>按项目</b> ， <b>包</b> ， <b>文件</b>或<b>类型</b>进行<b>分组</b> 。
      </li>
      
      <li><b>过滤器</b><br>各种过滤器允许排除某些搜索结果，例如潜在匹配，导入匹配，Javadoc，不推荐，非公共，静态或非静态元素。<br>对于类型，有不精确或不匹配类型参数的过滤器。<br>对于方法，有一个过滤器用于引用覆盖方法。<br>对于字段，有用于读或写访问的过滤器。<br>
      </li>
    </ul>


    <h3 class="related">相关概念</h3>
      <a href="../concepts/concept-java-search.htm">Java搜索</a>
    <h3 class="related">相关参考</h3>
      <a href="../reference/ref-menu-search.htm">搜索</a>

  </body>
</html>