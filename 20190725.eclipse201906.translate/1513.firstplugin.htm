<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>简单的插件示例</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h1>插上电源：Hello World与工作台相遇</h1>
<p>Eclipse平台的结构是核心运行时引擎和一组作为平台<b>插件</b>安装的附加功能。插件通过对预定义的<b>扩展点</b>做出贡献来为平台提供功能。工作台UI由一个这样的插件提供。启动工作台时，您没有启动单个Java程序。您正在激活平台运行时，该运行时可以动态发现已注册的插件并根据需要启动它们。</p>
<p>如果要提供扩展平台的代码，可以通过在插件中定义系统扩展来实现。该平台具有一组明确定义的扩展点 - 您可以在其中挂钩并提供系统行为的位置。从平台的角度来看，您的插件与资源管理系统或工作台本身等基本插件没什么区别。</p>
<p>那么你的代码如何成为一个插件呢？</p>
<ul>
  <li>确定您的插件如何与平台集成。</li>
  <li>确定您需要提供的扩展点，以便集成插件。</li>
  <li>根据扩展点的规范实现这些扩展。</li>
  <li>提供描述代码的打包和先决条件的清单文件（manifest.mf），以及描述您定义的扩展的插件清单（plugin.xml）。</li>
</ul>
<p>通过实现旧的经典“Hello World”作为插件，可以最好地演示创建插件的过程。此示例的目的是让您了解插件开发与Java应用程序开发的不同之处。我们将掩盖许多细节，以便构建和运行插件。然后，我们将更详细地查看扩展点，查看它们的定义位置，并了解插件如何描述其扩展的实现。</p>

</body>
</html>