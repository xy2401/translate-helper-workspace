<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>自定义小部件</title>

<link rel="stylesheet" type="text/css" href="../book.css"></link>
</head>
<body bgcolor="#ffffff" dir="ltr">

<h3>自定义小部件</h3>

<p>您可能希望通过实现自己的自定义窗口小部件来扩展SWT。SWT本身提供了一个包<strong><a href="../reference/api/org/eclipse/swt/custom/package-summary.html">org.eclipse.swt.custom</a></strong> ，它包含自定义控件，这些控件不在SWT控件的核心集中，但是需要实现平台工作台。</p>

<table border="1" width="600">
<colgroup>
    <col width="34%">
    <col width="66%">
</colgroup>
<tr>
<th><div class="CellHeading">控制</div></th>
<th><div class="CellHeading">目的</div></th>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/CBanner.html">CBanner</a></strong></td>
<td>在工作台中使用CBanner来布局工具栏区域和透视切换工具栏。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/CCombo.html">CCombo</a></strong></td>
<td>与Combo类似，但可垂直调整大小，使其适合表格单元格。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/CLabel.html">CLabel</a></strong></td>
<td>与Label类似，但支持用省略号缩短文本。还支持背景颜色的渐变效果，如活动工作台视图中所示。不支持包装。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/CTabFolder.html">的CTabFolder</a></strong></td>
<td>与TabFolder类似，但支持标签（顶部或底部）和边框的视觉外观的其他配置。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/CTabItem.html">CTabItem</a></strong></td>
<td>可选择的用户界面对象，对应于CTabFolder中页面的选项卡。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/SashForm.html">SashForm</a></strong></td>
<td>复合控件，以行或列的形式布置其子项，并使用Sash将它们分开，以便用户可以调整它们的大小。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/ScrolledComposite.html">ScrolledComposite</a></strong></td>
<td>复合控件，用于滚动其内容并可选择拉伸其内容以填充可用空间。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/StyledText.html">StyledText</a></strong></td>
<td>允许用户键入文本的可编辑控件。控件内的文本范围可以具有不同的颜色和字体样式。</td>
</tr>

<tr>
<td><strong><a href="../reference/api/org/eclipse/swt/custom/ViewForm.html">ViewForm</a></strong></td>
<td>在工作台中使用ViewForm来定位和调整视图的标签/工具栏/菜单本地栏。</td>
</tr>
</table>



<h4>实现自定义小部件</h4>

<p>一旦确定需要自定义窗口小部件并确定必须支持哪些平台，就可以考虑为窗口小部件提供多种实现技术。可以根据底层OS平台中可用的内容混合和匹配这些技术。</p>


<h4>本机实现</h4>

<p>如果您的应用程序需要SWT未提供的本机窗口小部件，则需要本机实现它。这可以是平台窗口小部件，第三方窗口小部件或平台共享库中的任何其他窗口小部件。可以在<a href="http://www.eclipse.org/articles/Article-Writing Your Own Widget/Writing Your Own Widget.htm">使用SWT创建自己的小部件中</a>找到本机自定义小部件实现的完整示例。</p>


<h4>结合现有的小部件</h4>

<p>可以组合窗口小部件以形成更复杂的窗口小部件。例如，可以使用文本输入窗口小部件以及按钮和下拉列表来实现组合。要实现组合窗口小部件，您需要创建<a href="../reference/api/org/eclipse/swt/widgets/Composite.html"><strong>Composite</strong></a>的子类并在内部管理子窗口。</p>

<p>一个简单的例子可以在<a href="../reference/api/org/eclipse/swt/custom/CCombo.html"><strong>CCombo中</strong></a>找到。</p>

<h4>自定义绘制实现</h4>

<p>在某些情况下，您没有任何本机代码或现有小部件可帮助您实现新小部件。这意味着您必须在Paint事件的处理程序中自己绘制窗口小部件。虽然这种技术可能变得非常复杂，但它具有产生完全可移植实现的优点。</p>

<p>自定义绘制的控件通过子类化<a href="../reference/api/org/eclipse/swt/widgets/Canvas.html"><strong>Canvas</strong></a>或<a href="../reference/api/org/eclipse/swt/widgets/Composite.html"><strong>Composite</strong></a>来实现。如果您的窗口小部件不包含任何子控件，则为子类<a href="../reference/api/org/eclipse/swt/widgets/Canvas.html"><strong>Canvas</strong></a> 。</p>

<p>自定义绘制窗口小部件的内部实现通常涉及以下主要任务：</p>

<ul>
  <li>创建构造函数中所需的任何图形对象，并将它们存储在实例变量中。在画布或复合上为<strong>dispose</strong>事件注册侦听器，以便在销毁窗口小部件时释放这些对象。</li>
  <li>将<strong>paintListener</strong>添加到画布或合成中，并根据您的设计绘制窗口小部件。对于复杂的小部件，通过计算和重新绘制绝对必要的内容，需要进行大量工作来优化此过程。</li>
  <li>确保任何影响窗口小部件外观的API调用都会触发窗口小部件的重绘。通常，当您知道必须重新绘制时，应该使用<strong>重绘</strong>来破坏窗口小部件，而不是直接调用内部绘制代码。这使平台有机会使用任何其他待处理的颜料折叠您想要生成的颜料，并通过将所有绘画汇集到一个地方来帮助简化您的代码。</li>
  <li>如果您的窗口小部件在其API中定义事件，请确定哪些低级<a href="../reference/api/org/eclipse/swt/widgets/Canvas.html"><strong>Canvas</strong></a>或<a href="../reference/api/org/eclipse/swt/widgets/Composite.html"><strong>Composite</strong></a>事件将触发窗口小部件的事件。例如，如果您有一个单击事件，则需要在画布上注册鼠标事件并执行计算（例如命中测试）以确定画布中的鼠标事件是否应触发窗口小部件事件。</li>
</ul>

<p><a href="../reference/api/org/eclipse/swt/custom/package-summary.html"><strong>org.eclipse.swt.custom中</strong></a>实现的许多小部件都使用这种方法。一个简单的例子可以在<a href="../reference/api/org/eclipse/swt/custom/CLabel.html"><strong>CLabel中</strong></a>找到。</p>

<p>有关自定义窗口小部件的更多信息，请参阅<a href="http://www.eclipse.org/articles/Article-Writing Your Own Widget/Writing Your Own Widget.htm">使用SWT创建自己的窗口小部件。</a></p>

</body>
</html>