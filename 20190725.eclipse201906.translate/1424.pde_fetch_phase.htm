<html lang="zh-Hans" >
<head>
  <meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2010. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <link rel="STYLESHEET" href="../guide/book.css" type="text/css">
  <title>从存储库中获取</title>
</head>
<body >
<h1>从存储库中获取</h1>
<p>PDE Build提供的基础结构提供了从存储库中获取源代码和预构建插件的步骤，作为构建过程的一部分（请参阅<a href="pde_feature_generating_antcommandline.htm#eclipseFetch">eclipse.fetch</a>任务和<a href="../reference/pde_builder_config.htm#fetchControl">控制获取</a>的<a href="../reference/pde_builder_config.htm#fetchControl">属性</a> ）。有两种可能：让PDE构建自动获取源，或手动获取源代码。</p>

<h3>自动化的第一步，即地图文件</h3>
<p>给定需要构建的功能或插件的标识符，构建基础结构能够从存储库中获取所有包含的功能和插件。</p>
<p>为了知道从哪里获取东西，PDE使用地图文件。映射文件是一个java属性文件，它将功能部件和插件ID映射到存储库中的位置和标记。地图文件的格式是开放的，但<b>关键</b>部分由PDE Build修复：</p>
<div style="text-align:center">
<pre>&lt;elementType&gt;@&lt;elementID&gt;[,&lt;elementVersion&gt;] = &lt;repo specific content&gt;</pre>
</div>
<p>其中<tt>elementType</tt>是<tt>bundle</tt> ， <tt>feature</tt> ， <tt>plugin</tt>或<tt>fragment之一</tt> ， <tt>elementId</tt>和<tt>elementVersion</tt>给出了元素的细节。</p>

<h4>CVS的映射文件条目</h4>从CVS获取内容的映射文件条目的格式如下：<div style="text-align:center">
	<pre>&lt;key&gt; = CVS, [,args]</pre>
</div>其中<tt>args</tt>是以逗号分隔的键/值对列表，如下所述：<ul>
	<li><tt>标签</tt> ，要检查的CVS标签;</li>
	<li><tt>cvsRoot</tt> ，一个CVS连接字符串;</li>
	<li><tt>path</tt> ，可选的CVS模块以及获取包含该元素的文件夹的路径。默认情况下，元素名称用作模块名称;</li>
	<li><tt>prebuilt</tt> ，一个可选的布尔值，指示下载的元素是否已预先构建。默认情况下这是假的;</li>
	<li><tt>cvsPassFile</tt> ，cvs传递文件的选项路径;</li>
	<li><tt>密码</tt> ，用于连接CVS的可选密码;</li>
</ul>例：<div style="text-align:center">
<pre>plugin@com.ibm.icu,3.6.1=CVS,tag=v200704191630,cvsRoot=:pserver:anonymous@dev.eclipse.org:/cvsroot/tools,path=org.eclipse.orbit/com.ibm.icu/bin,prebuilt=true</pre>
</div>
<br>
<table style="border:solid 1px">
<tr><td><b>旧式地图条目</b></td></tr>
<tr><td>在Eclipse 3.2及更早版本中，CVS的映射文件格式为：<div style="text-align:center">
<pre>&lt;elementType&gt;@&lt;elementID&gt; = CVS, &lt;TAG&gt;, &lt;CVSROOT&gt;[,&lt;PASSWORD&gt;[,&lt;PATH&gt;[,&lt;CVSPASSFILE&gt;]]]</pre>
</div>如果未指定任何可选参数，则仍需要逗号分隔任何后续参数。应该考虑使用此格式，并且首选键/值格式。
</td>
</tr>
</table>
<h4>Ant GET的映射文件条目</h4>
<p>从<a href="http://ant.apache.org/manual/Tasks/get.html">Ant GET</a>支持的任何URL获取内容的映射文件条目的格式如下：</p>
<div style="text-align:center">
<pre>&lt;key&gt; = GET, &lt;url&gt; [,args]</pre>
</div>其中<tt>url</tt>是从中检索数据的url， <tt>args</tt>是一个可选的以逗号分隔的键/值对列表，如下所述：<ul>
	<li><tt>unpack</tt> ，设置为true表示下载的元素应该解压缩;</li> 
	<li><tt>verbose</tt> ，设置为true以在下载时显示详细的进度信息。默认值为false;</li>
	<li><tt>ignoreerrors</tt> ，设置为true以在传输期间记录错误。默认值为false;</li>
	<li><tt>usetimestamp</tt> ，设置为true时，根据本地副本的时间戳（仅限http URL）有条件地下载文件。默认值为false;</li>
	<li><tt>username</tt> ，“BASIC”http认证的用户名;</li>
	<li><tt>密码</tt> ，执行下载的密码。</li>
</ul>例：<div style="text-align:center">
   <pre>plugin@com.ibm.icu,3.4.5=GET,http://download.eclipse.org/tools/orbit/downloads/drops/S200705301823/bundles/com.ibm.icu_3.4.5.jar, unpack=true</pre>
</div>

<h4><a name="p2_fetch">p2 fetch的映射文件条目</a></h4>
<p>PDE / Build中添加了一个新扩展，使用户可以从p2存储库中获取工件。您现在可以在地图文件中添加条目以进行构建输入，PDE / Build将检索工件并将其包含在构建中。映射文件条目需要包括可安装单元（IU）的ID和版本，以及可以找到IU的存储库的URI。假设元数据和工件存储库位于同一位置。
</p>
<p>通过p2获取内容的映射文件条目的格式如下：</p>
<div style="text-align:center">
<pre>&lt;elementType&gt;@&lt;elementID&gt; = p2IU, id=&lt;id&gt;, version=&lt;version&gt;, repository=&lt;repository&gt;</pre>
</div>
<ul>
<li><tt>id</tt> ，可安装单元的标识符;</li>
<li><tt>version</tt> ，Installable的版本（可选）。如果未指定，将获取可用的最高版本。</li>
<li><tt>repository</tt> ，将找到IU的存储<tt>库</tt>的位置（URI）。</li>
</ul>

<b>使用p2获取功能</b>
<p>在Helios版本中，可以通过指定表示要素jar的可安装单元来使用p2获取要素。有关<a href="pde_p2_featuremetadata.htm">要素</a>的p2元数据结构的详细信息，请参阅<a href="pde_p2_featuremetadata.htm">要素元数据</a>页面。</p>例子：<div style="text-align:center">
<pre>
plugin@my.bundle.id,1.0.0=p2IU,id=my.bundle.id,version=1.0.0,repository=http://example.eclipse.org/repo
feature@my.feature.id = p2IU,id=my.feature.id<b>.feature.jar</b>, version=1.0.0,repository=http://example.eclipse.org/repo
</pre> 
</div>




<h4>其他存储库的映射文件条目</h4>
<p>PDE Build提供了一个扩展点，可以插入不同存储库的fetch脚本生成器。当您的eclipse安装包含为不同类型的存储库提供脚本生成器扩展的包时，您可以通过在映射文件条目中指定它并遵守扩展提供程序指定的格式来使用该存储库。</p>

<h3>设置CVS源提取</h3>要设置从CVS获取源，您应该执行以下操作：<br>
<ul>
  <li>确保系统搜索路径上有cvs.exe。（从<a href="http://www.nongnu.org/cvs/">这里</a>下载CVS）。<br>
  </li>
  <li>在build目录中创建一个名为maps的文件夹。</li>
  <li>在maps文件夹中创建扩展名为.map的文件。</li>
  <li>使用需要从存储库中提取的所有元素填写此映射文件。</li>
  <li>从配置文件夹编辑build.properties文件并注释掉<tt>skipFetch = true行</tt> 。如果设置了该属性，则PDE构建将跳过整个获取阶段。如果要忽略映射文件中指定的标记，可以将属性<tt>fetchTag</tt>设置为特定值。当从HEAD而不是标记版本进行夜间构建时，这非常有用。</li>
</ul>
<h4>从CVS获取地图文件</h4>地图文件通常存储在存储库中。PDE Build提供默认基础结构以从CVS存储库获取这些映射文件。要启用此功能，请从配置目录中更改配置的build.properties中的以下属性：<ul>
  <li><span style="font-weight:bold">skipMaps</span> ：注释掉这个属性。如果设置了此属性，则PDE构建将不会获取映射文件。<br>
  </li>
  <li><span style="font-weight:bold">mapsRepo</span> =：pserver：anonymous@example.com/path/to/repo。从中获取地图文件的CVS存储库。<br>
  </li>
  <li><span style="font-weight:bold">mapsRoot</span> = / path / to / maps。CVS存储库中包含映射文件的目录的路径。<br>
  </li>
  <li><span style="font-weight:bold">mapsCheckoutTag</span> = HEAD。用于签出地图文件的CVS标记。</li>
</ul>从CVS中获取地图文件发生在构建的预构建阶段。将在构建的获取阶段生成并运行用于获取正在构建的功能中包含的所有功能和插件的脚本。

<h3>从其他存储库自动获取</h3>
<p>如果要从存储库中自动获取映射文件，则需要将customTarget.xml文件从org.eclipse.pde.build/templates/headless-build复制到配置目录中。目标getMapFiles用于获取映射文件，应将其修改为从存储库中获取。</p>
<h3>手动获取源代码</h3>您可以编写自定义提取目标来检索可以从customTargets.xml文件中的preSetup或postSetup目标调用的插件和功能。功能和插件应分别提取到<tt>$ {buildDirectory} / features</tt>和<tt>$ {buildDirectory} / plugins</tt> 。
<br>
<br>
</body>
</html>