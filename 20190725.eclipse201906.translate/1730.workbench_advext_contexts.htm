<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>上下文</title>

<link rel="stylesheet" type="text/css" href="../book.css"></link>
</head>
<body bgcolor="#ffffff" dir="ltr">

<h3>上下文</h3>
<p>可以使用<b>上下文</b>来影响在任何给定时刻用户可用的命令。上下文比活动更具活力。虽然活动表示大多数时间用户可用的广泛功能集，但上下文描述了用户在特定时间点的焦点。例如，在编辑文本时，用户可用的命令可能与在编辑包浏览器中编辑Java文本或浏览包时可用的命令不同。
</p>
<h4>定义上下文</h4>
<p>上下文在<b><a href="../reference/extension-points/org_eclipse_ui_contexts.html">org.eclipse.ui.contexts</a></b>扩展点中声明。考虑以下为编辑文本定义的上下文：</p>
<pre>&lt;extension point =“org.eclipse.ui.contexts”&gt; &lt;context name =“％context.editingText.name”description =“％context.editingText.description”id =“org.eclipse.ui.textEditorScope”parentId =“ org.eclipse.ui.contexts.window“&gt; &lt;/ context&gt;</pre>为上下文分配一个名称和描述，用于向用户显示有关上下文的信息。在将UI贡献（例如命令）绑定到特定上下文时，将使用上下文的id。
<h4>上下文层次结构</h4>
<p>上下文本质上是分层的。当上下文处于活动状态时，上下文及其父上下文中可用的命令也可用。这对于定义从非常一般情况下转移到更具体的上下文的上下文级别非常有用。在上面的上下文定义中，请注意，为上下文分配了父级的id：</p>
<pre>&lt;context name =“％context.editingText.name”description =“％context.editingText.description”id =“org.eclipse.ui.textEditorScope” <b>parentId =“org.eclipse.ui.contexts.window”</b> &gt; &lt;/ context &gt;</pre>父上下文定义了在窗口中工作的更一般的上下文。它的父级定义了在窗口或对话框中工作的更一般的上下文。
<pre>&lt;context name =“％context.window.name”description =“％context.window.description”id =“org.eclipse.ui.contexts.window” <b>parentId =“org.eclipse.ui.contexts.dialogAndWindow”</b> &gt; &lt; / context&gt; &lt;context name =“％context.dialogAndWindow.name”description =“％context.dialogAndWindow.description”id =“org.eclipse.ui.contexts.dialogAndWindow”&gt; &lt;/ context&gt;</pre>
<h4>将贡献与上下文相关联</h4>
<p>到目前为止，我们所做的只是定义一个上下文层次结构。当在另一个UI贡献的描述中引用该上下文时，该上下文变得有用。上下文的最常见用法是键绑定。当上下文与键绑定相关联时，键绑定仅在用户处于该上下文中时才处于活动状态。例如，以下标记指定根对话框和窗口上下文作为键绑定的上下文：</p>
<pre>&lt;extension point =“org.eclipse.ui.bindings”&gt; &lt;key sequence =“M1 + X” <b>contextId =“org.eclipse.ui.contexts.dialogAndWindow”</b> commandId =“org.eclipse.ui.edit.cut”schemeId =“org.eclipse.ui.defaultAcceleratorConfiguration”/&gt; &lt;/ extension&gt;</pre>
<h4>使用Context API</h4>
<p>工作台上下文支持包括一个API，用于处理已定义的上下文并定义启用特定上下文的条件。大多数插件无需关心此API，但在定义定义新上下文的专用视图或编辑器时非常有用。
</p>
<p>在工作台中使用上下文的起点是<a href="../reference/api/org/eclipse/ui/contexts/IContextService.html"><b>IContextService</b></a> 。插件可以从工作台获取全局上下文支持实例。
</p>
<pre>IContextService contextService =（IContextService）PlatformUI.getWorkbench（）。getService（IContextService.class）;</pre>
<p>可以使用<a href="../reference/api/org/eclipse/ui/services/IServiceLocator.html"><b>IServiceLocator</b></a>检索<a href="../reference/api/org/eclipse/ui/contexts/IContextService.html"><b>IContextService</b></a> ， <a href="../reference/api/org/eclipse/ui/handlers/IHandlerService.html"><b>IHandlerService</b></a>和<a href="../reference/api/org/eclipse/ui/keys/IBindingService.html"><b>IBindingService</b></a>等服务。
<a href="../reference/api/org/eclipse/ui/IWorkbench.html"><b>IWorkbench</b></a> ， <a href="../reference/api/org/eclipse/ui/IWorkbenchWindow.html"><b>IWorkbenchWindow</b></a>和<a href="../reference/api/org/eclipse/ui/IWorkbenchSite.html"><b>IWorkbenchSite</b></a>都是<a href="../reference/api/org/eclipse/ui/services/IServiceLocator.html"><b>IServiceLocator</b></a> 。
</p>
<p>
<b>IContextService</b>定义用于获取所有已定义或启用的上下文ID以及获取特定id的关联<a href="../reference/api/org/eclipse/core/commands/contexts/Context.html"><b>Context</b></a>的协议。这些对象可用于遍历API中上下文的定义，例如获取父上下文的id，name或id。可以在上下文管理器或上下文本身上注册侦听器，以检测特定上下文的定义或上下文管理器本身的更改。有关更多信息，请参阅包<b><a href="../reference/api/org/eclipse/core/commands/contexts/package-summary.html">org.eclipse.core.commands.contexts</a></b> 。
</p>

<p>可以通过编程方式启用<b>上下文</b> ：</p>
<pre>IContextActivation activation = contextService.activateContext（“org.eclipse.ui.textEditorScope”）;</pre>
<p><a href="../reference/api/org/eclipse/ui/contexts/IContextActivation.html"><b>IContextActivation</b></a>是一个可用于停用活动上下文的标记。您应确保仅激活已定义的<b>上下文</b> 。
</p>

<p>如果要激活零件中的更具体的<b>上下文</b> （视图或编辑器），则可以使用零件站点服务定位器来激活<b>上下文</b> 。当您的部件被激活或停用时，该部件的<b>IContextService</b>将负责激活和停用<b>上下文</b> 。它还将在部件处理时处理<b>Context</b> 。
</p>

</body>
</html>