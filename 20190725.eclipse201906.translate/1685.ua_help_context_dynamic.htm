<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"></script>
<title>动态上下文帮助</title>
</head>
<body >

<h2>动态上下文帮助</h2>

<p>除了静态关联小部件和上下文ID之外，还可以动态提供此信息，以获得更加动态的上下文相关帮助功能。帮助系统使用上下文ID来定位匹配的<a href="../reference/api/org/eclipse/help/IContext.html">org.eclipse.help。IContext</a>对象。新的“帮助”视图跟踪工作台部件（视图和编辑器）的激活，并检查它们是否适应<a href="../reference/api/org/eclipse/help/IContextProvider.html">org.eclipse.help。IContextProvider</a>接口。如果是这样，视图将使用上下文提供程序来定位<code>IContext</code>对象并从中获取所需的信息。可以动态缓存或创建此对象。</p>
<p>想要动态创建上下文对象的工作台部件应该作为键适应<code>IContextProvider.class</code>对象：</p>
<blockquote>
	<pre>public Object getAdapter(Class key) {
	if (key.equals(IContextProvider.class)) {
		return new MyContextProvider();
	}
	return super.getAdapter(key);
}</pre>
</blockquote>
<p>上下文提供程序接口需要实现三种方法：</p>
<blockquote>
	<pre>public class MyContextProvider implements IContextProvider {
	int getContextChangeMask() {
		return NONE;
	}
	IContext getContext(Object target) {
		return myContext;
	}
	String getSearchExpression(Object target) {
		return null;
	}
}</pre>
</blockquote>
<p>如果上下文更改掩码返回<code>NONE</code> ，则在激活工作台部件时需要提供上下文对象。如果返回<code>SELECTION</code> ，则需要提供对零件中当前选择敏感的上下文对象。每次部件选择提供程序触发选择更改事件时，将要求上下文提供程序提供上下文对象。</p>
<p>可选地，可以提供动态帮助的搜索表达式。否则，在大多数情况下，将使用零件名称和透视名称的组合，并获得良好的结果。
</p>

<p>
<b>注意：</b>除了使用上下文提供程序（或者替代）之外，您还可以使用XML注释来<a href="ua_dynamic_filters.htm">过滤</a>上下文帮助中的主题。
</p>

</body>
</html>