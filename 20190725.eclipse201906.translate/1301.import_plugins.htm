<html lang="zh-Hans" dir="ltr">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2010. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></meta>
<script type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" language="JavaScript"></script>
<title>插件导入</title>
<link href="../../book.css" rel="stylesheet" type="text/css"></link>
</head>

<body dir="ltr">
<h1>插件导入</h1>
<p>PDE提供了一个<strong>插件导入</strong>向导，用于将插件和片段从文件系统导入工作区。该向导位于<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开插件导入向导"></a>从顶级菜单中选择<a class="command-link" href="javascript:void(0);"><strong>文件&gt;导入...&gt;插件开发&gt;插件</strong></a> 。</p>
<p><img src="../../images/import_wizards/plugin_import.png" alt="插件导入"></p>

<h2>导入位置</h2>
<p>插件可以从三个位置之一导入。</p>
<ol>
  <li><strong>活动目标平台（在“首选项”中指定）</strong> ：默认情况下，从中导入插件的位置是指定的活动目标平台<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开目标平台首选项页面"> <strong>窗口&gt;首选项...&gt;插件开发&gt;目标平台</strong></a>首选项页面。</li>

<li><strong>目标定义</strong> ：您可以选择此选项以从其他目标定义导入插件。使用下拉框选择所选的目标定义。“ <strong>目标定义...”</strong>按钮是一个快捷方式，可打开“ <strong>目标平台”</strong>首选项页面以进行检查或修改。</li>
<li><strong>目录</strong> ：如果您选择从文件系统上的任意位置导入插件，并且您不希望在首选项中更改目标平台的位置，请选择此选项。然后，使用“ <strong>浏览...”</strong>按钮导航并输入所选目录。</li>
</ol>

<h2>要导入的插件和片段</h2>
<p><strong>从指定位置</strong>选项中的<strong>所有插件和片段中</strong>选择选项将转到第二个向导页面，该页面允许您浏览所有插件并选择要导入的子集。</p>
<p><img src="../../images/import_wizards/import_from_all.PNG" alt="从全部导入"></p>

<p>当您导入不属于目标平台的插件的所有先决条件时<strong>，现有工作区插件</strong>选项<strong>所需</strong>的<strong>导入插件和片段</strong>非常有用。此选项将您带到更简单的第二个向导页面;但是，对导入的内容提供较少的总体控制。</p>
<p><img src="../../images/import_wizards/plugin_import_for_existing.PNG" alt="导入现有"></p>

<h2>导入格式</h2>
<p>导入插件时，会在工作区中为每个插件创建一个项目。该项目与要导入的插件的ID同名。</p>
<p>至于每个项目的内容，它根据导入格式而有所不同：</p>
<ol>
  <li><strong>二进制项目</strong> ：插件内容被复制到项目中。二进制代码在JAR中保持不变;同时，清单文件和其他资源被提取到项目根目录。二进制项目的优点是它们允许您浏览代码而无需编译源代码的开销。</li>
  <li><strong>具有链接内容的二进制项目</strong> ：插件内容不会复制到项目中。而是在项目中创建链接以映射到磁盘上JAR，文件和文件夹的实际物理位置。与常规二进制导入相比，此类导入的优点是导入速度更快;因为，该操作仅涉及创建链接。这种方法的缺点是链接的二进制项目可能变得不同步，如果在文件系统中更改了这些链接文件的绝对路径，则必须重新导入。</li>
  <li><strong>包含源文件夹的项目</strong> ：导入的插件的源代码将被解压缩并放置在源文件夹中。此类导入的优点是您可以修改导入的源代码。这种方法的缺点是代码被编译并导致开销，其大小与导入的插件的数量和大小成比例。</li>
  <li><strong>来自存储库的项目</strong> ：插件的清单文件可以指定源存储库位置（例如CVS服务器）。包含此信息的插件可以直接从存储库导入为源。这提供了一种快速获取可编辑源的方法，并为您正在使用的插件创建补丁。</li>
</ol>

</body>
</html>