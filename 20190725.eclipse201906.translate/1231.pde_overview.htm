<html lang="zh-Hans" dir="ltr">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>
<link rel="STYLESHEET" href="../book.css" type="text/css"></link>
<title>使用插件开发环境</title>
<script type="text/javaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" language="JavaScript"></script>
</head>
<body dir="ltr">
<h1>插件开发环境概述</h1>

<p>插件开发环境（PDE）提供了用于创建，开发，测试，调试，构建和部署Eclipse插件，片段，功能，更新站点和RCP产品的工具。</p>

<p>PDE还提供全面的OSGi工具，使其成为组件编程的理想环境，而不仅仅是Eclipse插件开发。</p>

<p>PDE分为三个主要组成部分：</p>
<ul>
<li><a href="#ui">UI</a> - 一组丰富的模型，工具和编辑器，用于开发插件和OSGi包</li>
<li><a href="#api">API工具</a> - 帮助API文档和维护的工具</li>
<li><a href="#build">Build</a> - 基于Ant的工具和脚本，用于自动化构建过程</li>
</ul>

<p>了解“新功能<a href="../../whatsNew/pde_whatsnew.html">”</a>部分中的最新功能。</p>    		

<a name="ui"></a>
<h2>PDE UI</h2>

<p>PDE UI提供编辑器，向导，启动器，视图和其他工具来创建功能齐全的环境，以开发和部署Eclipse插件，片段，功能，更新站点，RCP产品和OSGi包。</p>

<p>一些PDE工具包括：</p>
<ul>
<li><b>基于表单的清单编辑器</b> ：多页编辑器，集中管理插件或功能的所有清单文件。</li>
<li><b>RCP工具</b> ：向导和基于表单的编辑器，允许您定义，标记，测试和导出产品到多个平台。</li>
<li><b>新项目创建向导</b> ：创建新的插件，片段，功能，功能补丁和更新站点。</li>
<li><b>导入向导</b> ：从文件系统导入插件和功能。</li>
<li><b>导出向导</b> ：只需单击即可构建，打包和导出插件，片段和产品的向导。</li>
<li><b>启动器</b> ：测试和调试Eclipse应用程序和OSGi包。</li>
<li><b>视图</b> ：PDE提供的视图可帮助插件开发人员检查其开发环境的不同方面。</li>
<li><b>其他工具</b> ：外部化和清理清单文件的向导。</li>
<li><b>转换工具</b> ：将普通Java项目或普通JAR转换为插件项目的向导。</li>
<li><b>与JDT集成</b> ：插件清单文件参与Java搜索和重构。</li>
</ul>

<p>要开始使用，请尝试以下备忘单：</p>
<ul>
<li><a class="command-link" href="javascript:void(0);">
    		<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开插件备忘单"> <strong>创建Eclipse插件</strong></a></li>
<li><a class="command-link" href="javascript:void(0);">
    		<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开RCP备忘单"> <strong>创建富客户端应用程序</strong></a></li>
</ul>

<a name="api"></a>
<h2>API工具</h2>

<p>API Tools有助于文档和维护插件和OSGi包提供的API。</p>

<p>一些功能包括：</p>
<ul>
<li><b>兼容性分析</b> ：确定与先前版本的插件相关的二进制兼容性问题。</li>
<li><b>API限制标记</b> ：提供Javadoc标记以明确定义与类型和成员关联的限制。</li>
<li><b>版本号验证</b> ：识别与先前版本的插件相关的无效插件版本号。</li>
<li><b>Javadoc <code>@since</code>标记验证</b> ：识别类型和成员上缺少的和无效的<code>@since</code>标记。</li>
<li><b>API泄漏分析</b> ：识别泄漏非API类型的API类型和方法。</li>
<li><b>快速修复</b> ：提供快速修复以适当调整插件版本和@since标签。<br>
</li>
</ul>

<p>要开始使用，请查看任务：</p>
<ul>
<li><a href="../../tasks/api_tooling_setup.htm">设置API工具</a></li>
<li><a href="../../tasks/api_tooling_baseline.htm">设置基线</a></li>
<li><a href="../../tasks/api_tooling_options.htm">改变选择</a></li>
<li><a href="../../tasks/api_tooling_create_filters.htm">创建过滤器</a></li>
<li><a href="../../tasks/api_tooling_remove_filters.htm">删除过滤器</a></li>
</ul>

<a name="build"></a>
<h2>PDE构建</h2>

<p>PDE Build有助于插件构建过程的自动化。PDE Build根据例如plugin.xml和build.properties文件提供的开发时间信息生成Ant脚本。生成的Ant脚本可以从CVS存储库获取相关项目，构建jar，Javadoc，源拉链，将所有内容放在一起以准备发布的格式并将其发送到远程位置（例如，本地网络或下载服务器） ）。</p>
		  	
<p>要开始使用，请参阅以下内容：</p>
<ul>
<li><a href="../../tasks/pde_product_build.htm">从产品配置自动构建RCP应用程序</a></li>
<li><a href="../../tasks/pde_feature_build.htm">自动构建功能</a></li>
<li><a href="../../tasks/pde_plugins_build.htm">自动构建插件</a></li>
<li><a href="../../tasks/pde_feature_generating_ant.htm">从PDE生成Ant脚本</a></li>
<li><a href="../../tasks/pde_feature_generating_antcommandline.htm">从脚本生成Ant脚本</a></li>
<li><a href="../../tasks/pde_p2_builds.htm">构建p2存储库和产品。</a></li>
<li><a href="../../reference/pde_builder_config.htm">构建器配置属性</a></li>
<li><a href="../../reference/pde_feature_generating_build.htm">功能和插件构建属性</a></li>
</ul>
</body>
</html>