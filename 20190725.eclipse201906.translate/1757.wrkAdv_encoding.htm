<html lang="zh-Hans" dir="ltr">
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<script src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript" language="JavaScript"></script>
<title>文本文件编码</title>

<link rel="stylesheet" type="text/css" href="../book.css"></link>
</head>
<body bgcolor="#ffffff" dir="ltr">
<h3>文本文件编码</h3>
<p>如果您的插件读取文本文件，它应该遵循工作台中的<b>文本文件编码</b>首选项。</p>


<p><img src="images/textencoding.png" alt="文本文件编码" border="0"></p>


<p>根据平台和区域设置，文本文件的编码方式不同。大多数情况下，使用主机操作系统的语言环境的默认文本文件编码就足够了。但是，用户可能希望使用源自其他源的文本文件。鉴于能够在联网的团队环境中使用该平台，用户可能希望使用与其本机编码方案不同的编码方案的文本文件，以便他们可以轻松地与其他团队交换文件。</p>


<p>因此，工作台定义了自己的编码配置文件，该配置文件由用户在“ <b>首选项”</b>对话框中指定。用户可以从中选择可用的编码选项<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>常规&gt;工作区</b></a>首选项页面或键入自己的编码。解释文本文件（如编辑器和构建器）的插件应参考工作台编码首选项，而不是假设已安装的操作系统编码正在使用中。</p>


<p>您可以使用<b><a href="../reference/api/org/eclipse/core/resources/ResourcesPlugin.html">ResourcesPlugin</a> .getEncoding（）获取编码首选项<b>。
</b>此编码应传递给<b>java.io</b>读者，而不是使用默认的系统编码。如果需要跟踪对此首选项的更改，可以在<b><a href="../reference/api/org/eclipse/core/resources/ResourcesPlugin.html">ResourcesPlugin</a></b>首选项上挂钩监听器并对<b><a href="../reference/api/org/eclipse/core/resources/ResourcesPlugin.html">ResourcesPlugin</a></b>中的更改做出反应<b>。PREF_ENCODING。</b>以下示例来自默认文本编辑器：</p>


<pre>public void initialize（StatusTextEditor textEditor）{fTextEditor = textEditor; fPropertyChangeListener =新首选项。IPropertyChangeListener（）{public void propertyChange（Preferences。PropertyChangeEvent e）{if（ResourcesPlugin。PREF_ENCODING.equals（e.getProperty（）））setEncoding（null，false）; }};首选项p = ResourcesPlugin.getPlugin（）。getPluginPreferences（）; p.addPropertyChangeListener（fPropertyChangeListener）; fEncodingActionGroup = new EncodingActionGroup（fTextEditor）; fEncodingActionGroup.update（）; }</pre>
<p>用户还可以在<b>编辑</b>器的“ <b>编辑”&gt;“编码”</b>菜单中更改特定文件的<b>编码</b> 。如果要在打开的编辑器中操作文本，则应使用<b><a href="../reference/api/org/eclipse/ui/editors/text/IEncodingSupport.html">IEncodingSupport</a> .getEncoding（）</b>来获取特定编辑器的编码。以下示例显示如何从编辑器获取此信息：</p>
<pre>IEncodingSupport encodingSupport =（IEncodingSupport）editor.getAdapter（IEncodingSupport.class）; String encoding = encodingSupport.getEncoding（）;</pre>

</body>
</html>