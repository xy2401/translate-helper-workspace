<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2010. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>查看类型层次结构</title>
<link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"> </script>
</head>
<body >
<h1>查看类型层次结构</h1>
<p>在本节中，您将通过以各种不同方式查看类和成员来了解如何使用“类型层次结构”视图。</p>
<ol>
  <li>在Package Explorer视图中，找到<em>junit.framework / TestCase.java</em> 。从其上下文菜单中选择<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="打开类型层次结构"> <strong>打开“类型层次结构”</strong></a> 。您还可以打开类型层次结构视图：<ul>
      <li>从菜单栏中选择“ <strong>导航”&gt;“打开类型层次结构”</strong> 。</li>
      <li>选择<em>TestCase.java</em>后按<kbd>F4</kbd>键盘。
      </li>
    </ul>
	<p>
    <img src="images/view_package_explorer_open_type_hierarchy.png" alt="上下文菜单">
	</p>
  </li>
  <li>视图工具栏中的按钮控制层次结构的哪个部分。单击“ <strong>显示类型层次结构”</strong>按钮以查看类层次结构，包括基类和子类。TestCase类型图标左侧的小箭头表示在此类型上打开了层次结构。
	<p>
    <img src="images/view_typehierarchy_testcase_small.png" alt="键入层次结构"> 
	</p>
  </li>
  <li>单击“ <strong>显示超类型层次结构”</strong>按钮以查看显示类型的父元素（包括已实现的接口）的层次结构。此视图显示了上升类型层次结构的结果。
	<p>
    <img src="images/view_typehierarchy_testcase_supertype.png" alt="超类型层次结构"> 
	</p>在这个“反向层次结构”视图中，您可以看到TestCase实现了Test接口。</li>
  <li>单击视图工具栏中的“ <strong>显示子类型层次结构”</strong>按钮。
	<p>
    <img src="images/view_typehierarchy_testcase_subtype.png" alt="子类型层次结构"> 
	</p>
  </li>
  <li>单击成员窗格工具栏中的“ <strong>锁定视图”和“在层次结构中显示成员”</strong>按钮，然后在成员窗格中选择runTest（）方法。该视图现在将显示实现runTest（）的所有类型。
	<p>
    <img src="images/view_typehierarchy_testcase_runtest_locked.png" alt="显示方法实现者的子类型层次结构"> 
	</p>
  </li>
  <li>在“类型层次结构”视图中，单击“ <strong>显示超</strong>类型层次<strong>结构”</strong>按钮。然后在成员窗格上，选择<code>countTestCases()</code>以显示声明此方法的位置。
	<p>
    <img src="images/view_typehierarchy_testcase_supertype_locked.png" alt="显示方法实现者的超类型层次结构"> 
	</p>
  </li>
  <li>在“类型层次结构”视图中，选择“ <em>测试”</em>元素，然后从其上下文菜单中选择“ <strong>聚焦于测试”</strong> 。<em>测试</em>显示在“类型层次结构”视图中。</li>
  <li>激活Package Explorer视图并选择包junit.framework。从其上下文菜单中使用“ <strong>打开类型层次结构”</strong> 。将打开一个包含所有类包的层次结构。为了完成树，层次结构还显示来自其他包的一些类。这些类型由带有白色填充的类型图标显示。
	<p>
    <img src="images/view_typehierarchy_testcase_focused.png" alt="包的层次结构"> 
	</p>
  </li>
  <li>使用<strong>Previous Type Hierarchies</strong>返回先前打开的元素。单击按钮旁边的箭头以查看元素列表，或单击按钮以编辑历史列表。
	<p>
    <img src="images/view_typehierarchy_testcase_menu.png" alt="历史菜单"> 
	</p>
  </li>




</ol>
<p><a name="quick_type_hierarchy"></a>如果您在编辑器中工作并且只想快速查找层次结构，则可以使用<strong>快速类型层次结构</strong> ：</p>
<ol>
<li>打开<em>junit.framework。如果您尚未打开Java编辑器中的TestCase.java</em>文件。</li>
<li>在Java编辑器中选择类型名称</li>
<li>按<kbd>Ctrl+T</kbd>或调用“ <strong>导航”&gt;“快速类型层次结构”</strong> ，将显示就地类型层次结构视图。</li>

<li>在显示类型层次结构视图时按<kbd>Ctrl+T</kbd>将在超类型层次结构和子类型层次结构之间切换。</li>
</ol>
<img src="images/quicktype_dialogs.png" alt="显示子类型和超类型层次结构的Quicktype对话框">
<p>要查看虚拟方法调用可以解析的位置：</p>
<ol>
<li>在<em>runBare（）</em>的主体中选择<em>setUp（）</em>的调用</li>
<li>按<kbd>Ctrl+T</kbd>或调用“ <strong>导航”&gt;“快速类型层次结构”</strong> ，将显示就地类型层次结构视图。</li>
<li>您可以看到<em>setUp（）</em>在另外3个类中实现。<em>Object</em>和<em>Assert</em>仅显示带有白色填充图像，仅用于完成层次结构但不实现<em>setUp（）</em></li>
<li>选择一种类型以导航到其<em>setUp（）的实现</em></li>
</ol>
<img src="images/quicktype_dialog_setup.png" alt="Quicktype对话框显示实现setUp（）的类型">





<p class="nav_footer" id="nav_footer">下一节： <a href="qs-11.htm">搜索工作台</a>
</p>

<h3 class="related">相关概念</h3> 
  <a href="../concepts/concept-java-editor.htm">Java视图</a>

<h3 class="related">相关参考</h3> 
  <a href="../reference/views/ref-type-hierarchy.htm">键入层次结构视图</a><br>
  <a href="../reference/preferences/ref-preferences-java.htm">Java Base首选项页面</a> 

</body>
</html>