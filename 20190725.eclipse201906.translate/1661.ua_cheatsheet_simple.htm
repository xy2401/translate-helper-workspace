<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"></script>
<title>简单的备忘单</title>
</head>
<body >

<h2>简单的备忘单</h2>

<p>备忘单引导用户完成一系列复杂任务，以实现总体目标。例如，可以使用备忘单来帮助引导用户完成创建，编译和运行简单Java程序所需的所有步骤。作弊表从发射<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>帮助&gt;作弊表......</b></a>菜单项。备忘单也可以从介绍页面启动。
</p>
<p>使用<b><a href="../reference/extension-points/org_eclipse_ui_cheatsheets_cheatSheetContent.html">org.eclipse.ui.cheatsheets.cheatSheetContent</a></b>扩展点定义备忘单。备忘单内容本身在单独的文件中定义，以便可以更容易地翻译成其他语言。
</p>
<h4>贡献一张备忘单</h4>
<p>撰写备忘单非常简单。让我们看一下由JDT贡献的备忘单，用于构建一个简单的Java应用程序。
</p>
<pre>&lt;extension point="org.eclipse.ui.cheatsheets.cheatSheetContent"&gt;
	&lt;cheatsheet
		name="%cheatsheet.helloworld.name"
		contentFile="$nl$/cheatsheets/HelloWorld.xml"
		id="org.eclipse.jdt.helloworld"&gt;
		&lt;description&gt;%cheatsheet.helloworld.desc&lt;/description&gt;
	&lt;/cheatsheet&gt;
	...
</pre>与其他工作台贡献非常相似，可以为备忘单指定名称，描述和ID。用户访问时显示名称和描述<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="命令链接"> <b>帮助&gt;作弊表......</b></a>名单。如果要将多个备忘单放入逻辑分组，也可以定义备忘单的类别。如果未指定类别，则备忘单将显示在“ <b>其他”</b>类别中。
<p align="center">
<img border="0" src="images/cheatsheets.png" alt="备忘单对话框"></p>
<h4>备忘单项目</h4>
<p>备忘单的实际工作是在内容文件中完成的。内容文件是一个XML文件，其名称和位置在<b>contentFile</b>属性中指定。该文件的路径是相对于插件的目录。（注意在目录名中使用<tt>$ nl $</tt>变量，这意味着该文件将位于特定于目标环境的本地语言的目录中。）
</p>
<p>文件格式本身包括有关备忘单的概述信息，后面是用户将执行的每个步骤（称为<i>项目</i> ）的描述。最简单的是，项目只是用户应该采取的步骤的详细描述。但是，项目还可以指定可以运行以代表用户执行步骤的操作。让我们看一下Java备忘单的内容文件（ <tt>HelloWorld.xml</tt> ）的第一部分。
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8" ?&gt; 
&lt;cheatsheet title="Simple Java Application"&gt;
	&lt;intro 
		href="/org.eclipse.ui.cheatsheets.doc/tasks/tcheatst.htm"&gt;
		&lt;description&gt;
Welcome to the Hello, World Java tutorial.
It will help you build the famous "hello world" application and try it out. You will create a java project, and a java class that will print "hello world" in the console when run.
Let's get started!
		&lt;/description&gt;
&lt;/intro&gt;
	&lt;item
		href="/org.eclipse.platform.doc.user/concepts/concepts-4.htm"
		title="Open the Java Perspective"&gt;
		<b>&lt;action
			pluginId="org.eclipse.ui.cheatsheets"
			class="org.eclipse.ui.internal.cheatsheets.actions.OpenPerspective"
			param1="org.eclipse.jdt.ui.JavaPerspective"/&gt;</b>
		&lt;description&gt;
Select Window-&gt;Open Perspective-&gt;Java in the menu bar at the top of the workbench.
This step changes the perspective to set up the Eclipse workbench for Java development.
You can click the "Click to Perform" button to have the "Java" perspective opened automatically.
		&lt;/description&gt;
&lt;/item&gt;
...
</pre>
<p align="center">
<img border="0" src="images/javacheatsheet.png" alt="简单的java备忘单">
</p>
<p>标题和介绍信息显示在备忘单的顶部。然后，描述项目。此备忘单的第一项描述了如何打开Java透视图。更好的是， <b>action</b>属性指定了一个可用于代表用户运行操作的类。该类必须实现<a href="../reference/api/org/eclipse/jface/action/IAction.html"><b>IAction</b></a> 。这很方便，因为它允许您重用为菜单或工具栏贡献编写的操作类。
</p>
<p>如果操作使用参数或需要知道备忘单及其状态，则操作的类可以选择实现<a href="../reference/api/org/eclipse/ui/cheatsheets/ICheatSheetAction.html"><b>ICheatSheetAction</b></a> 。在这种情况下，操作将传递一组参数和对<a href="../reference/api/org/eclipse/ui/cheatsheets/ICheatSheetManager.html"><b>ICheatSheetManager</b></a>的引用，以便它可以请求有关备忘单的其他信息。可以使用<b>param <i>N</i></b>属性将任何必要的参数传递给action的run方法。
</p>
<p>如果运行操作可能会失败，强烈建议从备忘单调用的操作报告成功/失败结果。（例如，用户可能会从其对话框中取消操作。）有关更多详细信息，请参阅<b><a href="../reference/api/org/eclipse/jface/action/IAction.html">IAction</a> .notifyResult（boolean）</b> 。
</p>
<p>项目不必定义操作。如果您的项目必须由用户手动执行，则无需指定任何操作。下面是Java备忘单的第三步，它只告诉用户如何编写简单的应用程序。如果未指定任何操作，则项目描述必须指示用户在任务完成后按相应的按钮。
</p>
<pre>&lt;item
	href="/org.eclipse.jdt.doc.user/tasks/tasks-54.htm"
	title="Add a System.out.println line in your main method"&gt;
	&lt;description&gt;
Now that you have your HelloWorld class,
In the "public static void main" method, add the following statement:  System.out.println("Hello world!"); and save your changes.  Press the "click when done" button below when finished.
	&lt;/description&gt;
&lt;/item&gt;
</pre>其他属性控制是否可以完全跳过项目，如果用户在步骤期间请求帮助，则应启动哪个文档。有关可以在备忘单中定义的所有属性的说明，请参阅<b><a href="../reference/extension-points/org_eclipse_ui_cheatsheets_cheatSheetContent.html">org.eclipse.ui.cheatsheets.cheatSheetContent</a></b>扩展点文档。
<h4>子项目</h4>
<p>可以定义子项以进一步组织项目的呈现。与项目不同，子项目不必以任何特定顺序访问。子项还可以定义自动为用户执行子任务的动作。子项操作的描述方式与项操作相同。
</p>
<h4>条件表达式和备忘单变量</h4>
<p>条件表达式可用于定义备忘单元素，其内容或行为取决于特定条件为真。使用与每个选项的<b>when</b>属性匹配的任意字符串值在子项的<b>条件</b>元素中描述<b>条件</b> 。条件通常使用<tt>$ { <i>var</i> }</tt>形式引用备忘单变量，其中<i>var</i>指的是cheet表变量的名称。一些简单的例子将有助于演示条件表达式的工作原理。
</p>
<p>
<b>条件子项</b>可用于从可能的子项列表中选择一个子项。只有第一个子属性的<b>when</b>属性与condition属性匹配才包含在备忘单中。例如：</p>
<pre>&lt;item ...&gt;
	&lt;conditional-subitem condition="${v1}"&gt;
		&lt;subitem when="a" label="Step for A." /&gt;
		&lt;subitem when="b" label="Step for B." /&gt;
	&lt;/conditional-subitem&gt;
&lt;/item&gt;
</pre>此项指定两个可能的子项，这些子项依赖于变量<tt>v1</tt>的值。如果变量值为<tt>a</tt> ，则将包括第一个子项。如果变量值为<tt>b</tt> ，则将包括第二个子项。如果变量既不是值，则认为是错误。
<p>
<b>条件动作</b>类似于条件子项。<b>perform-when</b>元素指定在可能的动作列表中执行一个动作的条件。使用经常引用变量的任意字符串以相同的方式描述条件。<b>when</b>属性与条件匹配的动作是将要执行的动作。例如：</p>
<pre>&lt;item ...&gt;
	&lt;perform-when condition="${v1}"&gt;
		&lt;action when="a" class="com.example.actionA" pluginId-"com.example" /&gt;
		&lt;action when="b" class="com.example.actionB" pluginId-"com.example" /&gt;
	&lt;/perform-when&gt;
&lt;/item&gt;
</pre>要执行的操作是基于<tt>v1</tt>变量的值来选择的。如果变量值既不是<tt>a</tt>或<tt>b</tt> ，则认为是错误。
<h4>重复的子项目</h4>
<p>重复的子项描述了一个子项，它可以扩展为0,1或更多类似的子步。子步骤使用特殊变量<tt>$ {this}</tt>进行个性化。此变量将替换为<b>values</b>属性中指定的<b>值</b> 。values属性是一个由逗号分隔的值字符串。可以在values属性中使用扩展为值列表的变量。例如：</p>
<pre>&lt;item ...&gt;
	&lt;repeated-subitem values="${v1}"&gt;
		&lt;subitem label="Step ${this}" /&gt;
	&lt;/repeated-subitem&gt;
&lt;/item&gt;
</pre>如果变量的值是<tt>1，b，3</tt> ，那么在备忘单中将出现三个子项，每个子项具有唯一的标签（“步骤1”，“步骤b”，“步骤3”）。该变量可用于标签或动作参数值。执行操作时，也可以从<a href="../reference/api/org/eclipse/ui/cheatsheets/ICheatSheetManager.html"><b>ICheatSheetManager</b></a>访问它。
<h4>备忘单听众</h4>
<p>在某些情况下，如果备忘单处于活动状态，您可能希望更改UI的其他部分。例如，如果备忘单引导用户完成编辑任务，您可能会有一个显示特殊注释的编辑器。在这种情况下，可以将<b>监听</b>器指定为备忘单的属性。listener属性必须是<a href="../reference/api/org/eclipse/ui/cheatsheets/CheatSheetListener.html"><b>CheatSheetListener</b></a>子类的Java类的完全限定名。当备忘单的生命周期发生变化时，监听器将收到通知以及<a href="../reference/api/org/eclipse/ui/cheatsheets/ICheatSheetEvent.html"><b>ICheatSheetEvent</b></a> ，例如打开，关闭或完成时。
</p>
<h4>为现有备忘单提供属性</h4>
<p><b><a href="../reference/extension-points/org_eclipse_ui_cheatsheets_cheatSheetItemExtension.html">org.eclipse.ui.cheatsheets.cheatSheetItemExtension</a></b>扩展可用于将任意属性提供给预先存在的备忘单。此扩展点的目的是允许插件添加其他按钮，以帮助用户执行给定步骤。这些附加按钮显示在帮助图标旁边。</p>
<p>要使用此机制，您可以在备忘单XML文件中的项定义中定义任意属性。属性名称将与<b><a href="../reference/extension-points/org_eclipse_ui_cheatsheets_cheatSheetItemExtension.html">org.eclipse.ui.cheatsheets.cheatSheetItemExtension的</a></b>扩展中提供的任何属性进行匹配。有关更多详细信息，请参阅扩展点文档。
</p>

<h4>相关链接</h4>
<p>
<a href="../../org.eclipse.platform.doc.user/reference/ref-cheatsheets.htm">使用备忘单</a><br>
<a href="ua_cheatsheet_composite.htm">创建复合备忘单</a><br>
<a href="ua_cheatsheet_guidelines.htm">编写指南</a><br>
<a href="../reference/extension-points/org_eclipse_ui_cheatsheets_cheatSheetContent.html">org.eclipse.ui.cheatsheets.cheatSheetContent扩展点</a><br>
<a href="../reference/extension-points/cheatSheetContentFileSpec.html">备忘单内容文件规范</a><br>
</p>

</body>
</html>