<html lang="zh-Hans" >
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2007. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>创建Java类</title>
<link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1">
<script language="JavaScript" type="text/javascript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"> </script>
</head>

<body >
<h1>创建Java类</h1>
<p>在本节中，您将创建一个新的Java类，并使用代码生成操作添加方法。</p>
<ol>
  <li>在Package Explorer视图中，选择JUnit项目。单击工具栏中的“ <strong>新建Java包”</strong>按钮，或从项目的上下文菜单中选择“ <strong>新建”&gt;“包</strong> ”。</li>
  <li>在“ <strong>名称”</strong>字段中，键入<em>test</em>作为新包的名称。然后单击<strong>Finish</strong> 。</li>
  <li>在Package Explorer视图中，选择新的<em>测试</em>包，然后单击工具栏中的<strong>New Java Class</strong>按钮。
  </li>
  <li>确保<em>JUnit</em>出现在“ <strong>源文件夹”</strong>字段中，并且该<em>测试将</em>显示在“ <strong>包”</strong>字段中。在“ <strong>名称”</strong>字段中，键入<em>MyTestCase</em> 。
    <p> <img src="images/wiz_new_class_dialog.png" alt="Java类向导"> 
    </p>
  </li>
  <li>单击<strong>Superclass</strong>字段旁边的<strong>Browse</strong>按钮。</li>
  <li>在<strong>“</strong>超类选择”对话框的<strong>“选择类型”</strong>字段中，键入“ <em>测试”</em>以缩小可用超类列表。
    <p> <img src="images/superclass_selection_dialog.png" alt="超类选择对话框"> 
    </p>
  </li>
  <li>选择<em>TestCase</em>类，然后单击“ <strong>确定”</strong> 。</li>
  <li><strong>从超类中</strong>选择<strong>Constructors</strong>的复选框。
  </li>
  <li>单击“ <strong>完成”</strong>以创建新类。
    <p> <img src="images/wiz_new_class_dialog_superchecked.png" alt="Java类向导"> 
    </p>
  </li>
  <li>新文件在编辑器中打开。它包含新类，构造函数和注释。您可以选择用于创建和配置生成的注释的选项<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="转到代码模板首选项页面"> <strong>Java&gt;代码样式&gt;代码模板</strong></a>首选项页面。</li>
  <li>在Outline视图中，选择新类<em>MyTestCase</em> 。打开上下文菜单，然后选择<strong>Source&gt; Override / Implement Methods ....</strong>
    <p> <img src="images/editor_mytestcase_outline_override.png" alt="一种类型的上下文菜单"> 
    </p>
  </li>
  <li>在“覆盖方法”对话框中，选中<em>setUp（）</em>和<em>tearDown（）</em> ，然后单击“ <strong>确定”</strong> 。该类中添加了两种方法。
    <p> <img src="images/override_implement_dialog.png" alt="“覆盖方法”对话框"> 
    </p>
  </li>
  <li>将<em>setUp（）</em>的主体更改为<code>container= new Vector();</code> </li>
  <li> <em>容器</em>和<em>Vector</em>带有问题高亮显示行的下划线，因为它们无法解析。标记栏上出现一个灯泡。将鼠标移到带下划线的单词<em>Vector上</em> 。出现悬停，显示错误消息并包含快速修复。将鼠标移动到悬停状态，然后单击“ <em>导入”矢量（java.util）</em> 。这会添加缺少的导入声明。
    <p> <img src="images/editor_mytestcase_import.png" alt="修正提案悬停在Vector上"><br>
    </p>闪烁的光标仍应位于包含错误的行上（如果不是，则将其设置为行尾）。按<kbd>Ctrl+1</kbd> 。这使光标跳转到最近的错误位置并打开快速修复提议。选择“ <em>创建字段'容器”</em>以添加新字段。
    <p> <img src="images/editor_mytestcase_field.png" alt="容器的更正建议"> 
    </p>
  </li>
  <li>在“大纲”视图中，选择<em>MyTestCase</em>类。打开上下文菜单，然后选择<strong>Source&gt; Generate Getters and Setters ....</strong>
    <p> <img src="images/editor_mytestcase_getters.png" alt="在上下文菜单中生成Getter和Setter"> 
    </p>
  </li>
  <li>Generate Getter和Setter对话框建议您创建方法getContainer和setContainer。选择两者并单击“ <strong>确定”</strong> 。添加了字段容器的getter和setter方法。
    <p> <img src="images/generate_getter_setter_dialog.png" alt="生成Getter和Setter对话框"> 
    </p>
  </li>
  <li>保存文件。</li>
  <li>可以在中配置生成代码的格式<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="转到代码样式格式化程序引用页面"> <strong>Java&gt;代码样式&gt; Formatter</strong></a>首选项页面。如果对字段名称使用前缀或后缀（例如fContainer），则可以在中指定<a class="command-link" href="javascript:void(0);"><img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="转到代码样式首选项页面"> <strong>Java&gt;代码样式</strong></a>首选项页面，以便生成的getter和setter将建议不带前缀或后缀的方法名称。
  </li>
</ol>
<p class="nav_footer" id="nav_footer">下一节： <a href="qs-8.htm">重命名Java元素</a>
</p>
<h3 class="related">相关概念</h3> 
  <a href="../concepts/concept-java-views.htm">Java视图</a><br>
  <a href="../concepts/concept-java-editor.htm">Java编辑器</a>

<h3 class="related">相关参考</h3> 
  <a href="../reference/ref-wizard-class.htm">新的Java类向导</a><br>
  <a href="../reference/ref-menu-source.htm">来源行动</a><br>
  <a href="../reference/ref-java-editor-quickfix.htm">快速解决</a><br>
  <a href="../reference/ref-dialog-override-method.htm">覆盖方法对话框</a><br>
  <a href="../reference/ref-dialog-gettersetter.htm">生成Getter和Setter对话框</a><br>
  <a href="../reference/preferences/java/codestyle/ref-preferences-formatter.htm">代码格式化程序首选项页面</a><br>
  <a href="../reference/preferences/java/ref-preferences-code-style.htm">代码样式首选项页面</a><br>
  <a href="../reference/preferences/java/codestyle/ref-preferences-code-templates.htm">代码模板首选项页面</a>

</body>
</html>