<html lang="zh-Hans" >
<head>
  <meta name="copyright" content="Copyright (c) IBM Corporation and others 2009. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
  <title>产品构建与p2</title>
</head>
<body >
<h1>产品构建与p2</h1>
<p>定义新属性：</p>
<div align="center"><tt><b>p2.gathering = true</b></tt></div>
<p>将导致产品构建的<a href="pde_p2_builds.htm#gathering_overview">一些更改</a> 。特别是，构建将生成正确安装的完全支持p2的产品。</p>
<p>以下是相关属性（旧的和新的）的列表：</p>
<table border="5" cellspacing="0" cellpadding="2">
	<tr><td><tt><b>p2.gathering</b></tt></td><td>设置为<tt><b>true</b></tt>以打开基于p2发布者的构建。</td></tr>
	<tr><td><tt>p2.build.repo</tt></td><td>本地构建时间p2存储库的URI，默认为<tt>file：$ {buildDirectory} / buildRepo</tt> 。结果将从此处镜像到最终存档位置。</td></tr>
	<tr><td><tt>generate.p2.metadata</tt></td><td>这是旧<a href="pde_p2_integration.htm">元数据生成器集成的</a>属性。当<tt>p2.gathering = true</tt>时它没有效果。</td></tr>
	<tr><td><tt>p2.metadata.repo<br>p2.artifact.repo</tt></td>
		<td>这些属性是URI。默认情况下，对于产品构建，最终存档是已安装的产品，元数据和工件保留在<tt>$ {p2.build.repo}中</tt> 。如果定义了<tt>p2.metadata.repo</tt>和<tt>p2.artifact.repo</tt> ，则将从构建存储库镜像产品的工件和元数据。</td>
	</tr>
	<tr><td><tt>p2.metadata.repo.name<br>p2.artifact.repo.name</tt></td><td>可选，当使用<tt>p2.metadata.repo</tt>和<tt>p2.artifact.repo</tt>时，这些属性将用于命名最终存储库。</td></tr>
	<tr><td><tt>p2.compress</tt></td><td>设置为<tt>true</tt>以将最终存储库xml压缩到jar中。</td></tr>
	<tr><td><tt>p2.flavor</tt></td><td>产品的味道，用作产品配置元数据的限定符。见<a href="#product_flavors">下文</a> 。</td></tr>
	<tr><td><tt>p2.product.qualifier</tt></td><td>在产品版本中替换“1.0.0。qualifier”时使用的<i>限定符</i> 。如果未设置，则限定符将基于<tt>forceContextQualifier</tt>或时间戳。</td></tr>
	<tr><td><tt>p2.publish.artifacts</tt></td><td>当<tt>p2.gathering = true</tt>时没有效果（旧属性）</td></tr>
	<tr><td><tt>p2.root.name<br>p2.root.version</tt></td><td>当<tt>p2.gathering = true</tt>时没有效果（旧属性）</td></tr>
	<tr><td><tt>p2.context.repos</tt></td><td>定义上下文存储库。请参阅<a href="pde_p2_reusingmetadata.htm">重用元数据</a> 。</td></tr>
	<tr><td><tt>repoBaseLocation</tt></td><td>包含要使用<tt><a href="../../org.eclipse.platform.doc.isv/guide/p2_repositorytasks.htm#p2_repo2runnable">&lt;p2.repo2runnable&gt;</a></tt>进行转换的存储库的文件夹。另请参阅<a href="pde_p2_reusingmetadata.htm">重用元数据</a> 。</td></tr>
	<tr><td><tt>transformedRepoLocation</tt></td><td>包含<tt><a href="../../org.eclipse.platform.doc.isv/guide/p2_repositorytasks.htm#p2_repo2runnable">&lt;p2.repo2runnable&gt;</a></tt>输出的文件夹。另请参阅<a href="pde_p2_reusingmetadata.htm">重用元数据</a> 。</td></tr>	
	<tr><td><tt>p2.category.site</tt></td><td>用于定义类别的site.xml文件的URL。</td></tr>
	<tr><td><tt>p2.category.definition</tt></td><td>用于定义类别的category.xml文件的URL。</td></tr>
	<tr><td><tt>p2.category.prefix</tt></td><td>定义前缀以确保从不使用唯一名称的站点/类别文件生成的类别IU的唯一ID。</td></tr>
	<tr><td><tt>skipMirroring</tt></td><td>从<tt>$ {p2.build.repo}</tt>跳过最终镜像到<tt>$ {p2.metadata.repo}</tt> 。</td></tr>
	<tr><td><tt>skipDirector</tt></td><td>跳过导演的电话。不会生产任何已安装的产品。如果定义了<tt>p2.metadata.repo</tt>和<tt>p2.artifact.repo</tt> ，那些存储库将包含产品元数据和工件，否则<tt>$ {p2.build.repo}</tt>将包含结果。</td></tr>
	<tr><td><tt>p2.director.log</tt></td><td>用于记录导向器调用结果的日志文件的位置。</td></tr>
	<tr><td><tt>p2.director.profile</tt></td><td>用于导演创建的p2配置文件的名称。通常，最好将此产品命名为与您的产品相关的内容。默认为“个人资料”。</td></tr>
	<tr><td><tt>p2.director.extraArgs</tt></td><td>传递给目录的额外参数。默认值为“ <tt>-profileProperties org.eclipse.update.install.features = true</tt> ”。</td></tr>
	<tr><td>镜像属性</td><td>在构建产品或功能时，PDE / Build会将来自<a href="pde_p2_reusingmetadata.htm">上下文存储库的</a>依赖项镜像到构建中。这些属性控制此操作中包含的依赖项。有关详细信息，请参见<a href="../../org.eclipse.platform.doc.isv/guide/p2_repositorytasks.htm#p2_mirror">p2.mirror ant任务</a> 。
	<table border="5" cellspacing="0" cellpadding="1" width="95%" align="center">
		<tr><td><tt>p2.mirror.raw</tt></td><td>默认值：false。设置为true以重用源存储库中的工件描述符。</td></tr>
		<tr><td><tt>p2.mirror.slicing.filter</tt></td><td>默认是没有过滤器。设置其他过滤器属性IU必须满足才能包含。</td></tr>
		<tr><td><tt>p2.mirror.slicing.followOnlyFilteredRequirements</tt></td><td>默认值为false。设置为true以反转过滤器，仅包括不匹配的IU。</td></tr>
		<tr><td><tt>p2.mirror.slicing.followStrict</tt></td><td>默认值为false。设置为true以仅包含其版本已精确指定的依赖项。</td></tr>
		<tr><td><tt>p2.mirror.slicing.includeFeatures</tt></td><td>默认为true。是否包含功能。</td></tr>
		<tr><td><tt>p2.mirror.slicing.includeNonGreedy</tt></td><td>默认值为false。是否包含非贪婪的依赖项。</td></tr>
		<tr><td><tt>p2.mirror.slicing.includeOptional</tt></td><td>默认值为true，是否包含可选依赖项。</td></tr>
		<tr><td><tt>p2.mirror.slicing.latestVersionOnly</tt></td><td>默认值为false，当需求是范围且多个版本可用时，是否仅包括最新版本的依赖项。</td></tr>
		<tr><td><tt>p2.mirror.slicing.platformFilter</tt></td><td>默认为无过滤器，“os，ws，arch”三元组设置为与IU LDAP过滤器匹配的平台。不匹配过滤器的IU将不会被镜像。</td></tr>
	</table>
	</td>
	</tr>
</table>


<h3><a name="product_flavors">产品风味</a></h3>
<p>作为产品构建的一部分，PDE / Build会自动生成默认配置元数据以设置启动级别和config.ini属性。该元数据通常称为配置单元（CU）。特别是，使用IU上的CU片段为正在启动的包设置启动级别。在基于IU生成CU名称时，该味道用作限定符。</p>
<p>例如，使用“ <tt>p2.flavor = tooling</tt> ”， <tt>“ <b>工具</b> <i>win32.win32.x86</i> org.eclipse.core.runtime”</tt>将是在Windows上配置org.eclipse.core.runtime包的CU的名称。根据您的产品ID使用flavor可能是个好主意，以避免与其他元数据冲突，特别是如果您的产品对起始级别有特殊需求。
</p>
<p>另请参阅<a href="pde_p2_configuringproducts.htm">配置产品</a>页面。</p>
<h3>导演电话</h3>PDE / Build包含一个<tt>runDirector</tt>目标，该目标在产品构建期间被调用以执行安装。目前，这是一个新流程中<a href="../../org.eclipse.platform.doc.isv/guide/p2_director.html">导演应用程序</a>的分支。在更高级的降级方案中，可以重复使用此任务来执行其他安装。该任务要求定义构建器的昼夜平分点发射器的位置。示例调用看起来像这样：<pre>
	&lt;property name="equinoxLauncherJar" value="/builder/eclipse/plugins/org.eclipse.equinox.launcher_1.0.200.v20090520.jar"/&gt;
	&lt;ant antfile="${eclipse.pdebuild.scripts}/genericTargets.xml" target="runDirector" inheritAll="true"&gt;
		&lt;property name="ws" value="gtk"/&gt;
		&lt;property name="os" value="linux"/&gt;
		&lt;property name="arch" value="x86"/&gt;
		&lt;property name="p2.director.installPath" value="${installFolder}"/&gt;
		&lt;property name="p2.repo" value="${p2.build.repo}"/&gt;
		&lt;property name="p2.director.iu" value="my.rcp.product"/&gt;
		&lt;property name="p2.director.version" value="1.0.0"/&gt;
	&lt;/ant&gt;
</pre> 
</body>
</html>