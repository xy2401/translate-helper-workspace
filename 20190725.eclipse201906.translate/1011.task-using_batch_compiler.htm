<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2019. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></meta>
<meta http-equiv="Content-Style-Type" content="text/css"></meta>
<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
<title>使用批处理编译器</title>
<link rel="stylesheet" type="text/css" href="../book.css"></link>
    <style type="text/css">/*     3Cspan class=    22notranslate hidefromparserselfclosedtags    22 gtc:attrval=    22    26lt;![CDATA[ */
td.c5 {
  background-color: #ffccaa;
}
pre.c4 {
  color: #3366ff;
}
span.c3 {
  color: #3366ff;
}
/* ]]    26gt;    22    3EFORMAT_PLACEHOLDER_37    3C/span    3E */
</style>
</head>
<body dir="ltr">
<a name="t_batch_compiler"></a>
<h2>使用批处理编译器</h2>
<h3>查找批处理编译器</h3>
<p>批处理编译器类位于JDT Core插件中。该类的名称是<i>org.eclipse.jdt.compiler.batch。BatchCompiler</i> 。它被打包到<code>plugins/org.eclipse.jdt.core_&lt;version&gt;.jar</code> 。从3.2开始，它也可以单独下载。该文件的名称是<code>ecj.jar</code> 。它的相应来源也可用。要获取它们，请转到<a href="http://download.eclipse.org/eclipse/downloads/">下载页面</a>并搜索<b>JDT核心批处理编译器部分</b> 。这个jar包含批处理编译器和javac ant适配器。</p>

<p>从3.3开始，这个jar还包含对jsr199（编译器API）的支持和对jsr269（注释处理）的支持。<b>为了使用注释处理支持，需要1.6 VM。</b></p>
<p>因此，它可以用作独立的应用程序，也可以在Eclipse之外的Ant构建中使用。</p>
<h3>运行批处理编译器</h3>
<ul>
<li>从命令行。
<p><code><span class="c3">java -jar org.eclipse.jdt.core_ &lt;version&gt; .jar -classpath rt.jar A.java</span></code></p>
<p>要么：</p>
<p><code><span class="c3">java -jar ecj.jar -classpath rt.jar A.java</span></code></p>

</li>
<li>使用<code>compile(String commandLine, PrintWriter outWriter, PrintWriter errWriter, CompilationProgress progress)</code>的静态<code>compile(String commandLine, PrintWriter outWriter, PrintWriter errWriter, CompilationProgress progress)</code>方法。
<pre class="c4">org.eclipse.jdt.core.compiler。CompilationProgress progress = null; //实例化您的子类org.eclipse.jdt.core.compiler.batch。BatchCompiler.compile（“ -  classpath rt.jar A.java”，new PrintWriter（System.out），new PrintWriter（System.err），progress）;</pre>
<p>您可以通过继承类<i>org.eclipse.jdt.compiler来控制报告进度的方式或批处理编译器的取消方式<i>。CompilationProgress</i> 。</p>
<p><b>注意：</b>如果没有明确的合规级别，则默认合规性为1.8。</p>
</li>
</ul>
<h4>哪些选项可用？</h4>

<p>推荐的选项具有橙色背景。</p>
<p>当多个选项被多次设置时，批处理编译器会从左到右使用它们。当使用不带“+”或“ - ”的警告选项（-warn：....）时，这将覆盖先前指定的警告集。因此，您应该确保在使用-warn选项之前给出了这样的选项。</p>
<p>同样适用于-err：和-info：选项。</p>
<table border="1" cellspacing="2" cellpadding="2">
<tr>
<th>名称</th>
<th colspan="3">用法</th>
</tr>
<tr>
<th colspan="4">类路径选项</th>
</tr>

<tr>
<td class="c5" valign="top" width="250" id="bootclasspath">-bootclasspath &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td class="c5" valign="top" colspan="3">这是用于引导编译器使用的类文件的目录或jar文件的列表。默认情况下，使用正在运行的VM的库。条目由平台路径分隔符分隔。<br>每个目录或文件都可以为'['和']'之间的类型指定访问规则。
<p>如果未指定<code>vm.boot.class.path</code> ，编译器将分别使用以下系统属性<code>sun.boot.class.path</code> ， <code>vm.boot.class.path</code>或<code>org.apache.harmony.boot.class.path</code>推断它。</p>
<p>当合规性为9以后，不支持此选项。</p>
</td>
</tr>
<tr>
<td class="c5" valign="top" width="250" id="cp">-cp<br>-classpath &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>

<td class="c5" valign="top" colspan="3">这是用于编译源文件的目录或jar文件的列表。默认值是属性“java.class.path”的值。条目由平台路径分隔符分隔。<br>每个目录或文件都可以为'['和']'之间的类型指定访问规则（例如[-X]禁止访问类型X，[~X]禁止访问类型X，[+ p / X：-p / *]禁止访问包p中的所有类型但允许访问p / X）。<br>编译器以递归方式遵循jar文件清单的<code>Class-Path</code>子句，并将每个引用的jar文件附加到类路径的末尾，前提是它尚未在类路径中。</td>
</tr>
<tr>
<td valign="top" width="250" id="extdirs">-extdirs &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>

<td valign="top" colspan="3">这是用于指定扩展zip / jar文件位置的目录列表。条目由平台路径分隔符分隔。当合规性为9以后，不支持此选项。</td>
</tr>
<tr>
<td valign="top" width="250" id="endorseddirs">-endorseddirs &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td valign="top" colspan="3">这是用于指定已签名的zip / jar文件位置的目录列表。条目由平台路径分隔符分隔。当合规性为9以后，不支持此选项。</td>
</tr>

<tr>
<td valign="top" width="250" id="sourcepath">-sourcepath &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td valign="top" colspan="3">这是用于指定源文件的目录列表。条目由平台路径分隔符分隔。<br>每个目录都可以为'['和']'之间的类型指定访问规则。</td>
</tr>
<tr>

<td valign="top" width="250" id="modulepath">--module-path &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td valign="top" colspan="3">这是用于指定模块位置的目录列表。条目由平台路径分隔符分隔。<br>每个目录都可以为'['和']'之间的类型指定访问规则。</td>
</tr>
<tr>

<td valign="top" width="250" id="modulesourcepath">--module-source-path &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td valign="top" colspan="3">这是用于指定需要编译的源模块的目录列表。条目由平台路径分隔符分隔。<br>每个目录都可以为'['和']'之间的类型指定访问规则。</td>
</tr>
<tr>

<td valign="top" width="250" id="processormodulepath">--processor-module-path &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>
<td valign="top" colspan="3">这是用于指定面向模块的注释处理器的目录列表。条目由平台路径分隔符分隔。<br>每个目录都可以为'['和']'之间的类型指定访问规则。</td>
</tr>
<tr>

<td valign="top" width="250" id="system">- 系统</td>
<td valign="top" colspan="3">这是指向系统模块的目录。</td>
</tr>
<tr>

<td valign="top" width="250" id="addexports">--add-exports &lt;module&gt; / &lt;package&gt; = &lt;other-module&gt;（，&lt;other-module&gt;）*</td>
<td valign="top" colspan="3">指定要视为从其定义模块导出到其他模块的包。</td>
</tr>
<tr>

<td valign="top" width="250" id="addreads">--add-reads &lt;module&gt; = &lt;other-module&gt;（，&lt;other-module&gt;）*</td>
<td valign="top" colspan="3">指定要视为给定模块所需的其他模块。</td>
</tr>
<tr>

<td valign="top" width="250" id="addmodules">--add-modules &lt;module&gt;（，&lt;module&gt;）*</td>
<td valign="top" colspan="3">指定除初始模块或所有模块外还要解析的根模块。</td>
</tr>
<tr>

<td valign="top" width="250" id="limitmodules">--limit-modules &lt;module&gt;（，&lt;module&gt;）*</td>
<td valign="top" colspan="3">将可观察模块限制为指定模块列表。</td>
</tr>
<tr>

<td class="c5" valign="top" width="250" id="d">-d &lt;dir 1&gt; |无</td>
<td class="c5" colspan="3">这用于指定应在哪个目录中转储生成的.class文件。如果省略，则不会创建包目录结构。<br>如果您想要根本不生成.class文件，请使用<span class="c3">-d none</span> 。</td>
</tr>
<tr>
<td valign="top" width="250" id="encoding">-encoding &lt;编码名称&gt;</td>
<td colspan="3">指定所有源文件的默认编码。通过使用<span class="c3">[&lt;encoding name&gt;]为</span>每个输入源文件/文件夹名称添加后缀，也可以在每个文件的基础上指定自定义编码。例如， <span class="c3">X.java [UTF-8]</span>将为位于当前用户目录中的编译单元X.java指定<code>UTF-8</code>编码。

<p>如果指定了多个默认源文件编码，则将使用最后一个。</p>
<p>例如：</p>
<ul>
<li><span class="c3"><code>... -encoding UTF-8 X.java [Cp1252] Y.java [UTF-16] Z.java ....</code></span><br>大多数源文件将使用UTF-8编码读取（包括<span class="c3">Z.java</span> ）。<span class="c3">X.java</span>将利用编码的Cp1252读取和<span class="c3">Y.java</span>将使用UTF-16编码读取。</li>

<li><span class="c3"><code>...  - 编码UTF-8编码UTF-16 ....</code></span><br>将使用UTF-16编码读取所有源文件。忽略UTF-8的-encoding选项。</li>
<li><span class="c3"><code>... -encoding Cp1252 /foo/bar/X.java[UTF-16] / foo / bar [UTF-8] ....</code></span><br>将使用Cp1252编码读取所有源文件。X.java是使用编码UTF-16读取的/ foo / bar目录中唯一的文件。该目录中的所有其他文件将使用UTF-8编码。</li>
</ul>
</td>
</tr>
<tr>
<th colspan="4">合规选项</th>
</tr>
<tr>
<td valign="top" width="250" id="release">- 发布6,7,8,9,10和11</td>

<td colspan="3">这指定了应为其编译源文件的VM版本。
<ul>
<li><span class="c3">6</span> （主要版本：50次要：0）</li>
<li><span class="c3">7</span> （主要版本：51次要：0）</li>
<li><span class="c3">8</span> （主要版本：52次要：0）</li>
<li><span class="c3">9</span> （主要版本：53次要：0）</li>
<li><span class="c3">10</span> （主要版本：54小调：0）</li>
<li><span class="c3">11</span> （主要版本：55次要：0）</li>
</ul>传递<span class="c3">--release 8</span>到编译器隐式设置<span class="c3">-source 1.8</span>和<span class="c3">-target 1.8</span> 。然而，使用<span class="c3"><span class="c3">-source，-target</span></span>或<span class="c3">1.7，1.8</span>等等与<span class="c3">--release</span>一起是不允许的。
</td>
</tr>
<tr>
<td valign="top" width="250" id="target">- 目标1.1至11（或8,8.0等）</td>

<td colspan="3">这指定了.class文件目标设置。可能的值是：<ul>
<li><span class="c3">1.1</span> （主要版本：45未成年人：3）</li>
<li><span class="c3">1.2</span> （主要版本：46小调：0）</li>
<li><span class="c3">1.3</span> （主要版本：47次要：0）</li>
<li><span class="c3">1.4</span> （主要版本：48小调：0）</li>
<li><span class="c3"><span class="c3">1.5,5</span></span>或<span class="c3">5.0（</span>主版本：49次要：0）</li>
<li><span class="c3"><span class="c3">1.6，6</span></span>或<span class="c3">6.0（</span>主要版本：50次要：0）</li>
<li><span class="c3"><span class="c3">1.7，7</span></span>或<span class="c3">7.0（</span>主要版本：51次要：0）</li>
<li><span class="c3"><span class="c3">1.8，8</span>个</span>或<span class="c3">8.0（</span>主要版本：52次要：0）</li>
<li><span class="c3">9</span> （主要版本：53次要：0）</li>
<li><span class="c3">10</span> （主要版本：54小调：0）</li>
<li><span class="c3">11</span> （主要版本：55次要：0）</li>
</ul>默认值为：<ul>
<li><span class="c3">1.1</span>在<span class="c3">-1.3</span>模式下</li>
<li><span class="c3">1.2</span>在<span class="c3">-1.4</span>模式下</li>
<li><span class="c3">1.5</span> in <span class="c3">-1.5</span>模式</li>
<li><span class="c3">1.6</span> in <span class="c3">-1.6</span>模式</li>
<li><span class="c3">1.7</span> in <span class="c3">-1.7</span>模式</li>
<li><span class="c3">1.8</span> in <span class="c3">-1.8</span>模式</li>
<li><span class="c3">9</span>在<span class="c3">-9</span>模式</li>
<li><span class="c3">-10</span>在<span class="c3">-10</span>模式下</li>
<li><span class="c3">11</span>在<span class="c3">-11</span>模式</li>
</ul>
<p>clcd1.1可用于生成StackMap属性。</p>
</td>
</tr>
<tr>
<td valign="top" id="_1.3">-1.3</td>
<td colspan="3">将合规级别设置为<span class="c3">1.3</span> 。隐式-source 1.3 -target 1.1。</td>

</tr>
<tr>
<td valign="top" id="_1.4">-1.4</td>
<td colspan="3">将合规性级别设置为<span class="c3">1.4</span> （默认值）。隐式-source 1.3 -target 1.2。</td>
</tr>
<tr>
<td valign="top" id="_1.5">-1.5</td>
<td colspan="3">将合规级别设置为<span class="c3">1.5</span> 。隐式-source 1.5 -target 1.5。</td>

</tr>
<tr>
<td valign="top" id="_1.6">-1.6</td>
<td colspan="3">将合规级别设置为<span class="c3">1.6</span> 。隐式-source 1.6 -target 1.6。</td>
</tr>
<tr>
<td valign="top" id="_1.7">-1.7</td>
<td colspan="3">将合规级别设置为<span class="c3">1.7</span> 。隐式-source 1.7 -target 1.7。</td>
</tr>
<tr>
<td valign="top" id="_1.8">-1.8</td>
<td colspan="3">将合规级别设置为<span class="c3">1.8</span> 。隐式-source 1.8 -target 1.8。</td>
</tr>
<tr>
<td valign="top" id="_9">-9</td>
<td colspan="3">将合规级别设置为<span class="c3">9</span> 。隐式-source 9 -target 9。</td>
</tr>
<tr>
<td valign="top" id="_10">-10</td>
<td colspan="3">将合规级别设置为<span class="c3">10</span> 。隐式-source 10 -target 10。</td>
</tr>
<tr>
<td valign="top" id="_11">-11</td>
<td colspan="3">将合规级别设置为<span class="c3">11</span> 。隐含的-source 11 -target 11。</td>
</tr>

<tr>
<td valign="top" width="250" id="source">- 资源1.1到11（或8,8.0等）</td>
<td colspan="3">这用于指定编译器期望的源级别。<br>可能的值是：<ul>
<li><span class="c3">1.3</span></li>
<li><span class="c3">1.4</span></li>
<li><span class="c3"><span class="c3">1.5,5</span></span>或<span class="c3">5.0</span></li>
<li><span class="c3"><span class="c3">1.6，6</span></span>或<span class="c3">6.0</span></li>
<li><span class="c3"><span class="c3">1.7，7</span></span>或<span class="c3">7.0</span></li>
<li><span class="c3"><span class="c3">1.8，8</span>个</span>或<span class="c3">8.0</span></li>
<li><span class="c3">9</span></li>
<li><span class="c3">10</span></li>
<li><span class="c3">11</span></li>
</ul>默认值为：<ul>

<li><span class="c3">1.3</span>在<span class="c3">-1.3</span>模式下</li>
<li><span class="c3">1.3</span>在<span class="c3">-1.4</span>模式下</li>
<li><span class="c3">1.5</span> in <span class="c3">-1.5</span>模式</li>
<li><span class="c3">1.6</span> in <span class="c3">-1.6</span>模式</li>
<li><span class="c3">1.7</span> in <span class="c3">-1.7</span>模式</li>
<li><span class="c3">1.8</span> in <span class="c3">-1.8</span>模式</li>
<li><span class="c3">9</span>在<span class="c3">-9</span>模式</li>
<li><span class="c3">-10</span>在<span class="c3">-10</span>模式下</li>
<li><span class="c3">11</span>在<span class="c3">-11</span>模式</li>
</ul>在<span class="c3">1.4中</span> ， <span class="c3"><i>assert</i></span>被视为关键字。在<span class="c3">1.5</span>和<span class="c3">1.6中</span> ， <span class="c3"><i>enum</i></span>和<span class="c3"><i>assert</i></span>被视为关键字。</td>
</tr>
<tr>
<th colspan="4">警告选项</th>
</tr>
<tr>
<td valign="top">- ？：warn -help：警告</td>
<td colspan="3">显示高级警告选项</td>
</tr>
<tr>
<td valign="top" width="250" rowspan="101"><a id="warn">-警告：...</a></td>

<td><!-- !!! YOU MUST ADJUST THE rowspan IF YOU ADD/REMOVE A -warn SUB-OPTION !!! -->

</td><td valign="top" colspan="3">指定已启用警告的集合。<br>
<table>
<tr>
<td><span class="c3">-warn：无</span></td>
<td>禁用所有警告和信息</td>
</tr>
<tr>
<td><span class="c3">-warn：&lt;</span>警告由分隔的标记<span class="c3">，&gt;</span></td>
<td>准确启用列出的警告</td>
</tr>
<tr>
<td><span class="c3">-warn：+</span> &lt;相隔警告令牌<span class="c3">，&gt;</span></td>
<td>启用其他警告</td>
</tr>
<tr>
<td><span class="c3">-warn： -</span> &lt;警告标记分隔<span class="c3">，</span> &gt;</td>
<td>禁用特定警告</td>
</tr>
</table>
<p>例子：</p>
<ul>
<li><span class="c3">-warn：unusedLocal，deprecation</span>仅启用给定的两个警告选项并禁用所有其他选项</li>
<li><span class="c3">-warn：-unusedLocal，折旧，+下通</span>禁用<span class="c3">unusedLocal</span>和<span class="c3">折旧</span> ，使<span class="c3">下通</span> ，并保持其他的警告选项不变</li>
</ul>在下面的<strong>Default</strong>列中，标记“+/-”表示选项包含多个细粒度警告变体，其中一些默认情况下已启用，另一些禁用。这意味着使用“+”指定给定选项将启用比默认值更多的警告，并指定“ - ”将禁用默认启用的某些警告。
</td>
</tr>
<tr>
<th align="center" width="50">默认</th>
<th align="left" width="150">令牌名称</th>
<th align="left">描述</th>
</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">allDeadCode</td>
<td valign="top">死代码包括普通的if（DEBUG）检查</td>
</tr>

<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">allDeprecation</td>
<td valign="top">即使在弃用的代码中也要弃用</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">allJavadoc</td>
<td valign="top">Javadoc无效或丢失</td>
</tr>
<tr>

<td align="center" valign="top">-</td>
<td align="left" valign="top">印花布，安</td>
<td valign="top">所有缺少的@Override注释（超类和超级接口）</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">全静态方法</td>
<td valign="top">所有方法都可以声明为静态警告</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">assertIdentifier</td>
<td valign="top"><i>断言的</i>发生用作标识符</td>

</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">拳击</td>
<td valign="top">自动装箱转换</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">charConcat</td>
<td valign="top">在字符串连接中使用char数组而不显式转换为字符串时</td>
</tr>

<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">compareIdentical</td>
<td valign="top">比较相同的表达</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">conditionAssign</td>
<td valign="top">可能意外的布尔赋值</td>
</tr>
<tr>

<td align="center" valign="top">+</td>
<td align="left" valign="top">constructorName</td>
<td valign="top">具有构造函数名称的方法</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">deadCode</td>
<td valign="top">死代码不包括琐碎if（DEBUG）检查</td>
</tr>
<tr>
<td align="center" valign="top">-</td>

<td align="left" valign="top">DEP-ANN</td>
<td valign="top">缺少@Deprecated注释</td>
</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">弃用</td>
<td valign="top">使用不推荐使用的类型或不推荐使用的代码</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">泄气</td>

<td valign="top">使用与不鼓励的访问规则匹配的类型</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">emptyBlock</td>
<td valign="top">无证的空块</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">enumIdentifier</td>
<td valign="top">用作标识符的<i>枚举的</i>出现</td>

</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">enumSwitch</td>
<td valign="top">不完整的枚举开关</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">enumSwitchPedantic</td>
<td valign="top">即使存在默认情况，也会报告缺少枚举开关案例</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">下通</td>
<td valign="top">可能的落空案例</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">fieldHiding</td>
<td valign="top">字段隐藏另一个变量</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">finalBound</td>
<td valign="top">最终绑定的类型参数</td>
</tr>
<tr>

<td align="center" valign="top">+</td>
<td align="left" valign="top">最后</td>
<td valign="top">最后阻止不正常完成</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">被禁止</td>
<td valign="top">使用与禁止访问规则匹配的类型</td>
</tr>
<tr>
<td align="center" valign="top">-</td>

<td align="left" valign="top">的hashCode</td>
<td valign="top">覆盖equals（）时缺少hashCode（）方法</td>
</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">藏</td>
<td valign="top">用于fieldHiding，localHiding，maskedCatchBlock和typeHiding的宏</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">includeAssertNull</td>
<td valign="top">对断言表达式中受污染的变量引发空警告</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">indirectStatic</td>
<td valign="top">间接引用静态成员</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">inheritNullAnnot</td>
<td valign="top">将null注释视为从重写方法继承到任何重写方法</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">intfAnnotation</td>
<td valign="top">用作超级接口的注释类型</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">intfNonInherited</td>
<td valign="top">接口非继承方法兼容性</td>

</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">intfRedundant</td>
<td valign="top">找到冗余的超级接口</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">invalidJavadoc</td>
<td valign="top">宏来切换'格式错误的Javadoc评论'选项及其下面列出的所有子选项</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">invalidJavadocTag</td>
<td valign="top">在Javadoc注释中报告无效的Javadoc标记。</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">invalidJavadocTagDep</td>
<td valign="top">报告Javadoc标记参数中的无效弃用引用</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">invalidJavadocTagNotVisible</td>
<td valign="top">报告Javadoc标记参数中的无效不可见引用</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">invalidJavadocVisibility（&lt;能见度&gt;）</td>
<td valign="top">为格式错误的Javadoc标记警告指定可见性修饰符（“public”，“protected”或“private”）。用法示例：invalidJavadocVisibility（public）</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">的javadoc</td>
<td valign="top">无效的Javadoc</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">localHiding</td>
<td valign="top">局部变量隐藏另一个变量</td>
</tr>

<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">maskedCatchBlock</td>
<td valign="top">隐藏的拦截块</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocTags</td>
<td valign="top">宏来切换'缺少的Javadoc标签'选项及其下面列出的所有子选项</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocTagsMethod</td>
<td valign="top">报告缺少方法类型参数的Javadoc标记</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocTagsOverriding</td>
<td valign="top">报告在重写方法中缺少Javadoc标记</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocTagsVisibility（&lt;能见度&gt;）</td>
<td valign="top">为缺少的Javadoc标记警告指定可见性修饰符（“public”，“protected”或“private”）。用法示例：missingJavadocTagsVisibility（public）</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocComments</td>
<td valign="top">宏来切换'缺少的Javadoc评论'选项及其下面列出的所有子选项</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocCommentsOverriding</td>
<td valign="top">报告在重写方法中缺少Javadoc注释</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">missingJavadocCommentsVisibility（&lt;能见度&gt;）</td>
<td valign="top">为缺少的Javadoc注释警告指定可见性修饰符（“public”，“protected”或“private”）。用法示例：missingJavadocCommentsVisibility（public）</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">NLS</td>
<td valign="top">非nls字符串文字（缺少标签// $ NON-NLS- &lt;n&gt;）</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">noEffectAssign</td>
<td valign="top">作业没有效果</td>
</tr>

<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">nonnullNotRepeated</td>
<td valign="top">来自重写方法的非空参数注释不会在重写方法中重复。仅在启用nullAnnot选项时有效。</td>
</tr>

<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">空值</td>
<td valign="top">潜在的缺失或冗余的空检查</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">nullAnnot</td>
<td valign="top">启用基于注释的空分析。<br>如果需要，可以通过追加（nullable | nonnull | nonnullbydefault）来指定编译器要解释的注释类型，其中每个注释类型都使用其完全限定名称指定。<br>可以通过重复传递此选项来指定多组注释类型（另请参阅相应的<a href="../reference/preferences/java/compiler/ref-preferences-errors-warnings.htm#null_annotation_names">首选项</a> ）。<br>
<i>用法示例：nullAnnot（p。可空| P。非空| P。NonNullByDefault）</i><br>启用此选项将启用所有与null注释相关的子选项。这些可以使用下面列出的选项单独控制</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">nullAnnotConflict</td>
<td valign="top">报告指定的null注释和推断的nullness之间的冲突。仅在启用nullAnnot选项时有效。</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">nullAnnotRedundant</td>
<td valign="top">报告null注释的冗余规范。仅在启用nullAnnot选项时有效。</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">nullDereference</td>
<td valign="top">缺少空检查</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">nullUncheckedConversion</td>
<td valign="top">报告未经检查的从未注释类型到@NonNull类型的转换。仅在启用nullAnnot选项时有效。</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">过安</td>
<td valign="top">缺少@Override注释（仅限超类）</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">paramAssign</td>
<td valign="top">分配给参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">pkgDefaultMethod</td>
<td valign="top">尝试覆盖package-default方法</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">生的</td>
<td valign="top">使用原始类型（而不是参数化类型）</td>
</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">资源</td>
<td valign="top">（可能）不安全地使用Closeable类型的资源</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">分号</td>

<td valign="top">不必要的分号或空的陈述</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">串行</td>
<td valign="top">缺少serialVersionUID</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">specialParamHiding</td>
<td valign="top">隐藏另一个字段的构造函数或setter参数</td>

</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">静态访问</td>
<td valign="top">indirectStatic和staticReceiver的宏</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">静态方法</td>
<td valign="top">一个可以作为静态方法的实例方法</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">staticReceiver</td>
<td valign="top">如果使用非静态接收器来获取静态字段或调用静态方法</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">超</td>
<td valign="top">在不进行超级调用的情况下重写方法</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">压制</td>
<td valign="top">启用@SuppressWarnings</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">switchDefault</td>
<td valign="top">switch语句缺少默认情况</td>
</tr>
<tr>

<td align="center" valign="top">-</td>
<td align="left" valign="top">syncOverride</td>
<td valign="top">在synchronized方法覆盖中缺少synchronized</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">syntacticAnalysis</td>
<td valign="top">对字段执行基于语法的空分析</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">syntheticAccess</td>
<td valign="top">在为内部类执行合成访问时</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">任务</td>
<td valign="top">在源代码中启用对任务标记的支持</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">typeHiding</td>
<td valign="top">类型参数隐藏另一种类型</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unavoidableGenericProblems</td>
<td valign="top">报告由于原始API导致的不可避免的类型安全问题</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">未选中</td>
<td valign="top">未经检查的类型操作</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unnecessaryElse</td>
<td valign="top">不必要的其他条款</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unqualifiedField</td>
<td valign="top">不合格的领域参考</td>

</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">没用过</td>
<td valign="top">untImport，unusedLabel，unusedLocal，unusedPrivate，unusedThrown，unusedTypeArgs和unusedTypeParameter的宏</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedAllocation</td>
<td valign="top">分配未使用的对象</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedArgument</td>
<td valign="top">unused method参数<i>（不建议使用的选项;请改用unusedParam）</i></td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedImport</td>
<td valign="top">未使用的导入参考</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedLabel</td>
<td valign="top">未使用的标签</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedLocal</td>
<td valign="top">未使用的局部变量</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedParam</td>
<td valign="top">未使用的方法参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedParamImplementing</td>
<td valign="top">实现方法的未使用参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedParamIncludeDoc</td>
<td valign="top">Javadoc注释标记中记录的未使用参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedParamOverriding</td>
<td valign="top">用于覆盖方法的未使用参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedPrivate</td>
<td valign="top">未使用的私人会员声明</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedThrown</td>
<td valign="top">未使用的声明抛出异常</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedThrownIncludeDocComment</td>
<td valign="top">Javadoc注释标记中记录的未使用的声明抛出异常</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedThrownExemptExceptionThrowable</td>
<td valign="top">报告未使用的声明抛出异常，但免除Exception和Throwable</td>
</tr>
<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">unusedThrownWhenOverriding</td>
<td valign="top">重写方法中未使用的声明抛出异常</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedTypeArgs</td>
<td valign="top">方法和构造函数的未使用的类型参数</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">unusedTypeParameter</td>
<td valign="top">未使用的类型参数</td>
</tr>

<tr>
<td align="center" valign="top">-</td>
<td align="left" valign="top">uselessTypeCheck</td>
<td valign="top">不必要的cast / instanceof操作</td>
</tr>
<tr>
<td align="center" valign="top">+</td>
<td align="left" valign="top">varargsCast</td>
<td valign="top">varargs论证需要明确的演员</td>
</tr>
<tr>
<td align="center" valign="top">+/-</td>
<td align="left" valign="top">warningToken</td>
<td valign="top">@SuppressWarnings中未处理或未使用的警告标记</td>
</tr>

<td><!-- !!! YOU MUST ADJUST THE rowspan ABOVE IF YOU ADD/REMOVE A -warn SUB-OPTION !!! -->

<tr>
</tr></td><td valign="top" id="nowarn">-nowarn</td>
<td colspan="3">没有警告（相当于<span class="c3">-warn：none</span> ）</td>

<tr>
<td valign="top" width="250" id="err">-呃：...</td>
<td valign="top" colspan="3">指定转换为错误的已启用警告集。<br>例如<span class="c3">-err：unusedLocal，弃用</span><br>unusedLocal和deprecation警告将转换为错误。所有其他警告仍被报告为警告。
<table>
<tr>
<td>-err：&lt;警告标记分隔，&gt;</td>
<td>将列出的警告完全转换为错误</td>
</tr>

<tr>
<td>-err：+ &lt;由...分隔的警告标记</td>
<td>将其他警告转换为错误</td>
</tr>
<tr>
<td>-err： -  &lt;警告标记分隔，&gt;</td>
<td>删除特定警告转换为错误</td>
</tr>
</table>
</td>
</tr>

<tr>
<td valign="top" width="250" id="info">-信息：...</td>
<td valign="top" colspan="3">指定转换为信息的已启用警告集。<br>例如<span class="c3">-info：unusedLocal，deprecation</span><br>unusedLocal和deprecation警告将转换为infos。所有其他警告仍被报告为警告。
<table>
<tr>
<td>-info：&lt;由...分隔的警告标记</td>
<td>将列出的警告完全转换为信息</td>
</tr>

<tr>
<td>-info：+ &lt;由...分隔的警告标记</td>
<td>将其他警告转换为信息</td>
</tr>
<tr>
<td>-info： -  &lt;警告标记分隔，&gt;</td>
<td>删除特定警告转换为信息</td>
</tr>
</table>
</td>
</tr>

<tr>
<td valign="top" id="deprecation">-deprecation</td>
<td colspan="3">相当于<span class="c3">-warn：+弃用</span> 。</td>
</tr>
<tr>
<td valign="top" id="properties">-properties &lt;file&gt;</td>
<td colspan="3">根据属性文件内容设置警告/错误选项。此选项可与-nowarn，-err：..或-warn：..选项一起使用，但命令行中的最后一个选项设置要使用的选项。<br>
<p>可以通过在现有Java项目上设置项目特定设置并使用<code>.settings/org.eclipse.jdt.core.prefs</code>文件中的文件作为属性文件或定义条目/的简单文本文件来生成属性文件内容。值对使用<code>org.eclipse.jdt.core.定义的常量<code>org.eclipse.jdt.core.JavaCore</code>类。在这个类中声明的那些常量中，所有选项都以<code>"org.eclipse.jdt.core.compiler."</code>开头<code>"org.eclipse.jdt.core.compiler."</code>由批处理编译器解释。</p>

<pre>...org.eclipse.jdt.core.compiler.problem.annotationSuperInterface = warning org.eclipse.jdt.core.compiler.problem.assertIdentifier = warning org.eclipse.jdt.core.compiler.problem.autoboxing = ignore ...
</pre>
<p>要确保属性文件在IDE和批处理编译器中使用时具有相同的效果，使用<code>-properties</code>选项将更改几个选项的默认值：</p>
<table>
<tr><td><b>-G</b></td><td>默认更改为<em>全部启用</em></td></tr>
<tr><td><b>-preserveAllLocals</b></td><td>默认更改为<em>启用</em></td></tr>
<tr><td><b>-enableJavadoc</b></td><td>默认更改为<em>启用</em></td></tr>
<tr><td>错误/警告<b>被禁止</b></td><td>默认更改为<em>错误</em></td></tr>
</table>
</td>
</tr>
<tr>
<th colspan="4">调试选项</th>
</tr>
<tr>
<td valign="top" id="g">-g [：无|：线，乏，源]</td>
<td colspan="3">设置调试属性级别<br>
<table>
<tr>
<th align="left">-G</th>

<td colspan="3">所有调试信息（相当于<span class="c3">-g：行，变量，源</span> ）</td>
</tr>
<tr>
<th align="left">-g：无</th>
<td colspan="3">没有调试信息</td>
</tr>
<tr>
<th align="left">-g：线，乏，源]</th>
<td colspan="3">选择性调试信息</td>
</tr>

</table>不指定此选项等同于设置<span class="c3">-g：lines，source</span> 。
</td>
</tr>
<tr>
<td valign="top" id="preserveAllLocals">-preserveAllLocals</td>
<td colspan="3">显式请求编译器保留所有局部变量（用于调试目的）。如果省略，编译器将删除未使用的本地。</td>
</tr>
<tr>
<td valign="top" id="parameters">α参数</td>
<td colspan="3">显式请求编译器保留有关要从反射库，注释处理，代码编织和调试器访问的方法的形式参数（例如其名称）的信息。目标级别1.8及更高版本支持此选项。</td>
</tr>
<tr>
<th colspan="4">注释处理选项（需要1.6 VM或更高版本，仅在符合性为1.6时使用）</th>
</tr>
<tr>
<td valign="top" id="Akey">-Akey [=值]</td>
<td valign="top" colspan="3">传递给注释处理器的注释处理器选项。 <code>key</code>由以点分隔的标识符组成</td>

</tr>
<tr>
<td valign="top" id="proc">-proc：只|无]</td>
<td valign="top" colspan="3">如果指定<code>-proc:only</code> ，则注释处理器将运行，但不会执行编译。如果指定<code>-proc:none</code> ，则不会发现或运行注释处理器;编译将继续进行，就像没有找到注释处理器一样。默认情况下，编译器必须在类路径中搜索注释处理器，因此如果不需要注释处理，则指定<code>-proc:none</code>可以加快编译速度。</td>
</tr>
<tr>

<td valign="top" id="processor">-processor &lt;class1 [，class2，...]&gt;</td>
<td valign="top" colspan="3">要运行的注释处理器的合格类名。如果指定，将跳过正常的<a href="http://download.oracle.com/javase/6/docs/api/javax/annotation/processing/Processor.html">处理器发现过程</a> 。</td>
</tr>
<tr>
<td valign="top" id="processorpath">-processorpath &lt;dir 1&gt;; &lt;dir 2&gt;; ...; &lt;dir P&gt;</td>

<td valign="top" colspan="3">将搜索注释处理器的目录或jar文件列表。条目由平台路径分隔符分隔。如果未指定，则将搜索类路径。</td>
</tr>
<tr>
<td valign="top" id="s">-s &lt;dir&gt;</td>
<td valign="top" colspan="3">将创建生成的源文件的目录。</td>
</tr>
<tr>
<td valign="top" id="XprintProcessorInfo">-XprintProcessorInfo</td>
<td valign="top" colspan="3">打印有关要求处理器处理哪些注释和哪些元素的信息</td>
</tr>
<tr>

<td valign="top" id="XprintRounds">-XprintRounds</td>
<td valign="top" colspan="3">打印有关注释处理轮次的信息</td>
</tr>
<tr>
<td valign="top" id="classNames">-classNames &lt;class1 [，class2，...]&gt;</td>
<td valign="top" colspan="3">需要处理的二进制类型的限定名称</td>
</tr>
<tr>
<th colspan="4">忽略选项（与javac选项兼容）</th>
</tr>
<tr>

<td valign="top" id="J">-J &lt;选项&gt;</td>
<td valign="top" colspan="3">将选项传递给虚拟机</td>
</tr>
<tr>
<td valign="top" id="X">-X &lt;选项&gt;</td>
<td valign="top" colspan="3">指定非标准选项。 -Xemacs不会被忽略。</td>
</tr>
<tr>
<td valign="top">-X</td>
<td valign="top" colspan="3">打印非标准选项并退出</td>

</tr>
<tr>
<td valign="top" id="O">-O</td>
<td valign="top" colspan="3">优化执行时间</td>
</tr>
<tr>
<th colspan="4">高级选项</th>
</tr>
<tr>
<td valign="top" id="file">@ &lt;文件&gt;</td>
<td valign="top" colspan="3">从文件中读取命令行参数</td>

</tr>
<tr>
<td valign="top" id="maxProblems">-maxProblems &lt;n&gt;</td>
<td valign="top" colspan="3">每个编译单元的最大问题数（默认为100）</td>
</tr>
<tr>
<td valign="top" id="log">-log &lt;filename&gt;</td>
<td colspan="3">指定一个日志文件，其中将转储编译器的所有输出。如果要调试批处理编译器或获取包含批处理构建中的所有错误和警告的文件，这非常有用。如果扩展名为<b>.xml</b> ，则生成的日志将是xml文件。</td>
</tr>
<tr>
<td valign="top" id="genericsignature">-genericsignature</td>
<td colspan="3">显式请求编译器保留有关lambda表达式的通用签名的信息。</td>
</tr>
<tr>
<td valign="top" id="Xemacs">-Xemacs</td>
<td colspan="3">使用emacs样式将错误和警告位置呈现到控制台和常规文本日志中。XML日志不受此选项的影响。激活此选项后，消息：<br>
<code><span class="c3">2。/workspace/X.java中的警告<br>（在第8行）......</span></code><br>表示为：<br>
<code><span class="c3">/workspace/X.java:8：警告：方法......</span></code></td>
</tr>
<tr>
<td valign="top" id="proceedOnError">-proceedOnError [：致命]</td>

<td colspan="3">尽管有错误，仍然继续编译，转储带有问题方法或问题类型的类文件。仅当您希望能够运行应用程序时，即使您有剩余错误，也建议使用此选项。<br>使用“：Fatal”时，所有可选错误都被视为致命错误，这会导致代码在运行时出现错误时将中止。如果没有“：Fatal”，可选错误不会阻止正确的代码生成，并且生成的.class文件可以毫无问题地运行。</td>
</tr>
<tr>
<td valign="top" id="verbose">-verbose</td>
<td colspan="3">如果指定，则在控制台或日志文件中打印已访问/已处理的编译单元。</td>
</tr>
<tr>
<td valign="top" id="referenceInfo">-referenceInfo</td>
<td colspan="3">计算参考信息。仅在连接到构建器时才有用。否则参考信息是无用的。</td>
</tr>

<tr>
<td valign="top" id="progress">-进展</td>
<td colspan="3">显示进度（仅在-log模式下）。</td>
</tr>
<tr>
<td valign="top" id="time">-时间</td>
<td colspan="3">显示速度信息。</td>
</tr>
<tr>
<td valign="top" id="noExit">-没有出口</td>
<td colspan="3">不要在编译结束时调用<span class="c3">System.exit（n）</span> （如果没有错误，则<span class="c3">n = 0</span> ）。</td>

</tr>
<tr>
<td valign="top" id="repeat">-repeat &lt;n&gt;</td>
<td colspan="3">重复编译过程<span class="c3">&lt;n&gt;</span>次（性能分析）。</td>
</tr>
<tr>
<td valign="top" id="inlineJSR">-inlineJSR</td>
<td colspan="3">内联JSR字节码（如果目标&gt; = 1.5则隐式）。</td>

</tr>
<tr>
<td valign="top" id="enableJavadoc">-enableJavadoc</td>
<td colspan="3">考虑Javadoc中的引用。仅当启用此选项时，Javadoc选项才有效。</td>
</tr>
<tr>
<td valign="top" id="missingNullDefault">-missingNullDefault</td>
<td colspan="3">当启用基于注释的空分析时（使用上面的“nullAnnot”），只要包或类型上没有默认注释，此选项就会发出警告。</td>
</tr>
<tr>
<td valign="top" id="annotationpath">-annotationpath</td>
<td colspan="3">当启用基于注释的空分析时（使用上面的“nullAnnot”），此选项定义在何处查找<a href="task-using_external_null_annotations.htm">外部注释</a>以支持基于注释的空分析。<br>此选项的值是目录或zip文件的列表。条目由平台路径分隔符分隔。<br>特殊名称CLASSPATH将导致从类路径和源路径中查找外部注释。</td>
</tr>
<tr>
<th colspan="4">帮助选择</th>
</tr>
<tr>
<td valign="top" id="help">- ？ -救命</td>
<td valign="top" colspan="3">显示帮助信息。</td>
</tr>

<tr>
<td valign="top" id="v">-v -version</td>
<td colspan="3">显示编译器的内部版本号。这对报告错误非常有用。</td>
</tr>
<tr>
<td valign="top" id="showversion">-showversion</td>
<td colspan="3">显示编译器的内部版本号并继续。这对报告错误非常有用。</td>
</tr>
</table>
<h4>例子</h4>
<table>
<tr>

<td valign="top"><code><span class="c3">d：\ temp -classpath rt.jar -time -g -dd：/ tmp</span></code></td>
<td valign="top">它编译d：\ temp及其子文件夹中的所有源文件。类路径只是rt.jar。它生成所有调试属性，所有生成的.class文件都转储到d：\ tmp中。批处理完成后，将显示编译器的速度。</td>
</tr>
<tr>
<td valign="top"><code><span class="c3">d：\ temp \ Test.java -classpath d：\ temp; rt.jar -g：none</span></code></td>
<td valign="top">它只编译Test.java及其相关文件（如果有），从d：\ temp中检索相关文件。类路径是d：\ temp后跟rt.jar，这意味着首先在d：\ temp中搜索所有必需的类，然后在rt.jar中搜索。它不生成任何调试属性，并且所有生成的.class文件都转储到d：\ temp中。</td>
</tr>
</table>
</body>
</html>