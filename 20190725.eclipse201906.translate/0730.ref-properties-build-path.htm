<html lang="zh-Hans" >
  <head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2018. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="Content-Style-Type" content="text/css">

    <title>Java构建路径</title>
    <link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1">
  </head>

  <body >
    <h1>Java构建路径</h1>

    <p>此页面中的选项指示Java项目的构建路径设置。您可以从创建项目的上下文菜单或工作台的“ <a href="ref-menu-file.htm">文件”菜单</a>中通过项目属性（“项目”&gt;“属性”&gt;“Java构建路径”）访问此页面。</p>

    <p>构建类路径是构建项目时编译器可见的路径列表。</p>

    <p>对于面向Java 9或更高版本的项目，“ <a href="#projects">项目”</a>和“ <a href="#libraries">库”</a>选项卡上的条目可以放在传统的Classpath或Modulepath上。Modulepath上的条目根据<a href="http://openjdk.java.net/projects/jigsaw/spec">Java平台模块系统</a>解释为<strong>模块</strong> 。对于这些，可以通过<a href="propertypages/ref-properties-buildpath-modularity.htm">模块化详细信息</a>编辑更多详细<a href="propertypages/ref-properties-buildpath-modularity.htm">信息</a> 。
    </p>
    
    <p>此属性页包含以下选项卡：</p>
    <ul>
    <li><a href="#source">来源标签</a></li>
    <li><a href="#projects">项目标签</a></li>
    <li><a href="#libraries">库选项卡</a></li>
    <li><a href="#order-and-export">订单和导出选项卡</a></li>
    <li><a href="#module-dependencies">“模块依赖关系”选项卡</a></li>
    </ul>

    <h2 id="source">来源标签</h2>

    <p>源文件夹是项目层次结构中的顶级文件夹。它们是包含.java文件的包的根。编译器会将包含的文件转换为将写入输出文件夹的.class文件。</p>
<p>源文件夹允许构建项目，例如将测试与两个源文件夹中的应用程序分开。在源文件夹中，可以通过使用包来实现更详细的结构。</p> 
<p>每个源文件夹都可以定义排除过滤器，以指定文件夹中的哪些资源不应对编译器可见。</p>
<p>源文件夹中存在的资源将复制到输出文件夹，除非<a href="preferences/java/compiler/ref-preferences-building.htm">Java&gt;编译器&gt;构建</a>首选项页面中的设置指定资源已过滤。输出文件夹是按项目定义的，除非源文件夹指定了自己的输出文件夹。</p>

<table border="1" cellspacing="0" cellpadding="5" width="600" summary="Source folder options">
	<caption>源文件夹选项：<br>
	</caption>

	<tbody>
		<tr>
			<th>选项</th>

			<th>描述</th>
		</tr>

		<tr>
			<td align="left" valign="top" width="20%">新增文件夹</td>

			<td align="left" valign="top">创建一个包含源的新文件夹</td>
		</tr>
		<tr>
			<td align="left" valign="top" width="20%">链接来源</td>

			<td align="left" valign="top">创建一个链接到工作区外部位置的新文件夹</td>
		</tr>
		<tr>
			<td align="left" valign="top">编辑或切换</td>

			<td align="left" valign="top">允许修改当前选定的源文件夹或源文件夹属性。</td>
		</tr>

		<tr>
			<td>去掉</td>

			<td>从类路径中删除选定的文件夹。这不会删除文件夹及其内容。</td>
		</tr>
		<tr>
			<td>允许每个源文件夹输出文件夹</td>
			<td>显示/隐藏源文件夹的“输出文件夹”属性</td>
		</tr>
		
	</tbody>
</table>
<br>
<table border="1" cellspacing="0" cellpadding="5" width="600" summary="Source folder attributes">
	<caption>源文件夹属性：<br>
	</caption>

	<tbody>
		<tr>
			<th>属性</th>

			<th>描述</th>
		</tr>

		<tr>
			<td align="left" valign="top" width="20%">排除过滤器</td>

			<td align="left" valign="top">选择编译器不可见的资源。有关详细信息，请参阅<a href="../concepts/concept-inclusion-exclusion-patterns.htm">包含和排除模式</a> 。</td>
		</tr>

		<tr>
			<td align="left" valign="top">导出目录</td>

			<td align="left" valign="top">仅在选中“ <b>允许每个源文件夹的输出文件夹”</b>时可用。定义源文件夹特定的输出位置。如果未设置，则使用项目的默认输出文件夹。</td>
		</tr>
		<tr>
			<td align="left" valign="top">本机库位置</td>
			<td align="left" valign="top">定义包含源文件夹中的源在运行时所需的本机库（例如“dll”或“o”文件）的文件夹。
			</td>
		</tr>

		<tr>
			<td align="left" valign="top">忽略可选的编译问题</td>
			<td align="left" valign="top">设置为“是”时，编译器不会报告所有可选问题。</td>
		</tr>

		<tr>
			<td align="left" valign="top">包含测试源</td>
			<td align="left" valign="top">设置为“是”时，假定文件夹中的源是测试代码，否则为主代码。在编译主代码时，只有其他主代码（来自当前项目或构建路径上的其他项目）可见，并且只有未配置为仅对测试代码可见的依赖项。编译测试代码时，构建路径上的所有代码都是可见的。在使用Java 9编译测试代码时，假定未命名的模块可由当前模块读取，因此如果将它们放在类路径上， <code>module-info.java</code>访问<code>module-info.java</code>中不应提及的测试依赖项。</td>
		</tr>
	</tbody>
</table>

    <p>在此页面的底部， <b>默认输出文件夹</b>字段允许您输入文件路径的路径，此路径的编译输出将驻留在该路径中。默认输出用于未指定自己的输出文件夹的源文件夹。使用“ <b>浏览”</b>从当前项目中选择现有位置。</p>
    
    <h2 id="projects">项目标签</h2>

    <p>在<b>构建路径</b>列表中的<b>必需项目</b>中，您可以通过选择要添加到此新项目的构建路径的其他工作台项目来添加项目依赖项。</p>

    <p>添加所需项目会间接添加标记为“已导出”的所有类路径条目。将类路径条目设置为导出是在“订购和导出”选项卡中完成的。</p>

    <p>此处选择的项目将自动添加到引用的项目列表中。引用的项目列表用于确定构建顺序。在构建所有引用的项目之后，始终构建项目。</p>
    
    <table border="1" cellspacing="0" cellpadding="5" width="600" summary="Project entry options">

	<tbody>
		<tr>
			<th>行动</th>

			<th>描述</th>
		</tr>

		<tr>
			<td align="left" valign="middle" width="20%">加</td>

			<td align="left" valign="top">将工作空间中的另一个项目添加到此项目的构建路径中。</td>
		</tr>
		
		<tr>
			<td align="left" valign="middle" width="20%">编辑或切换</td>

			<td align="left" valign="top">编辑所需项目的classpath属性。</td>
		</tr>
		
		<tr>
			<td align="left" valign="middle" width="20%">去掉</td>

			<td align="left" valign="top">从列表中删除所选的必需项目。</td>
		</tr>
		
	</tbody>
</table>
<table border="1" cellspacing="0" cellpadding="5" width="600" summary="Project entry attributes">
	<caption>项目条目属性：<br>
	</caption>

	<tbody>
		<tr>
			<th>属性</th>

			<th>描述</th>
		</tr>
		
		<tr>
			<td align="left" valign="top">本机库位置</td>

			<td align="left" valign="top">指定可以找到项目运行所需的本机库的位置。</td>
		</tr>

		<tr>
			<td align="left" valign="top">是模块化的/不是模块化的</td>

			<td align="left" valign="top">指定是否应将项目视为模块。双击以编辑<a href="propertypages/ref-properties-buildpath-modularity.htm">模块化详细信息</a> 。</td>
		</tr>

		<tr>
			<td align="left" valign="top">访问规则</td>

			<td align="left" valign="top">指定库中包含的项目的访问规则。这允许隐藏项目的内容。</td>
		</tr>
		<tr>
			<td align="left" valign="top">仅对测试源可见</td>
			<td align="left" valign="top">设置为“是”时，只有在编译标记为包含测试代码的sources文件夹中的源时，才能访问通过引用项目可访问的代码。</td>
		</tr>
		<tr>
			<td align="left" valign="top">没有测试代码</td>
			<td align="left" valign="top">当此项设置为“否”时，在当前项目中编译测试代码时，引用项目中的测试代码不可见。</td>
		</tr>
	</tbody>
</table>

    <h2 id="libraries">库选项卡</h2>

    <p>在此页面上，您可以将库添加到构建路径。</p>
    <p>默认情况下，库列表包含表示Java运行时库的条目。此条目指向选择作为默认JRE的JRE。默认JRE在<a href="preferences/java/debug/ref-installed_jres.htm">Java&gt; Debug&gt; Installed JREs</a>首选项页面中配置。</p>

    <table border="1" cellspacing="0" cellpadding="5" width="600" summary="Libraries tab options">
      <caption>“库”选项卡选项：<br>
      </caption>

      <tbody>
        <tr>
          <th width="20%">选项</th>

          <th>描述</th>
        </tr>

        <tr>
          <td align="left" valign="top">添加JAR</td>

          <td align="left" valign="top">允许您导航工作台层次结构并选择要添加到构建路径的JAR文件。</td>
        </tr>

        <tr>
          <td align="left" valign="top">添加外部JAR</td>

          <td align="left" valign="top">允许您导航文件系统（在工作台外部）并选择要添加到构建路径的JAR文件。</td>
        </tr>

        <tr>
          <td align="left" valign="top">添加变量</td>

          <td align="left" valign="top">允许您将类路径变量添加到构建路径。类路径变量是JAR的间接，具有避免类路径中的本地文件系统路径的好处。在团队中共享项目时需要这样做。<br>可以在<a href="preferences/java/buildpath/ref-preferences-classpath-variables.htm">Java&gt; Build Path&gt; Classpath Variables</a>首选项页面中创建和编辑<a href="preferences/java/buildpath/ref-preferences-classpath-variables.htm">变量</a> 。</td>
        </tr>

        <tr>
          <td>添加库</td>

          <td>允许添加预定义的库，如JRE系统库。这样的库可以代表任意数量的条目（作为库节点的子节点可见）</td>
        </tr>

        <tr>
          <td>添加类文件夹</td>

          <td>允许导航工作台层次结构并为构建路径选择类文件夹。选择对话框还允许您创建新文件夹。</td>
        </tr>

        <tr>
          <td>添加外部类文件夹</td>

          <td>允许导航文件系统（在工作台外部）并为构建路径选择类文件夹。选择对话框还允许您创建新文件夹。</td>
        </tr>

        <tr>
          <td align="left" valign="top">编辑或切换</td>

          <td align="left" valign="top">允许您修改当前选定的库条目或条目属性</td>
        </tr>

        <tr>
          <td align="left" valign="top">去掉</td>

          <td align="left" valign="top">从构建路径中删除所选元素。这不会删除资源。</td>
        </tr>
        
        <tr>
          <td align="left" valign="top">迁移JAR文件</td>

          <td align="left" valign="top">将构建路径上的JAR迁移到较新版本。如果较新版本包含重构脚本，则将执行存储在脚本中的重构。</td>
        </tr>
      </tbody>
    </table>

    <p>库具有以下属性（显示为库条目子节点）：</p>

<table border="1" cellspacing="0" cellpadding="5" width="600" summary="Library entry attributes">
	<caption>库条目属性：<br>
	</caption>

	<tbody>
		<tr>
			<th>属性</th>

			<th>描述</th>
		</tr>

		<tr>
			<td align="left" valign="top">来源附件</td>

			<td align="left" valign="top">指定可以在何处找到库的源。</td>
		</tr>

		<tr>
			<td align="left" valign="top" width="20%">Javadoc的位置</td>

			<td align="left" valign="top">指定可以在哪里找到库的Javadoc文档。如果指定，您可以在此库的元素上使用<b>Shift + F2</b>来打开其文档。</td>
		</tr>

		<tr>
			<td align="left" valign="top" width="20%">外部注释</td>

			<td align="left" valign="top">指定可以在何处找到库的<a href="../tasks/task-using_external_null_annotations.htm">外部注释</a> 。如果指定，JDT将考虑这些注释进行静态空分析。</td>
		</tr>
		
		<tr>
			<td align="left" valign="top">本机库位置</td>

			<td align="left" valign="top">指定可以找到库运行所需的本机库的位置。</td>
		</tr>
		
		<tr>
			<td align="left" valign="top">是模块化的/不是模块化的</td>

			<td align="left" valign="top">指定是否应将库视为模块（或多个模块）。双击以编辑<a href="propertypages/ref-properties-buildpath-modularity.htm">模块化详细信息</a> 。</td>
		</tr>
		
		<tr>
			<td align="left" valign="top">访问规则</td>

			<td align="left" valign="top">指定库中包含的资源的访问规则。这允许隐藏库的内容。</td>
		</tr>
		<tr>
			<td align="left" valign="top">仅对测试源可见</td>
			<td align="left" valign="top">设置为“是”时，只有在编译标记为包含测试代码的源文件夹中的源时，才能访问引用库中的代码。</td>
		</tr>
	</tbody>
</table>

<h2 id="order-and-export">订单和导出选项卡</h2>

    <p>在<b>构建类路径顺序</b>列表中，可以单击<b>向上</b>和<b>向下</b>按钮以在此新项目的构建路径顺序中向上或向下移动选定的路径条目。</p>

    <p>选中的列表条目标记为已导出。导出的条目对需要该项目的项目可见。使用全<b>选</b>和<b>取消全选</b>更改所有条目的选中状态。源文件夹始终导出，无法取消选择。</p>
    
<h2 id="module-dependencies">“模块依赖关系”选项卡</h2>
	<p>对于面向Java 9或更高版本的项目，此页面可视化当前项目的所有依赖项的模块相关方面。在左侧， <b>所有模块</b>列表显示构建当前项目时考虑的所有模块。右侧显示所选模块的<b>详细信息</b> ，以及用于修改这些详细信息的按钮。</p>
	
	<p>“ <b>所有模块”</b>列表使用以下图标装饰来区分不同类型的模块：</p>
	<table border="1" cellspacing="0" cellpadding="5" summary="Module decorations">
	<tbody>
	<tr><th>装饰图标</th><th>含义</th></tr>
	<tr><td><img src="../images/org.eclipse.jdt.ui/combined/focus_module_2x.png" alt="焦点模块"></td>
		<td><b>焦点</b>模块，即由当前项目实现的模块。该模块将始终显示在列表的顶部，然后按字母顺序显示在其他模块中。</td>
	</tr><tr><td><img src="../images/org.eclipse.jdt.ui/combined/system_module_2x.png" alt="系统模块"></td>
		<td><b>系统</b>模块，即Java系统库提供的模块。</td>
	</tr><tr><td><img src="../images/org.eclipse.jdt.ui/combined/auto_module_2x.png" alt="自动模块"></td>
		<td>一个<b>自动</b>模块，即未使用<code>module-info.java</code>声明的模块，但是根据jar存档的文件名或<code>MANIFEST.MF</code>的属性以及包含的非空包列表等信息推断出来。</td>
	</tr></tbody>
	</table>
	<p>为所有模块列表提供的操作：</p>
	<ul>
	<li>您可以通过选择相应的模块并单击右侧的“ <b>删除”</b>按钮来删除一个或多个系统模块。请注意，需要从相应的“项目”或“库”选项卡上的构建路径中删除其他模块。</li>
	<li>如果当前项目缺少文件<code>module-info.java</code> ，即项目中的类型与“未命名模块”相关联，则默认情况下仅考虑系统模块的子集。在这种情况下，您可以通过单击<b>添加系统模块...</b>按钮来拉入更多系统模块。</li>
	</ul>
	<p><em>刚刚添加到此页面相应选项卡上的Modulepath的模块将不会立即显示在此列表中。在这种情况下，您需要单击“ <b>应用”</b>以更新“所有模块”列表。</em></p>
	
	<p><b>Details</b>树有两个根节点：</p>
	<ul>
	<li>在顶级节点<b>宣布<i>MODULENAME</i></b>你可以发现，在选择模块的描述中声明这些细节<b>的详细信息</b> ，即所有的交涉<b>要求</b> ， <b>出口</b>和<b>打开</b>声明。</li>
	<li>在<b>Configured details</b>下，可以配置所选模块的其他属性。</li>
	</ul>
		
	<p>页面此部分中的元素标有以下装饰图标之一：</p>
	<table border="1" cellspacing="0" cellpadding="5" summary="Detail icons and decorations">
	<tbody>
	<tr><th>装饰图标</th><th>含义</th></tr>
	<tr><td><img src="../images/org.eclipse.jdt.ui/combined/reads_module_2x.png" alt="读取模块"></td>
		<td>所选模块<b>读取的</b>模块。这对应于<b>要求</b>声明。</td>
	</tr><tr><td><img src="../images/org.eclipse.jdt.ui/combined/exports_package_2x.png" alt="出口包"></td>
		<td>所选模块<b>导出</b>到其他模块的包，可能使用<i>专用</i>包导出的模块列表进行限定。这对应于<b>出口</b>或<b>出口_到</b>声明。</td>
	</tr><tr><td><img src="../images/org.eclipse.jdt.ui/combined/opens_package_2x.png" alt="打开包裹"></td>
		<td>所选模块<b>打开</b>到其他模块（用于反射）的包，可能使用<i>独占</i>打开包的模块列表进行限定。这对应于<b>打开</b>或<b>打开_</b>声明。</td>
	</tr><tr><td><img src="../images/org.eclipse.jdt.ui/combined/patch_project_2x.png" alt="补丁模块"></td>
		<td><b>修补</b>所选模块的项目（或源文件夹），即该项目（或源文件夹）中的所有类型将<i>与</i>所选模块的一部分<i>相关联</i>并编译。</td>
	</tr></tbody>
	</table>
	
	<p>为“详细信息”树提供的操作，前提是已在“所有模块”列表中选择了一个模块：</p>
	<ul>
	<li>通过单击<b>Read Module ...，</b>您可以从select模块创建一个新的依赖项到一个或多个其他模块。</li>
	<li>通过单击<b>Expose Package ...，</b>您可以定义所选模块<b>导出</b>或<b>打开</b>其中一个包。单击此按钮时打开的对话框支持选择包的代码完成，还有一个可以指定目标模块列表的字段。</li>
	<li>通过双击现有<b>导出</b>或<b>打开</b>节点，您可以编辑其详细信息。单击<b>编辑...</b>按钮也可以完成相同的操作。</li>
	<li>通过单击<b>Patch with ...，</b>您可以选择项目或源文件夹以修补所选模块。</li>
	<li>单击“ <b>删除”</b>可以删除“已<b>配置详细信息”</b>节点下的任何节点</li>
	<li>可以将此选项卡中配置的所有内容转换为Java平台模块系统（JPMS）指定的一组命令行选项。为此，请单击“ <b>显示JPMS选项...”</b>按钮。<br>这些选项可用于从命令行调用编译器，或在启动程序时用作运行时选项，以确保JVM将看到此处配置的相同模块图。</li>
	</ul>
	
    <h3 class="related">相关概念</h3>
     <a href="../concepts/concept-build-classpath.htm">构建类路径</a><br>
     <a href="../concepts/concept-classpath-variables.htm">类路径变量</a><br>
     <a href="../concepts/concept-inclusion-exclusion-patterns.htm">包容和排斥模式</a>
    <h3 class="related">相关参考</h3>
     <a href="../reference/propertypages/ref-properties-buildpath-modularity.htm">模块化细节<i>（不建议使用）</i></a><br>
     <a href="../reference/ref-jdt-faq.htm">关于JDT的常见问题</a><br>
     <a href="../reference/preferences/java/buildpath/ref-preferences-classpath-variables.htm">类路径变量首选项</a><br>
     <a href="../reference/preferences/java/ref-preferences-build-path.htm">构建路径首选项</a><br>
     <a href="../reference/preferences/java/ref-preferences-compiler.htm">编译器首选项</a>
  </body>
</html>