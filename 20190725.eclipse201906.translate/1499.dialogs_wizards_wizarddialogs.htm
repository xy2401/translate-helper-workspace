<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>向导对话框</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >


<h2>向导对话框</h2>
<p>前面的示例为指定的扩展点提供了向导。另一种可能更常见的情况是，您希望从已定义的某个操作启动自己的插件向导。（在<a href="workbench_menus.htm" class="XRef">Workbench菜单中</a> ，我们讨论了为工作台提供操作的方法。）</p>
<p>通过将向导置于包含的对话框中，向导将显示在向导中。当您参与向导扩展时，将为您处理此详细信息。当您启动自己的向导时，必须通过将其包装在<a href="../reference/api/org/eclipse/jface/wizard/WizardDialog.html"><b>WizardDialog中</b></a>来自行显示它。</p>
<p>例如<b>，ReadmeCreationWizard</b>可以独立通过创建一个向导对话框，并将其与关联<b>ReadmeCreationWizard</b>推出。以下代码段显示了如何通过某个操作委托完成此操作。（该方法假定我们知道工作台和选择。）</p>
<pre>
   public void run(IAction action) {
      // Create the wizard
      ReadmeCreationWizard wizard = new ReadmeCreationWizard();
      wizard.init(getWorkbench(), selection);

      // Create the wizard dialog
      WizardDialog dialog = new WizardDialog
         (getWorkbench().getActiveWorkbenchWindow().getShell(),wizard);
      // Open the wizard dialog
      dialog.open();
   }</pre>
   <p>如果您需要在插件的用户界面中的任何其他位置嵌入向导，则界面<a href="../reference/api/org/eclipse/jface/wizard/IWizardContainer.html"><b>IWizardContainer</b></a>将定义用于托管向导的必要协议。</p>



</body>
</html>