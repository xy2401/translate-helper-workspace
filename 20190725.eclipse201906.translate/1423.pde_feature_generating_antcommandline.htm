<html lang="zh-Hans" >
<head>
  <meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <link rel="STYLESHEET" href="../guide/book.css" type="text/css">
  <title>命令行Ant脚本生成</title>
</head>
<body >
<h1>从命令行生成Ant脚本</h1>
<p>Ant脚本通常使用插件开发环境（PDE）生成，但也可以手动或从其他脚本生成它们。<br>实际上，PDE公开Ant任务以生成各种构建脚本。构建脚本生成工具驻留在以下任务中。还列出了每个任务的参数。
</p>
<ul>
  <li><b><a name="eclipseFetch">eclipse.fetch</a></b> ：生成一个Ant脚本，用于从CVS存储库中获取内容。eclipse fetch由一个文件驱动，其格式如下所述（参见<a href="#directoryFileFormat">目录文件格式</a> ）。
    <table border="1" cellpadding="1" cellspacing="0" style="text-align:left;margin-left:40px;width:90%">
      <tbody>
        <tr>
          <td style="vertical-align:top;text-align:left"><span style="font-style:italic">要素</span> ：<br>
          </td>
          <td style="vertical-align:top">要获取的条目。期望的格式是目录文件格式中指定的形式类型@ id [，version];</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">buildDirectory</span> ：<br>
          </td>
          <td style="vertical-align:top">将生成fetch脚本的目录以及将检出哪些功能和插件项目;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">目录</span> ：<br>
          </td>
          <td style="vertical-align:top">目录文件的路径;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">孩子们</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，指定是否应调用包含的插件和片段的脚本生成。默认设置为true;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">cvspassfile</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，CVS密码文件的名称;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">fetchTag</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，用给定值覆盖目录文件中提供的标记;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">configInfo</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，一个＆符号分隔的配置列表，指示目标配置。默认设置为独立于平台;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">递归生成</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，指定是否应为嵌套功能生成提取脚本。默认设置为true。</td>
        </tr>
      </tbody>
    </table>
    <br>
  </li>
</ul>
<ul>
  <li><b>eclipse.buildScript</b> ：为给定元素生成build.xml文件，以及pde构建基础结构使用的其他脚本。
    <table border="1" cellpadding="1" cellspacing="0" style="width:90%;text-align:left;margin-left:40px">
      <tbody>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">要素</span> ：<br>
          </td>
          <td style="vertical-align:top">要建的条目。条目应该是目录文件格式中指定的形式类型@ id [，version];</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">buildDirectory：</span><br>
          </td>
          <td style="vertical-align:top">要构建的功能部件和插件所在的目录。插件和功能必须分别位于<tt>插件</tt>和<tt>功能</tt>文件夹中;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">孩子们</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，指定是否应调用包含的插件和片段的脚本生成。默认设置为true;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">递归生成</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，指定是否应调用包含的功能的脚本生成。默认设置为true;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">devEntries</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，以逗号分隔的目录列表，给予编译类路径;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">buildingOSGi</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，表示目标是否为3.x.或2.1。默认为true;<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">baseLocation</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，表示包含目标eclipse安装的文件夹，其中包含<tt>features /</tt>和<tt>plugins /</tt> subdirectories;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">configInfo</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的，＆符号分隔的配置列表表示目标配置。默认设置为独立于平台;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">pluginPath</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的，平台文件分隔符分隔的位置列表，从中可以找到其他插件;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">archivesFormat</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的，一个＆符号分隔的配置列表和每个配置的预期输出格式。格式由配置中的短划线（ - ）分隔。支持的值分别是：folder，tar，zip，antZip，分别表示不归档，使用tar创建归档，使用平台上可用的info zip版本，使用ant zip。默认值为antZip;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">产品</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的'/'分隔路径指向正在构建的RCP产品的位置。路径的第一段必须引用包含.product文件的插件的插件ID;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">signJars</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，表示生成的脚本是否必须为功能和插件签名。默认值为false。sign任务的参数由以下ant属性控制：sign.alias，sign.keystore和sign.storepass分别从ant <a href="http://ant.apache.org/manual/Tasks/signjar.html">signJar任务</a>传递给alias，keystore和storepass参数。默认值为false;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">generateJnlp</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，表示是否应为正在构建的所有功能生成jnlp文件;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">outputUpdateJars</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，在设置时以更新站点格式生成插件和功能。默认值为false。请注意，不会生成或更新site.xml;</td>
        </tr>

        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">groupConfiguration</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，是否将所有正在构建的配置分组到单个存档中;<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">generateVersionsLists</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，是否生成列出已构建的功能和插件版本的属性文件;<br>
          </td>
        </tr>

        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">filteredDependencyCheck</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，将构建期间要考虑的插件和功能集限制为可从功能中访问的那些插件和功能;<br>
          </td>
        </tr>
        
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">filterP2Base</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，约束要从baseLocation考虑的插件和功能集到那些被p2安装的插件和功能;<br>
          </td>
        </tr>
        
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">generateFeatureVersionSuffix：</span>
          </td>
          <td style="vertical-align:top">可选，是否生成功能版本后缀。另见<a href="pde_version_qualifiers.htm">版本限定符</a> ;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">generatedVersionLength</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，生成的功能版本后缀的长度。默认情况下，它设置为28。另见<a href="pde_version_qualifiers.htm">版本限定符</a> ;<br>
          </td>
        </tr>
        
       <tr>
          <td style="vertical-align:top"><span style="font-style:italic">significantVersionDigits</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，生成要素版本后缀时使用的有效位数。另见<a href="pde_version_qualifiers.htm">版本限定符</a> ;<br>
          </td>
        </tr>
        
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">forceContextQualifier</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，使用给定的值来替换插件和功能所使用的.qualifier。另见<a href="pde_version_qualifiers.htm">版本限定符</a> ;<br>
          </td>
        </tr>
                
      </tbody>
    </table>
  </li>
</ul>
<ul>
  <li><a name="eclipseGenerateFeature"><span style="font-weight:bold">eclipse.generateFeature</span></a> ：生成一个包含提供的元素的功能。此任务用于<a href="pde_product_build.htm">从产品配置文件构建RCP应用程序</a> 。<br>
    <table border="1" cellpadding="1" cellspacing="0" style="width:90%;text-align:left;margin-left:40px">
      <tbody>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">featureId</span> ：<br>
          </td>
          <td style="vertical-align:top">要生成的功能的ID。<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">buildDirectory</span> ：<br>
          </td>
          <td style="vertical-align:top">要包含的功能和插件（在<tt>/ features</tt>和<tt>/ plugins</tt>子目录中）所在的目录。生成的功能将放在/ features子目录中。<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">baseLocation</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，表示包含已安装功能和插件的文件夹<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">productFile</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的，基于生成的功能的产品文件。<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">验证</span> ：<br>
          </td>
          <td style="vertical-align:top">是否使用解析程序验证提供的插件和功能是否可用。这还决定了该功能是否能够正确处理将进行JAR的平台特定片段和插件。如果要包含在要素中的所有元素都在本地可用，则应将验证设置为True。如果需要从存储库中提取元素，请将verify设置为False，使用生成的功能获取所需的插件和功能，然后使用verify = True重新生成容器功能。<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">pluginPath</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，平台文件分隔符分隔的位置列表，从中可以找到其他插件</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">configInfo</span> ：<br>
          </td>
          <td style="vertical-align:top">可选的，＆符号分隔的配置列表表示目标配置。默认设置为独立于平台;</td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">pluginList</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，以逗号分隔的插件ID列表，包含在生成的功能中。（支持属性，见下文）<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">featureList</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，以逗号分隔的要素ID列表，包含在生成的要素中。（支持属性，见下文）<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">fragmentList</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，包含在生成的要素中的逗号分隔的片段ID列表。（支持属性，见下文）<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">buildPropertiesFile</span> ：<br>
          </td>
          <td style="vertical-align:top">optional，属性文件的位置，其内容应该用作生成的特性的build.properties。<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align:top"><span style="font-style:italic">includeLaunchers</span> ：<br>
          </td>
          <td style="vertical-align:top">可选，无论是否包含equinox发射器，默认值为“true”。<br>
          </td>
        </tr>
      </tbody>
    </table>
    <br>
    <p>eclipse.generateFeature任务的<tt>pluginList</tt> ， <tt>featureList</tt>和<tt>fragmentList</tt>参数都支持属性。这些论点都采用以下形式：</p>
    <pre style="text-align: center;">List = &lt;element-id&gt;[;&lt;attribute&gt;=&lt;value&gt;]* [,&lt;element-id&gt;[;&lt;attribute&gt;=&lt;value&gt;]*]*</pre>
    <p>每个attribute = value对将插入到与给定元素对应的生成的xml中。<b>例：</b></p>
    <pre>
    	featureList = org.eclipse.feature;optional=true
    	pluginList = org.eclipse.plugin.A;unpack=true
    	fragmentList=org.eclipse.fragment.a;os=win32,org.eclipse.fragment.b;os=linux;ws=gtk;arch=x86
    	
    	&lt;feature ...&gt;
    	     ...
    	     &lt;includes id="org.eclipse.feature" version="0.0.0" optional="true" /&gt;
    	     ...
    	     &lt;plugin id="org.eclipse.plugin.A" version="0.0.0" unpack="true" /&gt;
    	     &lt;plugin id="org.eclipse.fragment.a" version="0.0.0" os="win32" fragment="true" /&gt;
    	     &lt;plugin id="org.eclipse.fragment.b" version="0.0.0" os="linux" ws="gtk" arch="x86" fragment="true" /&gt;
    	     ...
    	&lt;/feature&gt;
    </pre>
  </li>
</ul>
<h4>例子</h4>
<pre>&lt;eclipse.fetch elements="bundle@org.eclipse.osgi"<br>		buildDirectory="c:\toBuild"<br>		directory="directory.txt"<br>		configInfo="win32,win32,x86 &amp; linux, motif, x86"<br>		/&gt;<br>		<br>&lt;eclipse.buildScript elements="bundle@org.eclipse.osgi" <br>		buildDirectory="c:\toBuild"<br>		archivesFormat="macosx, carbon, ppc - tar"/&gt;<br></pre>
<h3><a name="directoryFileFormat">目录文件格式</a></h3>目录文件用于指示可以获取插件和功能的位置以及它们的版本。它是一个Java属性文件，其键始终为<tt>@ id [，version]</tt>形式<tt>，</tt>但值为开放式。使用映射文件获取元素时，目录文件是所有映射文件的串联，有关映射文件的更多详细信息，请参阅<a href="pde_fetch_phase.htm">从存储库中获取</a> 。

<h3>使用目标</h3>
<p>之前描述的任务仅在Eclipse运行时才有效。在使用Eclipse任务执行Ant脚本的特定方案中，必须使用Eclipse Ant Runner应用程序运行脚本。此特定情况的命令行如下：</p>
<pre>  java -jar plugins/org.eclipse.equinox.launcher_&lt;version&gt;.jar -application org.eclipse.ant.core.antRunner -buildfile build.xml<br> </pre>
<p>请注意，应用程序之后出现的参数是传递给Ant的参数。
</p>
</body>
</html>