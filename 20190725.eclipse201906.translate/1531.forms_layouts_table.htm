<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>TableWrapLayout</title>
</head>
<body bgcolor="#ffffff" >

<h1>TableWrapLayout</h1>
<p align="left">TableWrapLayout是一个基于网格的布局，非常类似于SWT的多功能GridLayout。它与GridLayout的不同之处在于它使用的布局算法更像HTML表。它试图尊重所提供的客户区宽度并垂直增长以进行补偿。</p>
<p align="left">GridLayout和TableWrapLayout之间有许多相似之处。两人都组织网格儿童。两者都有布局数据，指示布局如何处理每个控件。两者都可以接受哪些控件应该占用多余空间的提示等。</p>
<p align="left">但是，它们在布局方法上有根本的不同。<code>TableWrapLayout</code>以列开头。它计算每列的最小宽度，首选宽度和最大宽度，并使用此信息分配多余空间。当在列之间划分空间时，它也会尝试公平，这样就不会有一些控件的多余包装。</p>
<p align="left">可以混合使用<code>GridLayout</code>和<code>
TableWrapLayout</code>但使用<code>GridLayout</code>的分支是包装停止的分支。如果您不希望它包装，则这是完全可以接受的（如果复合包含无法包装的控件，如文本，按钮，树等）。但是，您应该从表单主体到需要换行的每个文本控件具有不间断的TableWrapLayouts路径。</p>
</body>
</html>