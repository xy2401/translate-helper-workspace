<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>将启动器添加到平台</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h3>将启动器添加到平台</h3>
<p>您的插件可以使用<a href="../reference/extension-points/org_eclipse_debug_core_launchConfigurationTypes.html"><b>org.eclipse.debug.core.launchConfigurationTypes</b></a>扩展点将启动配置类型添加到平台。此扩展点允许您使用唯一ID声明配置类型。您必须提供<a href="../reference/api/org/eclipse/debug/core/model/ILaunchConfigurationDelegate.html"><b>ILaunchConfigurationDelegate</b></a>的相应实现。委托负责以指定模式启动其启动配置。（可选）您可以实现<a href="../reference/api/org/eclipse/debug/core/model/ILaunchConfigurationDelegate2.html"><b>ILaunchConfigurationDelegate2</b></a> ，它增强了委托接口，允许您的委托中止启动，在启动之前在工作区中构建相关项目，以及控制启动时使用的启动对象的创建。
</p>
<p>除了定义委托之外，您还可以指定委托支持的启动模式，以及向用户显示此类型启动器时应使用的名称。</p>
<p>以下标记显示了Java工具如何声明用于启动本地Java程序的Java启动配置：</p>
<pre>&lt;extension point = &quot;org.eclipse.debug.core.launchConfigurationTypes&quot;&gt;
   &lt;launchConfigurationType
   	   id=&quot;org.eclipse.jdt.launching.localJavaApplication&quot;
	   <b>name=&quot;%localJavaApplication&quot;
	   delegate=&quot;org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate&quot;
	   modes= &quot;run, debug&quot;</b>
	   sourceLocatorId=&quot;org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector&quot;
       sourcePathComputerId=&quot;org.eclipse.jdt.launching.sourceLookup.javaSourcePathComputer&quot;&gt;
   &lt;/launchConfigurationType&gt;
&lt;/extension&gt;</pre>
<p>此扩展定义了一个启动配置委托，该委托可用于运行或调试使用本地Java启动配置启动的程序。</p>
<h4>定义新的启动模式</h4>
<p>我们之前提到该平台定义了用于运行，调试或分析程序的启动模式。这些模式使用<a href="../reference/extension-points/org_eclipse_debug_core_launchModes.html"><b>org.eclipse.debug.core.launchModes</b></a>扩展点定义。此扩展点允许您通过定义其字符串模式名称以及应向用户显示以描述模式的标签来声明启动模式。以下标记显示了平台的三种标准启动模式的定义：</p>
<pre>
&lt;extension point="org.eclipse.debug.core.launchModes"&gt;
	&lt;launchMode
		label="%run"
		mode="run"&gt;
	&lt;/launchMode&gt;
	&lt;launchMode
		label="%debug"
		mode="debug"&gt;
	&lt;/launchMode&gt;
	&lt;launchMode
		label="%profile"
		mode="profile"&gt;
	&lt;/launchMode&gt;
&lt;/extension&gt;
</pre>
<p>请注意，该模式与任何特定的启动配置类型都没有关联。如前所示，当为配置类型指定启动委托时，会发生该关联。</p>
<h4>定义启动代理</h4>
<p>由于可以独立于启动配置类型指定启动模式，因此可能会定义原始代理未针对启动配置实现的新模式。在这种情况下，插件可以定义启动委托，该委托实现特定启动配置类型的特定模式。这可以使用<a href="../reference/extension-points/org_eclipse_debug_core_launchDelegates.html"><b>org.eclipse.debug.core.launchDelegates</b></a>扩展点来完成。此扩展点允许您定义实现给定配置类型的指定模式的启动委托。以下标记显示了如何定义用于分析本地Java应用程序的委托：</p>
<pre>
&lt;extension point="org.eclipse.debug.core.launchDelegates"&gt;
  &lt;launchDelegate
   id=&quot;com.example.MyJavaProfileDelegate&quot;
   delegate=&quot;com.example.MyJavaProfileDelegate&quot;
   type=&quot;org.eclipse.jdt.launching.localJavaApplication&quot;
   modes=&quot;profile&quot;&gt;
  &lt;/launchDelegate&gt;
 &lt;/extension&gt;
</pre>
<p>委托的规范类似于定义启动配置类型时的方式，除了在这种情况下指定启动配置的类型以及支持的模式。如前所述，委托必须实现<a href="../reference/api/org/eclipse/debug/core/model/ILaunchConfigurationDelegate.html"><b>ILaunchConfigurationDelegate</b></a> ，并且可以选择实现<a href="../reference/api/org/eclipse/debug/core/model/ILaunchConfigurationDelegate2.html"><b>ILaunchConfigurationDelegate2</b></a>以更好地控制启动序列。</p>
<h4>其他参考</h4>
<p><a href="http://www.eclipse.org/articles/Article-Launch-Framework/launch.html">我们已经解除了：Eclipse中的Launching Framework</a>提供了一个开始完成定义自己的启动类型的示例。</p>

</body>
</html>