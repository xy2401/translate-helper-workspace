<html lang="zh-Hans" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
   <meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2011. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></meta>
   <link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
   <title>在Eclipse中开始使用APT</title>
</head>

<body dir="ltr">
<h1>入门</h1>
<h2>Eclipse中的APT</h2>

<p>Java注释处理器是一个编译器插件，可以在编译源代码时收集有关源代码的信息，生成其他Java类型或其他资源文件，并发布警告和错误。Eclipse 3.2为使用<a href="http://download.oracle.com/javase/6/docs/jdk/api/apt/mirror/overview-summary.html">Java 5 Mirror API的</a>注释处理器提供了支持，Eclipse 3.3增加了对使用<a href="http://download.oracle.com/javase/6/docs/api/javax/annotation/processing/package-summary.html">Java 6注释处理API的</a>处理器的支持。</p>
<p>在构建期间可以调用Java 5和Java 6注释处理器。处理器生成的错误和警告将在Problems视图中报告，并且将创建构建工件，就像从命令行运行Sun的apt工具（用于Java 5）或javac编译器（用于Java 6）一样。</p>
<p>当您在编辑器中键入时，也可以执行Java 5处理器。这允许处理器在编辑期间报告错误，这可能是有帮助的。可以通过注释处理器属性对话框启用或禁用此功能。除了报告错误之外，Java 5处理器还可以在编辑器中键入时生成文件。仅当处理器在其<a href="http://download.oracle.com/javase/6/docs/jdk/api/apt/mirror/com/sun/mirror/apt/AnnotationProcessorFactory.html#supportedOptions()"><code>AnnotationProcessorFactory.supportedOptions()</code></a>实现返回的字符串集中包含“enableTypeGenerationInEditor”时，才会启用此功能。该字符串在<code>org.eclipse.jdt.apt.core.类中定义<code>org.eclipse.jdt.apt.core.AptPreferenceConstants</code> 。</p>
<p>Eclipse在编辑器中输入时不支持执行Java 6处理器;您必须保存和构建，以便Java 6处理器报告错误或生成文件。</p>

<p>有关APT插件如何工作以及如何编写自己的注释处理器的更多详细信息，您可以查看<a href="http://www.eclipse.org/jdt/apt/index.html">JDT-APT项目网站</a> 。
</p>

<h3>批量编译</h3>Eclipse Java编译器可以在Eclipse IDE之外使用<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/tasks/task-using_batch_compiler.htm">批处理模式编译器</a> ，通过ecj.jar或Java 6 <a href="http://download.oracle.com/javase/6/docs/api/javax/tools/JavaCompiler.html"><code>javax.tools.JavaCompiler</code></a>接口。Java 5注释处理器不能以这种方式使用，但完全支持Java 6注释处理器。

<h3>启用注释处理</h3>您必须将项目的编译器配置为在Java-&gt; Compiler下的首选项中使用Java 5.0或更高版本的兼容性：<p>
<img src="images/compiler_dialog.png" alt="编译器首选项页面的屏幕截图"></p>
<p>只有在项目的Java编译器合规性级别设置为Java 6或更高版本且Eclipse在Java 1.6或更高版本的JVM上运行时，才会运行Java 6处理器。</p>  
<p>接下来，您需要在Java-&gt; Compiler-&gt; Annotation Processing下启用注释处理：</p>
<p>
<img src="images/annotation_processing.png" alt="Annotation Processing属性页面的屏幕截图"></p>
<p>在此对话框中，您还可以根据需要指定生成的源目录，并提供必要的任何处理器选项。</p>
<p>有关详细信息，请参阅有关<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/reference/ref-apt-config.htm">注释处理首选项</a>的文档。</p>

<h3>添加注释处理器</h3>您可以在Java-&gt; Compiler-&gt; Annotation Processing-&gt; Factory Path下为项目添加注释处理器：<p>
<img src="images/factory_path.png" alt="Factory Path属性页面的屏幕截图"></p>
<p>处理器可以包含在jar文件或Eclipse插件中。Factory Path列表包括Java 5和Java 6处理器。</p>

<h3>处理注释处理器</h3>
<p>在构建项目之前，项目中使用的注释处理器必须以二进制形式（作为jar文件或插件）存在。因此，不可能在同一项目中包含要处理的处理器代码和代码。建议注释处理器的开发人员将注释处理器项目与包含要处理的目标代码的项目分开。实际上，最好将它们保存在单独的工作空间中，以便于调试。</p>

<h3>工厂路径和源控制</h3>

<p>工厂路径存储在项目根目录下名为“.factorypath”的文件中，类似于类路径，并且应该与类路径相同的方式处理版本控制。为了避免硬编码到工厂罐的路径，您可以通过“Add Jars ...”按钮使用项目相对的jar，或者通过“Add Variable ...”按钮使用<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/concepts/concept-classpath-variables.htm">classpath变量</a> 。</p>

<h3>处理器选项和源代码控制</h3>

<p>处理器选项存储在每个项目的.settings文件夹中，这也是存储其他编译器选项的位置。.settings文件夹中的所有文件通常都使用源代码管理进行管理。您可能需要使用路径作为传递给注释处理器的一些选项。同样，通过避免绝对路径的硬编码，您将能够在源代码管理中共享您的配置。为此，Eclipse支持在处理器选项中使用变量。有关详细信息，请参阅<a href="PLUGINS_ROOT/org.eclipse.jdt.doc.user/reference/ref-apt-processorOptionsInput.htm">处理器选件文档</a> 。
</p>
</body>
</html>