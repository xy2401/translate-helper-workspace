<html lang="zh-Hans" dir="ltr">
  <head>
	<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2007. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page."></meta>
    <link rel="stylesheet" href="../book.css" type="text/css" charset="ISO-8859-1"></link>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"></meta>
    <meta http-equiv="Content-Style-Type" content="text/css"></meta>
    <title>使用代码模板</title>
  </head>
  <body dir="ltr">
    <h1>使用代码模板</h1>
    <p>在本节中，您将使用内容辅助来填充常见循环结构的模板。如果尚未打开，请在Java编辑器中打开<em>junit.samples / VectorTest.java</em>文件。
    </p>
    <ol>
      <li>键入以下内容开始添加新方法：<br>
        <p><code>public void testValues（）{<br>Integer [] expected = new Integer [3];<br>对于<br>
        </code></p>
      </li>
      <li>将光标放在<code>for</code>的末尾，按<kbd>Ctrl + Space</kbd>启用内容辅助。您将看到“for”循环的常用模板列表。单击模板或使用<kbd>向上</kbd>或<kbd>向下</kbd>箭头键选择模板时，您将在其帮助消息中看到模板的代码。请注意，本地数组名称是自动猜测的。
		<p>
		<img src="images/editor_vectortest_for_template.png" alt="内容协助">
		</p>
      </li>
      <li>选择<code>for - iterate over array</code>条目，然后按<kbd>Enter</kbd>确认模板。该模板将插入您的源代码中。
		<p>
		<img src="images/editor_vectortest_for_template_exp.png" alt="插入模板">
		</p>
      </li>
      <li>接下来，我们将索引变量的名称从<em>i</em>更改为<em>e</em> 。为此，只需按<kbd>e</kbd>即可自动选择索引变量。观察索引变量的名称在所有位置都会更改。插入模板时，对同一变量的所有引用都相互连接。因此，更改一个也会改变所有其他值。
		<p>
		<img src="images/editor_vectortest_for_template_exp_e.png" alt="改为模板">
		</p>
      </li>
      <li>按<kbd>Tab</kbd>键将光标移动到代码模板的下一个变量。这是<em>预期</em>的数组。
		<p>
		<img src="images/editor_vectortest_for_template_exp_expected.png" alt="改为模板">
		</p>由于我们不想更改名称（它是由模板直接猜到的），我们再次按Tab键，因为没有任何变量可供编辑。
      </li>
      <li>完成<code>for</code>循环如下：<br>
        <p><code>for（int e = 0; e &lt;expected.length; e ++）{<br>expected [e] = new Integer（e + 1）;<br>}<br>Integer [] actual = to<br>
        </code></p>
      </li>
      <li>将光标放在<code>to</code>的末尾，按<kbd>Ctrl + Space</kbd>启用内容辅助。选择<code>toarray - convert collection to array</code> ，然后按<kbd>Enter</kbd>确认选择（或双击选择）。
		<p>
        <img src="images/editor_vectortest_toarray_template.png" alt="toarray模板">
		</p>模板将插入编辑器中，并突出显示并选择<code>type</code> 。
		<p>
		<img src="images/editor_vectortest_toarray_template_exp.png" alt="插入toarray模板">
		</p>
      </li>
      <li>键入<code>Integer</code>覆盖选择。更改选择时，数组构造函数的类型会更改。
      </li>
      <li>按<kbd>Tab</kbd>键将选择移动到<code>collection</code> ，并通过键入<code>fFull</code>覆盖它。
		<p>
		<img src="images/editor_vectortest_toarray_template_integer.png" alt="插入toarray模板">
		</p>
      </li>
      <li>添加分号和以下代码行以完成该方法：<br>
        <p><code>assertEquals（expected.length，actual.length）;<br>for（int i = 0; i &lt;actual.length; i ++）<br>assertEquals（expected [i]，actual [i]）;<br>
        </code></p>
      </li>
      <li>保存文件。
      </li>
    </ol>
    <p class="nav_footer" id="nav_footer">下一节： <a href="qs-OrganizeImports.htm">组织导入语句</a>
</p>
    <h3 class="related">相关概念</h3>
       <a href="../concepts/concept-java-editor.htm">Java编辑器</a><br>
       <a href="../concepts/concept-editor-templates.htm">模板</a>

    <h3 class="related">相关参考</h3>
       <a href="../reference/preferences/java/editor/ref-preferences-templates.htm">模板首选项</a><br>
       <a href="../reference/preferences/java/ref-preferences-editor.htm">Java编辑器首选项</a>

  </body>
</html>