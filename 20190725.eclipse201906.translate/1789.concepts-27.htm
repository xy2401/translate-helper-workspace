<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

     
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
     
  <meta http-equiv="Content-Style-Type" content="text/css">
      
  <link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
  <title>版本</title>
         
  <meta name="keyword" content="team">
</head>
  <body  style="background-color:rgb(255,255,255)">
   
<h1 class="Head">版本</h1>
   
<p class="Para">对资源进行版本控制，以便在一个特定时间点捕获资源当前状态的快照。CVS中的资源通过使用版本标签标记来进行版本化。当资源被版本化时，这意味着可以从存储库中检索它的不可修改的副本。</p>
   
<p class="Intro">对项目进行版本控制可以节省项目中所有资源版本的排列。可以对项目（文件和文件夹）以外的资源进行版本控制。但是，将整个项目一起版本更为常见，因为项目中包含的资源通常高度相互依赖。可以从工作空间或CVS存储库视图中的分支（包括HEAD）对项目进行版本控制。这两种方法之间的区别在于决定哪些子资源版本应该是项目版本的一部分。
 </p>
 
<p class="Para">将项目标记为<i>Workbench中</i>的版本时， <i>Workbench</i>中文件的基本修订版本标记为属于该版本。这是版本化项目的首选方法，因为您确切知道版本中的文件修订版本。如果您有传出更改或未提交的更改，则允许此操作。简单地忽略未提交的更改，并且具有传出更改的资源仍可以将其基本修订作为版本的一部分。如果必须在开始更改资源的位置拆分项目并将资源提交到另一个分支，则使用未提交或传出更改对项目进行版本控制非常方便。</p>
   
<p class="Para">在CVS存储库视图中将项目标记为<i>分支</i>的版本时，您将在该时刻对分支中的最新资源版本进行版本控制。如果您不知道分支中提交的内容，则不应从分支中对项目进行版本控制。因此，从Workbench进行版本控制通常更可取。</p>
     
<p class="Para"> </p><h3 class="related">相关概念</h3>
<a href="concepts-27c.htm">CVS存储库</a><br>
<a href="concepts-27b.htm">分行</a><br>
<a href="concepts-17a.htm">当地历史</a><br>
<a href="concepts-12.htm">资源</a>

<h3 class="related">相关任务</h3>
<a href="../tasks/tasks-100.htm">创建项目的版本</a><br>
<a href="../tasks/tasks-118.htm">版本控制存储库中的项目</a><br>
<a href="../tasks/tasks-107b.htm">启用CVS资源装饰</a><br>
<a href="../tasks/tasks-105c.htm">移动版本标签</a>

<h3 class="related">相关参考</h3>
<a href="../reference/ref-47.htm">CVS</a>

</body></html>