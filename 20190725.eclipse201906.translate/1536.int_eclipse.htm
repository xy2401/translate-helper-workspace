<html lang="zh-Hans" >
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="../book.css" type="text/css" charset="ISO-8859-1">
<title>什么是Eclipse？</title>

<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body bgcolor="#ffffff" >
<h2>什么是Eclipse？</h2>
<p>Eclipse是一个从头开始设计的平台，用于构建集成的Web和应用程序开发工具。按照设计，平台本身不提供大量的最终用户功能。平台的价值在于它鼓励：基于<b>插件</b>模型的集成功能的快速开发。</p>
<p>Eclipse提供了一个用于处理工具的通用用户界面（UI）模型。它旨在运行在多个操作系统上，同时提供与每个底层操作系统的可靠集成。插件可以编程到Eclipse便携式API，并在任何支持的操作系统上保持不变。</p>
<p>Eclipse的核心是用于动态发现，加载和运行插件的体系结构。该平台处理查找和运行正确代码的后勤工作。平台UI提供标准用户导航模型。然后，每个插件都可以专注于完成少量任务。什么样的任务？定义，测试，动画，发布，编译，调试，图表...唯一的限制是你的想象力。</p>

<h3>开放式架构</h3>
<p>Eclipse平台定义了一个开放式架构，以便每个插件开发团队可以专注于他们的专业领域。让存储库专家构建后端，可用性专家构建最终用户工具。如果平台设计得很好，可以添加重要的新功能和集成级别，而不会影响其他工具。</p>
<p>Eclipse平台使用通用工作台的模型来集成最终用户的工具。您开发的工具可以使用名为<b>扩展点的</b>定义良好的钩子插入工作台。</p>
<p>平台本身构建在多个插件中，每个插件定义了低级插件扩展点的扩展，并依次定义了自己的扩展点以进行进一步的自定义。此扩展模型允许插件开发人员向基本工具平台添加各种功能。每个工具的工件（例如文件和其他数据）由公共平台资源模型协调。</p>
<p>该平台为用户提供了使用这些工具的通用方法，并为他们使用插件创建的资源提供了集成管理。</p>
<p>插件开发人员也从这种架构中获益。该平台管理不同运行时环境的复杂性，例如不同的操作系统或工作组服务器环境。插件开发人员可以专注于他们的特定任务，而不是担心这些集成问题。</p>



<h3>平台结构</h3>
<p>Eclipse平台本身被构造为在一个或多个插件中实现的子系统。子系统构建在一个小型运行时引擎之上。下图描绘了一个简化视图。</p>

<p>
<img src="images/arch-npi.jpg" alt="平台运行时库，具有添加功能的插件组" border="0"> </p>

<p>构成子系统的插件定义了用于向平台添加行为的扩展点。下表描述了作为一个或多个插件实现的平台的主要运行时组件。</p>

<table border="1" width="100%">
  <tr>
    <td width="29%">

<h4>平台运行时</h4>
    </td>
    <td width="71%">定义扩展点和插件模型。它动态发现插件并在平台注册表中维护有关插件及其扩展点的信息。根据平台的用户操作，在需要时启动插件。运行时使用OSGi框架实现。</td>
  </tr>
  <tr>
    <td width="29%">
<h4>资源管理（工作区）</h4>
    </td>
    <td width="71%">定义用于创建和管理由工具生成并保留在文件系统中的资源（项目，文件和文件夹）的API。</td>
  </tr>
  <tr>
    <td width="29%">
<h4>Workbench UI</h4>
    </td>
    <td width="71%">实现用户驾驶舱以导航平台。它定义了用于添加UI组件（例如视图或菜单操作）的扩展点。它提供了用于构建用户界面的其他工具包（JFace和SWT）。UI服务的结构使得UI插件的子集可用于构建独立于资源管理和工作空间模型的富客户端应用程序。以IDE为中心的插件定义了用于导航和操作资源的附加功能。</td>
  </tr>
  <tr>
    <td width="29%">


<h4>帮助系统</h4>
    </td>
    <td width="71%">定义插件的扩展点，以提供可浏览书籍的帮助或其他文档。</td>
  </tr>
  <tr>
    <td width="40%">


<h4>团队支持</h4>
    </td>
    <td width="60%">定义用于管理和版本化资源的团队编程模型。</td>
  </tr>
  <tr>
    <td width="40%">


<h4>调试支持</h4>
    </td>
    <td width="60%">定义与语言无关的调试模型和用于构建调试器和启动器的UI类。</td>
  </tr>
  <tr>
    <td width="40%">
  
<h4>其他工具</h4>
    </td>
    <td width="60%">其他实用程序插件提供功能，例如搜索和比较资源，使用XML配置文件执行构建，以及从服务器动态更新平台。</td>
  </tr>
</table>



<h3>盒子外面</h3>
<p>开箱即用 - 或者不在网络上 - 基本平台是一个集成开发环境（IDE），适用于任何事物（特别是没有任何特定内容）。</p>
<p>
<img src="images/emptyworkbench.png" alt="工作台窗口" border="0"></p>
<p>它是决定平台最终功能的插件。这就是为什么Eclipse SDK附带了额外的插件来增强SDK的功能。</p>
<p>您的插件可以为编辑和操作其他类型的资源提供支持，例如Java文件，C程序，Word文档，HTML页面和JSP文件。</p>


</body>
</html>